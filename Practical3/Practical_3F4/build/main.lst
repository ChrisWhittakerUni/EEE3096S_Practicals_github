ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define variables you think you might need
  46:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** #define MAX_ITER 100
  50:Core/Src/main.c **** int height;
  51:Core/Src/main.c **** int width;
  52:Core/Src/main.c **** int test_values[5] = {128, 160, 192, 224, 256};
  53:Core/Src/main.c **** int imag_dim;
  54:Core/Src/main.c **** uint64_t checksum;
  55:Core/Src/main.c **** int imag_dim_arr[5];
  56:Core/Src/main.c **** uint64_t time_elapsed_d_arr[5];
  57:Core/Src/main.c **** uint64_t time_elapsed_f_arr[5];
  58:Core/Src/main.c **** uint64_t checksum_d_arr[5];
  59:Core/Src/main.c **** uint64_t checksum_f_arr[5];
  60:Core/Src/main.c **** uint64_t start_time;
  61:Core/Src/main.c **** uint64_t end_time;
  62:Core/Src/main.c **** uint64_t time_elapsed;
  63:Core/Src/main.c **** int place=0;
  64:Core/Src/main.c **** /* USER CODE END PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.c **** void SystemClock_Config(void);
  68:Core/Src/main.c **** static void MX_GPIO_Init(void);
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  71:Core/Src/main.c **** // function declarations
  72:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  73:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /**
  83:Core/Src/main.c ****   * @brief  The application entry point.
  84:Core/Src/main.c ****   * @retval int
  85:Core/Src/main.c ****   */
  86:Core/Src/main.c **** int main(void)
  87:Core/Src/main.c **** {
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Core/Src/main.c ****   HAL_Init();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Configure the system clock */
 103:Core/Src/main.c ****   SystemClock_Config();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Initialize all configured peripherals */
 110:Core/Src/main.c ****   MX_GPIO_Init();
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   // loop to make testing easier
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   //loop for double mandelbrot
 116:Core/Src/main.c ****    place = 0;
 117:Core/Src/main.c ****    for(int i=0; i<5; i++){
 118:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 119:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000001;
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****  	  // set height and width
 122:Core/Src/main.c ****  	  imag_dim = test_values[i];
 123:Core/Src/main.c ****  	  height = imag_dim;
 124:Core/Src/main.c ****  	  width = imag_dim;
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****       //TODO: Record the start time
 127:Core/Src/main.c ****  	  start_time = HAL_GetTick();
 128:Core/Src/main.c ****       //do mandelbrot with double
 129:Core/Src/main.c ****       checksum = calculate_mandelbrot_double(width, height, MAX_ITER);
 130:Core/Src/main.c ****  		 
 131:Core/Src/main.c ****       //TODO: Record the end time
 132:Core/Src/main.c ****  	  end_time = HAL_GetTick();
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****       //TODO: Calculate the execution time
 135:Core/Src/main.c ****  	  time_elapsed = end_time - start_time;
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****       imag_dim_arr[place] = imag_dim;
 138:Core/Src/main.c ****  	  time_elapsed_d_arr[place] = time_elapsed;
 139:Core/Src/main.c ****  	  checksum_d_arr[place] = checksum;
 140:Core/Src/main.c ****       // increment the index for all output arrays
 141:Core/Src/main.c ****       place+=1;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****       //TODO: Turn on LED 1 to signify the end of the operation
 144:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000011;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****  	  //TODO: Hold the LEDs on for a 1s delay
 147:Core/Src/main.c ****  	  delay(1000);
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****    }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****    //loop for float mandelbrot
 152:Core/Src/main.c ****    place = 0;
 153:Core/Src/main.c ****       for(int j=0; j<5; j++){
 154:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
 155:Core/Src/main.c ****     	  GPIOB->ODR = 0b00000001;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     	  // set height and width
 158:Core/Src/main.c ****     	  imag_dim = test_values[j];
 159:Core/Src/main.c ****     	  height = imag_dim;
 160:Core/Src/main.c ****     	  width = imag_dim;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****          //TODO: Record the start time
 163:Core/Src/main.c ****     	  start_time = HAL_GetTick();
 164:Core/Src/main.c ****          //do mandelbrot with double
 165:Core/Src/main.c ****          checksum = calculate_mandelbrot_float(width, height, MAX_ITER);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****          //TODO: Record the end time
 168:Core/Src/main.c ****     	  end_time = HAL_GetTick();
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****          //TODO: Calculate the execution time
 171:Core/Src/main.c ****     	  time_elapsed = end_time - start_time;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****          imag_dim_arr[place] = imag_dim;
 174:Core/Src/main.c ****     	 time_elapsed_f_arr[place] = time_elapsed;
 175:Core/Src/main.c ****     	 checksum_f_arr[place] = checksum;
 176:Core/Src/main.c ****          // increment the index for all output arrays
 177:Core/Src/main.c ****          place+=1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****          //TODO: Turn on LED 1 to signify the end of the operation
 180:Core/Src/main.c ****     	  GPIOB->ODR = 0b00000011;
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     	  //TODO: Hold the LEDs on for a 1s delay
 183:Core/Src/main.c ****     	  delay(1000);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****       }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****    //TODO: Turn off the LEDs
 188:Core/Src/main.c ****    GPIOB->ODR = 0b00000000;
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* Infinite loop */
 191:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 192:Core/Src/main.c ****   while (1)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     /* USER CODE END WHILE */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 197:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   /* USER CODE END 3 */
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief System Clock Configuration
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** void SystemClock_Config(void)
 218:Core/Src/main.c **** {
 219:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 220:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 225:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 228:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 231:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 239:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 247:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c **** }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****   * @brief GPIO Initialization Function
 261:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 6


 262:Core/Src/main.c ****   * @retval None
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** static void MX_GPIO_Init(void)
 265:Core/Src/main.c **** {
  26              		.loc 1 265 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 266:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 266 3 view .LVU1
  40              		.loc 1 266 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 267:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 272:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 272 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 272 3 view .LVU4
  50 0010 0094     		str	r4, [sp]
  51              		.loc 1 272 3 view .LVU5
  52 0012 184B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 272 3 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0092     		str	r2, [sp]
  60              		.loc 1 272 3 view .LVU7
  61 0024 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 272 3 view .LVU8
 273:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 273 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 273 3 view .LVU10
  67 0026 0194     		str	r4, [sp, #4]
  68              		.loc 1 273 3 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 7


  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 273 3 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0192     		str	r2, [sp, #4]
  76              		.loc 1 273 3 view .LVU13
  77 0038 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 273 3 view .LVU14
 274:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 274 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 274 3 view .LVU16
  83 003a 0294     		str	r4, [sp, #8]
  84              		.loc 1 274 3 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00202 		orr	r2, r2, #2
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 274 3 view .LVU18
  89 0044 1B6B     		ldr	r3, [r3, #48]
  90 0046 03F00203 		and	r3, r3, #2
  91 004a 0293     		str	r3, [sp, #8]
  92              		.loc 1 274 3 view .LVU19
  93 004c 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 274 3 view .LVU20
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 277:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  96              		.loc 1 277 3 view .LVU21
  97 004e 0A4D     		ldr	r5, .L3+4
  98 0050 2246     		mov	r2, r4
  99 0052 FF21     		movs	r1, #255
 100 0054 2846     		mov	r0, r5
 101 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 278:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 281:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 282:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 103              		.loc 1 282 3 view .LVU22
 104              		.loc 1 282 23 is_stmt 0 view .LVU23
 105 005a FF23     		movs	r3, #255
 106 005c 0393     		str	r3, [sp, #12]
 283:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 284:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 284 3 is_stmt 1 view .LVU24
 108              		.loc 1 284 24 is_stmt 0 view .LVU25
 109 005e 0123     		movs	r3, #1
 110 0060 0493     		str	r3, [sp, #16]
 285:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 285 3 is_stmt 1 view .LVU26
 112              		.loc 1 285 24 is_stmt 0 view .LVU27
 113 0062 0594     		str	r4, [sp, #20]
 286:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 286 3 is_stmt 1 view .LVU28
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 8


 115              		.loc 1 286 25 is_stmt 0 view .LVU29
 116 0064 0694     		str	r4, [sp, #24]
 287:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 117              		.loc 1 287 3 is_stmt 1 view .LVU30
 118 0066 03A9     		add	r1, sp, #12
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 292:Core/Src/main.c **** }
 122              		.loc 1 292 1 is_stmt 0 view .LVU31
 123 006e 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 0070 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129 0072 00BF     		.align	2
 130              	.L3:
 131 0074 00380240 		.word	1073887232
 132 0078 00040240 		.word	1073873920
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.global	__aeabi_i2d
 137              		.global	__aeabi_ddiv
 138              		.global	__aeabi_d2lz
 139              		.global	__aeabi_ldivmod
 140              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 141              		.align	1
 142              		.global	calculate_mandelbrot_fixed_point_arithmetic
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	calculate_mandelbrot_fixed_point_arithmetic:
 148              	.LVL2:
 149              	.LFB137:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 295:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 296:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 297:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 150              		.loc 1 297 96 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 72
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 297 96 is_stmt 0 view .LVU33
 155 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 36
 158              		.cfi_offset 4, -36
 159              		.cfi_offset 5, -32
 160              		.cfi_offset 6, -28
 161              		.cfi_offset 7, -24
 162              		.cfi_offset 8, -20
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 9


 163              		.cfi_offset 9, -16
 164              		.cfi_offset 10, -12
 165              		.cfi_offset 11, -8
 166              		.cfi_offset 14, -4
 167 0004 93B0     		sub	sp, sp, #76
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 112
 170 0006 0446     		mov	r4, r0
 171 0008 0E90     		str	r0, [sp, #56]
 172 000a 0D46     		mov	r5, r1
 173 000c 0392     		str	r2, [sp, #12]
 298:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 174              		.loc 1 298 3 is_stmt 1 view .LVU34
 175              	.LVL3:
 299:Core/Src/main.c ****   //TODO: Complete the function implementation
 300:Core/Src/main.c ****   int64_t x_0;
 176              		.loc 1 300 3 view .LVU35
 301:Core/Src/main.c ****   int64_t y_0;
 177              		.loc 1 301 3 view .LVU36
 302:Core/Src/main.c ****   int64_t x_i;
 178              		.loc 1 302 3 view .LVU37
 303:Core/Src/main.c ****   int64_t y_i;
 179              		.loc 1 303 3 view .LVU38
 304:Core/Src/main.c ****   int64_t iteration;
 180              		.loc 1 304 3 view .LVU39
 305:Core/Src/main.c ****   int64_t temp;
 181              		.loc 1 305 3 view .LVU40
 306:Core/Src/main.c ****   int64_t h_adj = 2000000.0/height;
 182              		.loc 1 306 3 view .LVU41
 183              		.loc 1 306 28 is_stmt 0 view .LVU42
 184 000e 0846     		mov	r0, r1
 185              	.LVL4:
 186              		.loc 1 306 28 view .LVU43
 187 0010 FFF7FEFF 		bl	__aeabi_i2d
 188              	.LVL5:
 189              		.loc 1 306 28 view .LVU44
 190 0014 0246     		mov	r2, r0
 191 0016 0B46     		mov	r3, r1
 192 0018 5FA1     		adr	r1, .L16
 193 001a D1E90001 		ldrd	r0, [r1]
 194 001e FFF7FEFF 		bl	__aeabi_ddiv
 195              	.LVL6:
 196              		.loc 1 306 11 view .LVU45
 197 0022 FFF7FEFF 		bl	__aeabi_d2lz
 198              	.LVL7:
 199 0026 8246     		mov	r10, r0
 200 0028 0F91     		str	r1, [sp, #60]
 201              	.LVL8:
 307:Core/Src/main.c ****   int64_t w_adj = 3500000.0/width;
 202              		.loc 1 307 3 is_stmt 1 view .LVU46
 203              		.loc 1 307 28 is_stmt 0 view .LVU47
 204 002a 2046     		mov	r0, r4
 205              	.LVL9:
 206              		.loc 1 307 28 view .LVU48
 207 002c FFF7FEFF 		bl	__aeabi_i2d
 208              	.LVL10:
 209              		.loc 1 307 28 view .LVU49
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 10


 210 0030 0246     		mov	r2, r0
 211 0032 0B46     		mov	r3, r1
 212 0034 5AA1     		adr	r1, .L16+8
 213 0036 D1E90001 		ldrd	r0, [r1]
 214 003a FFF7FEFF 		bl	__aeabi_ddiv
 215              	.LVL11:
 216              		.loc 1 307 11 view .LVU50
 217 003e FFF7FEFF 		bl	__aeabi_d2lz
 218              	.LVL12:
 219 0042 0246     		mov	r2, r0
 220 0044 1091     		str	r1, [sp, #64]
 221              	.LVL13:
 308:Core/Src/main.c ****   for(int y=0; y<height; y++){
 222              		.loc 1 308 3 is_stmt 1 view .LVU51
 223              	.LBB7:
 224              		.loc 1 308 7 view .LVU52
 225              		.loc 1 308 11 is_stmt 0 view .LVU53
 226 0046 0023     		movs	r3, #0
 227              	.LBE7:
 298:Core/Src/main.c ****   //TODO: Complete the function implementation
 228              		.loc 1 298 12 view .LVU54
 229 0048 0893     		str	r3, [sp, #32]
 230 004a 9C46     		mov	ip, r3
 231 004c 1195     		str	r5, [sp, #68]
 232              	.LBB10:
 233              		.loc 1 308 3 view .LVU55
 234 004e 94E0     		b	.L6
 235              	.LVL14:
 236              	.L9:
 237              	.LBB8:
 309:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 310:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 311:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 312:Core/Src/main.c **** 		  x_i = 0;
 313:Core/Src/main.c **** 		  y_i = 0;
 314:Core/Src/main.c **** 		  iteration = 0;
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000000) <= 4000000)){
 317:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 238              		.loc 1 317 6 is_stmt 1 view .LVU56
 239              		.loc 1 317 23 is_stmt 0 view .LVU57
 240 0050 554A     		ldr	r2, .L16+16
 241 0052 0023     		movs	r3, #0
 242 0054 FFF7FEFF 		bl	__aeabi_ldivmod
 243              	.LVL15:
 244 0058 8846     		mov	r8, r1
 245 005a 0746     		mov	r7, r0
 246              		.loc 1 317 43 view .LVU58
 247 005c 534A     		ldr	r2, .L16+20
 248 005e 4FF0FF33 		mov	r3, #-1
 249 0062 5846     		mov	r0, fp
 250 0064 5146     		mov	r1, r10
 251 0066 FFF7FEFF 		bl	__aeabi_ldivmod
 252              	.LVL16:
 253              		.loc 1 317 32 view .LVU59
 254 006a 3F18     		adds	r7, r7, r0
 255 006c 48EB0108 		adc	r8, r8, r1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 11


 256              		.loc 1 317 11 view .LVU60
 257 0070 049B     		ldr	r3, [sp, #16]
 258 0072 FF18     		adds	r7, r7, r3
 259 0074 059B     		ldr	r3, [sp, #20]
 260 0076 48EB0308 		adc	r8, r8, r3
 261              	.LVL17:
 318:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000000) + y_0;
 262              		.loc 1 318 6 is_stmt 1 view .LVU61
 263              		.loc 1 318 19 is_stmt 0 view .LVU62
 264 007a 05FB06F6 		mul	r6, r5, r6
 265              	.LVL18:
 266              		.loc 1 318 19 view .LVU63
 267 007e 029B     		ldr	r3, [sp, #8]
 268 0080 04FB0366 		mla	r6, r4, r3, r6
 269 0084 A5FB0401 		umull	r0, r1, r5, r4
 270              		.loc 1 318 24 view .LVU64
 271 0088 494A     		ldr	r2, .L16+24
 272 008a 0023     		movs	r3, #0
 273 008c 3144     		add	r1, r1, r6
 274 008e FFF7FEFF 		bl	__aeabi_ldivmod
 275              	.LVL19:
 276              		.loc 1 318 10 view .LVU65
 277 0092 069B     		ldr	r3, [sp, #24]
 278 0094 1C18     		adds	r4, r3, r0
 279              		.loc 1 318 10 view .LVU66
 280 0096 079B     		ldr	r3, [sp, #28]
 281 0098 43EB0106 		adc	r6, r3, r1
 282              	.LVL20:
 319:Core/Src/main.c **** 			  x_i = temp;
 283              		.loc 1 319 6 is_stmt 1 view .LVU67
 320:Core/Src/main.c **** 			  iteration += 1;
 284              		.loc 1 320 6 view .LVU68
 285              		.loc 1 320 16 is_stmt 0 view .LVU69
 286 009c 019B     		ldr	r3, [sp, #4]
 287 009e 0133     		adds	r3, r3, #1
 288 00a0 0193     		str	r3, [sp, #4]
 289              	.LVL21:
 290              		.loc 1 320 16 view .LVU70
 291 00a2 49F10009 		adc	r9, r9, #0
 292              	.LVL22:
 319:Core/Src/main.c **** 			  x_i = temp;
 293              		.loc 1 319 10 view .LVU71
 294 00a6 3D46     		mov	r5, r7
 295 00a8 CDF80880 		str	r8, [sp, #8]
 296              	.LVL23:
 297              	.L7:
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 298              		.loc 1 316 40 is_stmt 1 view .LVU72
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 299              		.loc 1 316 22 is_stmt 0 view .LVU73
 300 00ac 039A     		ldr	r2, [sp, #12]
 301 00ae D317     		asrs	r3, r2, #31
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 302              		.loc 1 316 40 view .LVU74
 303 00b0 0199     		ldr	r1, [sp, #4]
 304 00b2 9142     		cmp	r1, r2
 305 00b4 79EB0303 		sbcs	r3, r9, r3
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 12


 306 00b8 16DA     		bge	.L8
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 307              		.loc 1 316 49 discriminator 1 view .LVU75
 308 00ba 029B     		ldr	r3, [sp, #8]
 309 00bc 05FB03F3 		mul	r3, r5, r3
 310 00c0 A5FB0501 		umull	r0, r1, r5, r5
 311 00c4 01EB4301 		add	r1, r1, r3, lsl #1
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 312              		.loc 1 316 57 discriminator 1 view .LVU76
 313 00c8 04FB06F3 		mul	r3, r4, r6
 314 00cc A4FB04BA 		umull	fp, r10, r4, r4
 315 00d0 0AEB430A 		add	r10, r10, r3, lsl #1
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 316              		.loc 1 316 53 discriminator 1 view .LVU77
 317 00d4 10EB0B03 		adds	r3, r0, fp
 318 00d8 41EB0A02 		adc	r2, r1, r10
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 319              		.loc 1 316 40 discriminator 1 view .LVU78
 320 00dc 354F     		ldr	r7, .L16+28
 321 00de 9F42     		cmp	r7, r3
 322 00e0 40F2A333 		movw	r3, #931
 323 00e4 9341     		sbcs	r3, r3, r2
 324 00e6 B3DA     		bge	.L9
 325              	.L8:
 321:Core/Src/main.c **** 		  }
 322:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 326              		.loc 1 322 20 view .LVU79
 327 00e8 DDF824B0 		ldr	fp, [sp, #36]
 328 00ec DDF828A0 		ldr	r10, [sp, #40]
 329 00f0 0B9B     		ldr	r3, [sp, #44]
 330 00f2 DDF83080 		ldr	r8, [sp, #48]
 331 00f6 DDF834C0 		ldr	ip, [sp, #52]
 332              		.loc 1 322 5 is_stmt 1 view .LVU80
 333              		.loc 1 322 20 is_stmt 0 view .LVU81
 334 00fa 019A     		ldr	r2, [sp, #4]
 335 00fc 0899     		ldr	r1, [sp, #32]
 336 00fe 5218     		adds	r2, r2, r1
 337 0100 0892     		str	r2, [sp, #32]
 338              	.LVL24:
 339              		.loc 1 322 20 view .LVU82
 340 0102 49EB0C0C 		adc	ip, r9, ip
 341              	.LVL25:
 309:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 342              		.loc 1 309 27 is_stmt 1 discriminator 2 view .LVU83
 343 0106 0AF1010A 		add	r10, r10, #1
 344              	.LVL26:
 345              	.L11:
 309:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 346              		.loc 1 309 18 discriminator 1 view .LVU84
 347 010a 0E9A     		ldr	r2, [sp, #56]
 348 010c 9245     		cmp	r10, r2
 349 010e 30DA     		bge	.L14
 310:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 350              		.loc 1 310 5 view .LVU85
 310:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 351              		.loc 1 310 13 is_stmt 0 view .LVU86
 352 0110 4FEAEA72 		asr	r2, r10, #31
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 13


 353 0114 1099     		ldr	r1, [sp, #64]
 354 0116 0AFB01F1 		mul	r1, r10, r1
 355 011a 08FB0211 		mla	r1, r8, r2, r1
 356 011e AAFB0802 		umull	r0, r2, r10, r8
 357 0122 1144     		add	r1, r1, r2
 310:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 358              		.loc 1 310 9 view .LVU87
 359 0124 244A     		ldr	r2, .L16+32
 360 0126 8218     		adds	r2, r0, r2
 361 0128 0492     		str	r2, [sp, #16]
 362 012a 61F10002 		sbc	r2, r1, #0
 363 012e 0592     		str	r2, [sp, #20]
 364              	.LVL27:
 311:Core/Src/main.c **** 		  x_i = 0;
 365              		.loc 1 311 5 is_stmt 1 view .LVU88
 311:Core/Src/main.c **** 		  x_i = 0;
 366              		.loc 1 311 13 is_stmt 0 view .LVU89
 367 0130 4FEAEB72 		asr	r2, fp, #31
 368              	.LVL28:
 311:Core/Src/main.c **** 		  x_i = 0;
 369              		.loc 1 311 13 view .LVU90
 370 0134 0F99     		ldr	r1, [sp, #60]
 371 0136 0BFB01F1 		mul	r1, fp, r1
 372 013a 03FB0211 		mla	r1, r3, r2, r1
 373 013e ABFB0302 		umull	r0, r2, fp, r3
 374 0142 1144     		add	r1, r1, r2
 311:Core/Src/main.c **** 		  x_i = 0;
 375              		.loc 1 311 9 view .LVU91
 376 0144 194A     		ldr	r2, .L16+20
 377 0146 8218     		adds	r2, r0, r2
 378 0148 0692     		str	r2, [sp, #24]
 379 014a 61F10002 		sbc	r2, r1, #0
 380 014e 0792     		str	r2, [sp, #28]
 381              	.LVL29:
 312:Core/Src/main.c **** 		  y_i = 0;
 382              		.loc 1 312 5 is_stmt 1 view .LVU92
 313:Core/Src/main.c **** 		  iteration = 0;
 383              		.loc 1 313 5 view .LVU93
 314:Core/Src/main.c **** 
 384              		.loc 1 314 5 view .LVU94
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 385              		.loc 1 316 5 view .LVU95
 314:Core/Src/main.c **** 
 386              		.loc 1 314 15 is_stmt 0 view .LVU96
 387 0150 0022     		movs	r2, #0
 388              	.LVL30:
 314:Core/Src/main.c **** 
 389              		.loc 1 314 15 view .LVU97
 390 0152 0192     		str	r2, [sp, #4]
 391 0154 9146     		mov	r9, r2
 313:Core/Src/main.c **** 		  iteration = 0;
 392              		.loc 1 313 9 view .LVU98
 393 0156 1446     		mov	r4, r2
 394 0158 1646     		mov	r6, r2
 312:Core/Src/main.c **** 		  y_i = 0;
 395              		.loc 1 312 9 view .LVU99
 396 015a 1546     		mov	r5, r2
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 14


 397 015c 0292     		str	r2, [sp, #8]
 398 015e CDF824B0 		str	fp, [sp, #36]
 399 0162 CDF828A0 		str	r10, [sp, #40]
 400 0166 0B93     		str	r3, [sp, #44]
 401 0168 CDF83080 		str	r8, [sp, #48]
 402 016c CDF834C0 		str	ip, [sp, #52]
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 403              		.loc 1 316 10 view .LVU100
 404 0170 9CE7     		b	.L7
 405              	.LVL31:
 406              	.L14:
 316:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 407              		.loc 1 316 10 view .LVU101
 408              	.LBE8:
 308:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 409              		.loc 1 308 27 discriminator 2 view .LVU102
 410 0172 9A46     		mov	r10, r3
 411              	.LVL32:
 308:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 412              		.loc 1 308 27 discriminator 2 view .LVU103
 413 0174 5B46     		mov	r3, fp
 414 0176 4246     		mov	r2, r8
 308:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 415              		.loc 1 308 27 is_stmt 1 discriminator 2 view .LVU104
 416 0178 0133     		adds	r3, r3, #1
 417              	.LVL33:
 418              	.L6:
 308:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 419              		.loc 1 308 17 discriminator 1 view .LVU105
 420 017a 1199     		ldr	r1, [sp, #68]
 421 017c 8B42     		cmp	r3, r1
 422 017e 06DA     		bge	.L15
 423              	.LBB9:
 309:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 424              		.loc 1 309 12 is_stmt 0 view .LVU106
 425 0180 4FF00009 		mov	r9, #0
 426 0184 9B46     		mov	fp, r3
 427 0186 5346     		mov	r3, r10
 428              	.LVL34:
 309:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 429              		.loc 1 309 12 view .LVU107
 430 0188 CA46     		mov	r10, r9
 431 018a 9046     		mov	r8, r2
 432 018c BDE7     		b	.L11
 433              	.LVL35:
 434              	.L15:
 309:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 435              		.loc 1 309 12 view .LVU108
 436              	.LBE9:
 437              	.LBE10:
 323:Core/Src/main.c **** 	  }
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   return mandelbrot_sum;
 438              		.loc 1 325 3 is_stmt 1 view .LVU109
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** }
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 15


 439              		.loc 1 328 1 is_stmt 0 view .LVU110
 440 018e 0898     		ldr	r0, [sp, #32]
 441 0190 6146     		mov	r1, ip
 442 0192 13B0     		add	sp, sp, #76
 443              	.LCFI5:
 444              		.cfi_def_cfa_offset 36
 445              		@ sp needed
 446 0194 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 447              	.LVL36:
 448              	.L17:
 449              		.loc 1 328 1 view .LVU111
 450              		.align	3
 451              	.L16:
 452 0198 00000000 		.word	0
 453 019c 80843E41 		.word	1094616192
 454 01a0 00000000 		.word	0
 455 01a4 F0B34A41 		.word	1095414768
 456 01a8 40420F00 		.word	1000000
 457 01ac C0BDF0FF 		.word	-1000000
 458 01b0 20A10700 		.word	500000
 459 01b4 3F82A352 		.word	1386447423
 460 01b8 60DAD9FF 		.word	-2500000
 461              		.cfi_endproc
 462              	.LFE137:
 464              		.global	__aeabi_dmul
 465              		.global	__aeabi_dsub
 466              		.global	__aeabi_dadd
 467              		.global	__aeabi_dcmpgt
 468              		.global	__aeabi_dcmple
 469              		.global	__aeabi_ul2d
 470              		.global	__aeabi_d2ulz
 471              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 472              		.align	1
 473              		.global	calculate_mandelbrot_double
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	calculate_mandelbrot_double:
 479              	.LVL37:
 480              	.LFB138:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 331:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 481              		.loc 1 331 80 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 80
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		.loc 1 331 80 is_stmt 0 view .LVU113
 486 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 487              	.LCFI6:
 488              		.cfi_def_cfa_offset 36
 489              		.cfi_offset 4, -36
 490              		.cfi_offset 5, -32
 491              		.cfi_offset 6, -28
 492              		.cfi_offset 7, -24
 493              		.cfi_offset 8, -20
 494              		.cfi_offset 9, -16
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 16


 495              		.cfi_offset 10, -12
 496              		.cfi_offset 11, -8
 497              		.cfi_offset 14, -4
 498 0004 95B0     		sub	sp, sp, #84
 499              	.LCFI7:
 500              		.cfi_def_cfa_offset 120
 501 0006 0D46     		mov	r5, r1
 502 0008 0892     		str	r2, [sp, #32]
 332:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 503              		.loc 1 332 5 is_stmt 1 view .LVU114
 504              	.LVL38:
 333:Core/Src/main.c ****     //TODO: Complete the function implementation
 334:Core/Src/main.c ****     double x_0;
 505              		.loc 1 334 5 view .LVU115
 335:Core/Src/main.c ****     double y_0;
 506              		.loc 1 335 5 view .LVU116
 336:Core/Src/main.c ****     double x_i;
 507              		.loc 1 336 5 view .LVU117
 337:Core/Src/main.c ****     double y_i;
 508              		.loc 1 337 5 view .LVU118
 338:Core/Src/main.c ****     double iteration;
 509              		.loc 1 338 5 view .LVU119
 339:Core/Src/main.c ****     double temp;
 510              		.loc 1 339 5 view .LVU120
 340:Core/Src/main.c ****     double w_adj=3.5/width;
 511              		.loc 1 340 5 view .LVU121
 512              		.loc 1 340 21 is_stmt 0 view .LVU122
 513 000a FFF7FEFF 		bl	__aeabi_i2d
 514              	.LVL39:
 515              		.loc 1 340 21 view .LVU123
 516 000e 0646     		mov	r6, r0
 517 0010 0F46     		mov	r7, r1
 518 0012 CDE90C67 		strd	r6, [sp, #48]
 519              		.loc 1 340 12 view .LVU124
 520 0016 0246     		mov	r2, r0
 521 0018 0B46     		mov	r3, r1
 522 001a 0020     		movs	r0, #0
 523 001c 5B49     		ldr	r1, .L31
 524 001e FFF7FEFF 		bl	__aeabi_ddiv
 525              	.LVL40:
 526 0022 CDE90E01 		strd	r0, [sp, #56]
 527              	.LVL41:
 341:Core/Src/main.c ****     double h_adj=2.0/width;
 528              		.loc 1 341 5 is_stmt 1 view .LVU125
 529              		.loc 1 341 12 is_stmt 0 view .LVU126
 530 0026 3246     		mov	r2, r6
 531 0028 3B46     		mov	r3, r7
 532 002a 0020     		movs	r0, #0
 533              	.LVL42:
 534              		.loc 1 341 12 view .LVU127
 535 002c 4FF08041 		mov	r1, #1073741824
 536 0030 FFF7FEFF 		bl	__aeabi_ddiv
 537              	.LVL43:
 538 0034 CDE91001 		strd	r0, [sp, #64]
 539              	.LVL44:
 342:Core/Src/main.c ****     for(double y=0; y<height; y++){
 540              		.loc 1 342 5 is_stmt 1 view .LVU128
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 17


 541              	.LBB11:
 542              		.loc 1 342 9 view .LVU129
 543              		.loc 1 342 16 is_stmt 0 view .LVU130
 544 0038 0023     		movs	r3, #0
 545 003a 0024     		movs	r4, #0
 546 003c CDE90A34 		strd	r3, [sp, #40]
 547              	.LBE11:
 332:Core/Src/main.c ****     //TODO: Complete the function implementation
 548              		.loc 1 332 14 view .LVU131
 549 0040 0023     		movs	r3, #0
 550 0042 0993     		str	r3, [sp, #36]
 551 0044 1293     		str	r3, [sp, #72]
 552 0046 1395     		str	r5, [sp, #76]
 553              	.LBB14:
 554              		.loc 1 342 5 view .LVU132
 555 0048 8DE0     		b	.L19
 556              	.LVL45:
 557              	.L23:
 558              	.LBB12:
 343:Core/Src/main.c ****        for(double x=0; x<width; x++){
 344:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 345:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 346:Core/Src/main.c ****     	  x_i = 0;
 347:Core/Src/main.c ****     	  y_i = 0;
 348:Core/Src/main.c ****           iteration = 0;
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 351:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 559              		.loc 1 351 7 is_stmt 1 view .LVU133
 560              		.loc 1 351 23 is_stmt 0 view .LVU134
 561 004a 3246     		mov	r2, r6
 562 004c 3B46     		mov	r3, r7
 563 004e DDE90001 		ldrd	r0, [sp]
 564 0052 FFF7FEFF 		bl	__aeabi_dsub
 565              	.LVL46:
 566              		.loc 1 351 12 view .LVU135
 567 0056 DDE90223 		ldrd	r2, [sp, #8]
 568 005a FFF7FEFF 		bl	__aeabi_dadd
 569              	.LVL47:
 570 005e 0646     		mov	r6, r0
 571 0060 0F46     		mov	r7, r1
 572              	.LVL48:
 352:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 573              		.loc 1 352 7 is_stmt 1 view .LVU136
 574              		.loc 1 352 15 is_stmt 0 view .LVU137
 575 0062 2246     		mov	r2, r4
 576 0064 2B46     		mov	r3, r5
 577 0066 2046     		mov	r0, r4
 578 0068 2946     		mov	r1, r5
 579 006a FFF7FEFF 		bl	__aeabi_dadd
 580              	.LVL49:
 581              		.loc 1 352 19 view .LVU138
 582 006e 5246     		mov	r2, r10
 583 0070 5B46     		mov	r3, fp
 584 0072 FFF7FEFF 		bl	__aeabi_dmul
 585              	.LVL50:
 586              		.loc 1 352 11 view .LVU139
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 18


 587 0076 DDE90423 		ldrd	r2, [sp, #16]
 588 007a FFF7FEFF 		bl	__aeabi_dadd
 589              	.LVL51:
 590 007e 8246     		mov	r10, r0
 591              	.LVL52:
 592              		.loc 1 352 11 view .LVU140
 593 0080 8B46     		mov	fp, r1
 594              	.LVL53:
 353:Core/Src/main.c ****     		x_i = temp;
 595              		.loc 1 353 7 is_stmt 1 view .LVU141
 354:Core/Src/main.c ****     		iteration += 1;
 596              		.loc 1 354 7 view .LVU142
 597              		.loc 1 354 17 is_stmt 0 view .LVU143
 598 0082 0022     		movs	r2, #0
 599 0084 424B     		ldr	r3, .L31+4
 600 0086 4046     		mov	r0, r8
 601 0088 4946     		mov	r1, r9
 602 008a FFF7FEFF 		bl	__aeabi_dadd
 603              	.LVL54:
 604 008e 8046     		mov	r8, r0
 605              	.LVL55:
 606              		.loc 1 354 17 view .LVU144
 607 0090 8946     		mov	r9, r1
 608              	.LVL56:
 353:Core/Src/main.c ****     		x_i = temp;
 609              		.loc 1 353 11 view .LVU145
 610 0092 3446     		mov	r4, r6
 611 0094 3D46     		mov	r5, r7
 612              	.LVL57:
 613              	.L20:
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 614              		.loc 1 350 43 is_stmt 1 view .LVU146
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 615              		.loc 1 350 25 is_stmt 0 view .LVU147
 616 0096 0898     		ldr	r0, [sp, #32]
 617 0098 FFF7FEFF 		bl	__aeabi_i2d
 618              	.LVL58:
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 619              		.loc 1 350 43 view .LVU148
 620 009c 4246     		mov	r2, r8
 621 009e 4B46     		mov	r3, r9
 622 00a0 FFF7FEFF 		bl	__aeabi_dcmpgt
 623              	.LVL59:
 624 00a4 D8B1     		cbz	r0, .L21
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 625              		.loc 1 350 51 discriminator 1 view .LVU149
 626 00a6 2246     		mov	r2, r4
 627 00a8 2B46     		mov	r3, r5
 628 00aa 2046     		mov	r0, r4
 629 00ac 2946     		mov	r1, r5
 630 00ae FFF7FEFF 		bl	__aeabi_dmul
 631              	.LVL60:
 632 00b2 CDE90001 		strd	r0, [sp]
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 633              		.loc 1 350 63 discriminator 1 view .LVU150
 634 00b6 5246     		mov	r2, r10
 635 00b8 5B46     		mov	r3, fp
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 19


 636 00ba 5046     		mov	r0, r10
 637 00bc 5946     		mov	r1, fp
 638 00be FFF7FEFF 		bl	__aeabi_dmul
 639              	.LVL61:
 640 00c2 0646     		mov	r6, r0
 641 00c4 0F46     		mov	r7, r1
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 642              		.loc 1 350 57 discriminator 1 view .LVU151
 643 00c6 0246     		mov	r2, r0
 644 00c8 0B46     		mov	r3, r1
 645 00ca DDE90001 		ldrd	r0, [sp]
 646 00ce FFF7FEFF 		bl	__aeabi_dadd
 647              	.LVL62:
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 648              		.loc 1 350 43 discriminator 1 view .LVU152
 649 00d2 0022     		movs	r2, #0
 650 00d4 2F4B     		ldr	r3, .L31+8
 651 00d6 FFF7FEFF 		bl	__aeabi_dcmple
 652              	.LVL63:
 653 00da 0028     		cmp	r0, #0
 654 00dc B5D1     		bne	.L23
 655              	.L21:
 355:Core/Src/main.c ****     	  }
 356:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 656              		.loc 1 356 8 is_stmt 1 view .LVU153
 657              		.loc 1 356 23 is_stmt 0 view .LVU154
 658 00de 0998     		ldr	r0, [sp, #36]
 659 00e0 1299     		ldr	r1, [sp, #72]
 660 00e2 FFF7FEFF 		bl	__aeabi_ul2d
 661              	.LVL64:
 662 00e6 4246     		mov	r2, r8
 663 00e8 4B46     		mov	r3, r9
 664 00ea FFF7FEFF 		bl	__aeabi_dadd
 665              	.LVL65:
 666 00ee FFF7FEFF 		bl	__aeabi_d2ulz
 667              	.LVL66:
 668 00f2 0990     		str	r0, [sp, #36]
 669              	.LVL67:
 670              		.loc 1 356 23 view .LVU155
 671 00f4 1291     		str	r1, [sp, #72]
 672              	.LVL68:
 343:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 673              		.loc 1 343 34 is_stmt 1 discriminator 2 view .LVU156
 674 00f6 0022     		movs	r2, #0
 675 00f8 254B     		ldr	r3, .L31+4
 676 00fa DDE90601 		ldrd	r0, [sp, #24]
 677              	.LVL69:
 343:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 678              		.loc 1 343 34 is_stmt 0 discriminator 2 view .LVU157
 679 00fe FFF7FEFF 		bl	__aeabi_dadd
 680              	.LVL70:
 343:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 681              		.loc 1 343 34 discriminator 2 view .LVU158
 682 0102 CDE90601 		strd	r0, [sp, #24]
 683              	.LVL71:
 684              	.L25:
 343:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 20


 685              		.loc 1 343 25 is_stmt 1 discriminator 1 view .LVU159
 686 0106 DDE90623 		ldrd	r2, [sp, #24]
 687 010a DDE90C01 		ldrd	r0, [sp, #48]
 688 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 689              	.LVL72:
 690 0112 00B3     		cbz	r0, .L29
 344:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 691              		.loc 1 344 8 view .LVU160
 344:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 692              		.loc 1 344 16 is_stmt 0 view .LVU161
 693 0114 DDE90E23 		ldrd	r2, [sp, #56]
 694 0118 DDE90601 		ldrd	r0, [sp, #24]
 695 011c FFF7FEFF 		bl	__aeabi_dmul
 696              	.LVL73:
 344:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 697              		.loc 1 344 12 view .LVU162
 698 0120 0022     		movs	r2, #0
 699 0122 1D4B     		ldr	r3, .L31+12
 700 0124 FFF7FEFF 		bl	__aeabi_dsub
 701              	.LVL74:
 702 0128 CDE90201 		strd	r0, [sp, #8]
 703              	.LVL75:
 345:Core/Src/main.c ****     	  x_i = 0;
 704              		.loc 1 345 8 is_stmt 1 view .LVU163
 345:Core/Src/main.c ****     	  x_i = 0;
 705              		.loc 1 345 16 is_stmt 0 view .LVU164
 706 012c DDE91023 		ldrd	r2, [sp, #64]
 707 0130 DDE90A01 		ldrd	r0, [sp, #40]
 708              	.LVL76:
 345:Core/Src/main.c ****     	  x_i = 0;
 709              		.loc 1 345 16 view .LVU165
 710 0134 FFF7FEFF 		bl	__aeabi_dmul
 711              	.LVL77:
 345:Core/Src/main.c ****     	  x_i = 0;
 712              		.loc 1 345 12 view .LVU166
 713 0138 0022     		movs	r2, #0
 714 013a 154B     		ldr	r3, .L31+4
 715 013c FFF7FEFF 		bl	__aeabi_dsub
 716              	.LVL78:
 717 0140 CDE90401 		strd	r0, [sp, #16]
 718              	.LVL79:
 346:Core/Src/main.c ****     	  y_i = 0;
 719              		.loc 1 346 8 is_stmt 1 view .LVU167
 347:Core/Src/main.c ****           iteration = 0;
 720              		.loc 1 347 8 view .LVU168
 348:Core/Src/main.c **** 
 721              		.loc 1 348 11 view .LVU169
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 722              		.loc 1 350 8 view .LVU170
 348:Core/Src/main.c **** 
 723              		.loc 1 348 21 is_stmt 0 view .LVU171
 724 0144 4FF00008 		mov	r8, #0
 725 0148 4FF00009 		mov	r9, #0
 347:Core/Src/main.c ****           iteration = 0;
 726              		.loc 1 347 12 view .LVU172
 727 014c C246     		mov	r10, r8
 728 014e CB46     		mov	fp, r9
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 21


 346:Core/Src/main.c ****     	  y_i = 0;
 729              		.loc 1 346 12 view .LVU173
 730 0150 4446     		mov	r4, r8
 731 0152 4D46     		mov	r5, r9
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 732              		.loc 1 350 13 view .LVU174
 733 0154 9FE7     		b	.L20
 734              	.LVL80:
 735              	.L29:
 350:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 736              		.loc 1 350 13 view .LVU175
 737              	.LBE12:
 342:Core/Src/main.c ****        for(double x=0; x<width; x++){
 738              		.loc 1 342 32 is_stmt 1 discriminator 2 view .LVU176
 739 0156 0022     		movs	r2, #0
 740 0158 0D4B     		ldr	r3, .L31+4
 741 015a DDE90A01 		ldrd	r0, [sp, #40]
 742 015e FFF7FEFF 		bl	__aeabi_dadd
 743              	.LVL81:
 744 0162 CDE90A01 		strd	r0, [sp, #40]
 745              	.LVL82:
 746              	.L19:
 342:Core/Src/main.c ****        for(double x=0; x<width; x++){
 747              		.loc 1 342 22 discriminator 1 view .LVU177
 748 0166 1398     		ldr	r0, [sp, #76]
 749 0168 FFF7FEFF 		bl	__aeabi_i2d
 750              	.LVL83:
 751 016c DDE90A23 		ldrd	r2, [sp, #40]
 752 0170 FFF7FEFF 		bl	__aeabi_dcmpgt
 753              	.LVL84:
 754 0174 20B1     		cbz	r0, .L30
 755              	.LBB13:
 343:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 756              		.loc 1 343 19 is_stmt 0 view .LVU178
 757 0176 0023     		movs	r3, #0
 758 0178 0024     		movs	r4, #0
 759 017a CDE90634 		strd	r3, [sp, #24]
 760 017e C2E7     		b	.L25
 761              	.L30:
 762              	.LBE13:
 763              	.LBE14:
 357:Core/Src/main.c ****        }
 358:Core/Src/main.c ****     }
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     return mandelbrot_sum;
 764              		.loc 1 360 5 is_stmt 1 view .LVU179
 361:Core/Src/main.c **** }
 765              		.loc 1 361 1 is_stmt 0 view .LVU180
 766 0180 0998     		ldr	r0, [sp, #36]
 767 0182 1299     		ldr	r1, [sp, #72]
 768 0184 15B0     		add	sp, sp, #84
 769              	.LCFI8:
 770              		.cfi_def_cfa_offset 36
 771              		@ sp needed
 772 0186 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 773              	.LVL85:
 774              	.L32:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 22


 775              		.loc 1 361 1 view .LVU181
 776 018a 00BF     		.align	2
 777              	.L31:
 778 018c 00000C40 		.word	1074528256
 779 0190 0000F03F 		.word	1072693248
 780 0194 00001040 		.word	1074790400
 781 0198 00000440 		.word	1074003968
 782              		.cfi_endproc
 783              	.LFE138:
 785              		.global	__aeabi_d2f
 786              		.global	__aeabi_fmul
 787              		.global	__aeabi_fsub
 788              		.global	__aeabi_fadd
 789              		.global	__aeabi_i2f
 790              		.global	__aeabi_fcmpgt
 791              		.global	__aeabi_fcmple
 792              		.global	__aeabi_ul2f
 793              		.global	__aeabi_f2ulz
 794              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 795              		.align	1
 796              		.global	calculate_mandelbrot_float
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	calculate_mandelbrot_float:
 802              	.LVL86:
 803              	.LFB139:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** //TODO: Mandelbroat using variable type float
 364:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 804              		.loc 1 364 79 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 32
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		.loc 1 364 79 is_stmt 0 view .LVU183
 809 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 810              	.LCFI9:
 811              		.cfi_def_cfa_offset 36
 812              		.cfi_offset 4, -36
 813              		.cfi_offset 5, -32
 814              		.cfi_offset 6, -28
 815              		.cfi_offset 7, -24
 816              		.cfi_offset 8, -20
 817              		.cfi_offset 9, -16
 818              		.cfi_offset 10, -12
 819              		.cfi_offset 11, -8
 820              		.cfi_offset 14, -4
 821 0004 89B0     		sub	sp, sp, #36
 822              	.LCFI10:
 823              		.cfi_def_cfa_offset 72
 824 0006 0490     		str	r0, [sp, #16]
 825 0008 0F46     		mov	r7, r1
 826 000a 9246     		mov	r10, r2
 365:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 827              		.loc 1 365 5 is_stmt 1 view .LVU184
 828              	.LVL87:
 366:Core/Src/main.c ****     //TODO: Complete the function implementation
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 23


 367:Core/Src/main.c ****     float x_0;
 829              		.loc 1 367 5 view .LVU185
 368:Core/Src/main.c ****     float y_0;
 830              		.loc 1 368 5 view .LVU186
 369:Core/Src/main.c ****     float x_i;
 831              		.loc 1 369 5 view .LVU187
 370:Core/Src/main.c ****     float y_i;
 832              		.loc 1 370 5 view .LVU188
 371:Core/Src/main.c ****     float iteration;
 833              		.loc 1 371 5 view .LVU189
 372:Core/Src/main.c ****     float temp;
 834              		.loc 1 372 5 view .LVU190
 373:Core/Src/main.c ****     float w_adj=3.5/width;
 835              		.loc 1 373 5 view .LVU191
 836              		.loc 1 373 20 is_stmt 0 view .LVU192
 837 000c FFF7FEFF 		bl	__aeabi_i2d
 838              	.LVL88:
 839              		.loc 1 373 20 view .LVU193
 840 0010 0446     		mov	r4, r0
 841 0012 0D46     		mov	r5, r1
 842 0014 0246     		mov	r2, r0
 843 0016 0B46     		mov	r3, r1
 844 0018 0020     		movs	r0, #0
 845 001a 4849     		ldr	r1, .L46
 846 001c FFF7FEFF 		bl	__aeabi_ddiv
 847              	.LVL89:
 848              		.loc 1 373 11 view .LVU194
 849 0020 FFF7FEFF 		bl	__aeabi_d2f
 850              	.LVL90:
 851 0024 0590     		str	r0, [sp, #20]	@ float
 852              	.LVL91:
 374:Core/Src/main.c ****     float h_adj=2.0/width;
 853              		.loc 1 374 5 is_stmt 1 view .LVU195
 854              		.loc 1 374 20 is_stmt 0 view .LVU196
 855 0026 2246     		mov	r2, r4
 856 0028 2B46     		mov	r3, r5
 857 002a 0020     		movs	r0, #0
 858              	.LVL92:
 859              		.loc 1 374 20 view .LVU197
 860 002c 4FF08041 		mov	r1, #1073741824
 861 0030 FFF7FEFF 		bl	__aeabi_ddiv
 862              	.LVL93:
 863              		.loc 1 374 11 view .LVU198
 864 0034 FFF7FEFF 		bl	__aeabi_d2f
 865              	.LVL94:
 866 0038 0690     		str	r0, [sp, #24]	@ float
 867              	.LVL95:
 375:Core/Src/main.c ****     for(float y=0; y<height; y++){
 868              		.loc 1 375 5 is_stmt 1 view .LVU199
 869              	.LBB15:
 870              		.loc 1 375 9 view .LVU200
 871              		.loc 1 375 15 is_stmt 0 view .LVU201
 872 003a 0023     		movs	r3, #0
 873 003c 0393     		str	r3, [sp, #12]	@ float
 874              	.LBE15:
 365:Core/Src/main.c ****     //TODO: Complete the function implementation
 875              		.loc 1 365 14 view .LVU202
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 24


 876 003e 0023     		movs	r3, #0
 877 0040 0093     		str	r3, [sp]
 878 0042 0193     		str	r3, [sp, #4]
 879 0044 0797     		str	r7, [sp, #28]
 880              	.LBB18:
 881              		.loc 1 375 5 view .LVU203
 882 0046 69E0     		b	.L34
 883              	.LVL96:
 884              	.L38:
 885              	.LBB16:
 376:Core/Src/main.c ****        for(float x=0; x<width; x++){
 377:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 378:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 379:Core/Src/main.c ****     	  x_i = 0;
 380:Core/Src/main.c ****     	  y_i = 0;
 381:Core/Src/main.c ****           iteration = 0;
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 384:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 886              		.loc 1 384 7 is_stmt 1 view .LVU204
 887              		.loc 1 384 23 is_stmt 0 view .LVU205
 888 0048 3146     		mov	r1, r6
 889 004a 2846     		mov	r0, r5
 890 004c FFF7FEFF 		bl	__aeabi_fsub
 891              	.LVL97:
 892              		.loc 1 384 12 view .LVU206
 893 0050 4946     		mov	r1, r9
 894 0052 FFF7FEFF 		bl	__aeabi_fadd
 895              	.LVL98:
 896 0056 0546     		mov	r5, r0
 897              	.LVL99:
 385:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 898              		.loc 1 385 7 is_stmt 1 view .LVU207
 899              		.loc 1 385 15 is_stmt 0 view .LVU208
 900 0058 3946     		mov	r1, r7
 901 005a 3846     		mov	r0, r7
 902              	.LVL100:
 903              		.loc 1 385 15 view .LVU209
 904 005c FFF7FEFF 		bl	__aeabi_fadd
 905              	.LVL101:
 906              		.loc 1 385 19 view .LVU210
 907 0060 5946     		mov	r1, fp
 908 0062 FFF7FEFF 		bl	__aeabi_fmul
 909              	.LVL102:
 910              		.loc 1 385 11 view .LVU211
 911 0066 4146     		mov	r1, r8
 912 0068 FFF7FEFF 		bl	__aeabi_fadd
 913              	.LVL103:
 914 006c 8346     		mov	fp, r0
 915              	.LVL104:
 386:Core/Src/main.c ****     		x_i = temp;
 916              		.loc 1 386 7 is_stmt 1 view .LVU212
 387:Core/Src/main.c ****     		iteration += 1;
 917              		.loc 1 387 7 view .LVU213
 918              		.loc 1 387 17 is_stmt 0 view .LVU214
 919 006e 4FF07E51 		mov	r1, #1065353216
 920 0072 2046     		mov	r0, r4
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 25


 921              	.LVL105:
 922              		.loc 1 387 17 view .LVU215
 923 0074 FFF7FEFF 		bl	__aeabi_fadd
 924              	.LVL106:
 925 0078 0446     		mov	r4, r0
 926              	.LVL107:
 386:Core/Src/main.c ****     		x_i = temp;
 927              		.loc 1 386 11 view .LVU216
 928 007a 2F46     		mov	r7, r5
 929              	.LVL108:
 930              	.L35:
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 931              		.loc 1 383 43 is_stmt 1 view .LVU217
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 932              		.loc 1 383 25 is_stmt 0 view .LVU218
 933 007c 5046     		mov	r0, r10
 934 007e FFF7FEFF 		bl	__aeabi_i2f
 935              	.LVL109:
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 936              		.loc 1 383 43 view .LVU219
 937 0082 2146     		mov	r1, r4
 938 0084 FFF7FEFF 		bl	__aeabi_fcmpgt
 939              	.LVL110:
 940 0088 98B1     		cbz	r0, .L36
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 941              		.loc 1 383 51 discriminator 1 view .LVU220
 942 008a 3946     		mov	r1, r7
 943 008c 3846     		mov	r0, r7
 944 008e FFF7FEFF 		bl	__aeabi_fmul
 945              	.LVL111:
 946 0092 0546     		mov	r5, r0
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 947              		.loc 1 383 63 discriminator 1 view .LVU221
 948 0094 5946     		mov	r1, fp
 949 0096 5846     		mov	r0, fp
 950 0098 FFF7FEFF 		bl	__aeabi_fmul
 951              	.LVL112:
 952 009c 0646     		mov	r6, r0
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 953              		.loc 1 383 57 discriminator 1 view .LVU222
 954 009e 0146     		mov	r1, r0
 955 00a0 2846     		mov	r0, r5
 956 00a2 FFF7FEFF 		bl	__aeabi_fadd
 957              	.LVL113:
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 958              		.loc 1 383 43 discriminator 1 view .LVU223
 959 00a6 4FF08141 		mov	r1, #1082130432
 960 00aa FFF7FEFF 		bl	__aeabi_fcmple
 961              	.LVL114:
 962 00ae 0028     		cmp	r0, #0
 963 00b0 CAD1     		bne	.L38
 964              	.L36:
 388:Core/Src/main.c ****     	  }
 389:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 965              		.loc 1 389 23 view .LVU224
 966 00b2 029D     		ldr	r5, [sp, #8]	@ float
 967              		.loc 1 389 8 is_stmt 1 view .LVU225
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 26


 968              		.loc 1 389 23 is_stmt 0 view .LVU226
 969 00b4 0098     		ldr	r0, [sp]
 970 00b6 0199     		ldr	r1, [sp, #4]
 971 00b8 FFF7FEFF 		bl	__aeabi_ul2f
 972              	.LVL115:
 973 00bc 2146     		mov	r1, r4
 974 00be FFF7FEFF 		bl	__aeabi_fadd
 975              	.LVL116:
 976 00c2 FFF7FEFF 		bl	__aeabi_f2ulz
 977              	.LVL117:
 978 00c6 0090     		str	r0, [sp]
 979              	.LVL118:
 980              		.loc 1 389 23 view .LVU227
 981 00c8 0191     		str	r1, [sp, #4]
 982              	.LVL119:
 376:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 983              		.loc 1 376 33 is_stmt 1 discriminator 2 view .LVU228
 984 00ca 4FF07E51 		mov	r1, #1065353216
 985              	.LVL120:
 376:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 986              		.loc 1 376 33 is_stmt 0 discriminator 2 view .LVU229
 987 00ce 2846     		mov	r0, r5
 988              	.LVL121:
 376:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 989              		.loc 1 376 33 discriminator 2 view .LVU230
 990 00d0 FFF7FEFF 		bl	__aeabi_fadd
 991              	.LVL122:
 992 00d4 0546     		mov	r5, r0
 993              	.LVL123:
 994              	.L40:
 376:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 995              		.loc 1 376 24 is_stmt 1 discriminator 1 view .LVU231
 996 00d6 0498     		ldr	r0, [sp, #16]
 997 00d8 FFF7FEFF 		bl	__aeabi_i2f
 998              	.LVL124:
 999 00dc 2946     		mov	r1, r5
 1000 00de FFF7FEFF 		bl	__aeabi_fcmpgt
 1001              	.LVL125:
 1002 00e2 A8B1     		cbz	r0, .L44
 377:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 1003              		.loc 1 377 8 view .LVU232
 377:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 1004              		.loc 1 377 16 is_stmt 0 view .LVU233
 1005 00e4 0599     		ldr	r1, [sp, #20]	@ float
 1006 00e6 2846     		mov	r0, r5
 1007 00e8 FFF7FEFF 		bl	__aeabi_fmul
 1008              	.LVL126:
 377:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 1009              		.loc 1 377 12 view .LVU234
 1010 00ec 1449     		ldr	r1, .L46+4
 1011 00ee FFF7FEFF 		bl	__aeabi_fsub
 1012              	.LVL127:
 1013 00f2 8146     		mov	r9, r0
 1014              	.LVL128:
 378:Core/Src/main.c ****     	  x_i = 0;
 1015              		.loc 1 378 8 is_stmt 1 view .LVU235
 378:Core/Src/main.c ****     	  x_i = 0;
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 27


 1016              		.loc 1 378 16 is_stmt 0 view .LVU236
 1017 00f4 0699     		ldr	r1, [sp, #24]	@ float
 1018 00f6 0398     		ldr	r0, [sp, #12]	@ float
 1019              	.LVL129:
 378:Core/Src/main.c ****     	  x_i = 0;
 1020              		.loc 1 378 16 view .LVU237
 1021 00f8 FFF7FEFF 		bl	__aeabi_fmul
 1022              	.LVL130:
 378:Core/Src/main.c ****     	  x_i = 0;
 1023              		.loc 1 378 12 view .LVU238
 1024 00fc 4FF07E51 		mov	r1, #1065353216
 1025 0100 FFF7FEFF 		bl	__aeabi_fsub
 1026              	.LVL131:
 1027 0104 8046     		mov	r8, r0
 1028              	.LVL132:
 379:Core/Src/main.c ****     	  y_i = 0;
 1029              		.loc 1 379 8 is_stmt 1 view .LVU239
 380:Core/Src/main.c ****           iteration = 0;
 1030              		.loc 1 380 8 view .LVU240
 381:Core/Src/main.c **** 
 1031              		.loc 1 381 11 view .LVU241
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1032              		.loc 1 383 8 view .LVU242
 381:Core/Src/main.c **** 
 1033              		.loc 1 381 21 is_stmt 0 view .LVU243
 1034 0106 0024     		movs	r4, #0
 380:Core/Src/main.c ****           iteration = 0;
 1035              		.loc 1 380 12 view .LVU244
 1036 0108 A346     		mov	fp, r4
 379:Core/Src/main.c ****     	  y_i = 0;
 1037              		.loc 1 379 12 view .LVU245
 1038 010a 2746     		mov	r7, r4
 1039 010c 0295     		str	r5, [sp, #8]	@ float
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1040              		.loc 1 383 13 view .LVU246
 1041 010e B5E7     		b	.L35
 1042              	.LVL133:
 1043              	.L44:
 383:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1044              		.loc 1 383 13 view .LVU247
 1045              	.LBE16:
 375:Core/Src/main.c ****        for(float x=0; x<width; x++){
 1046              		.loc 1 375 31 is_stmt 1 discriminator 2 view .LVU248
 1047 0110 4FF07E51 		mov	r1, #1065353216
 1048 0114 0398     		ldr	r0, [sp, #12]	@ float
 1049 0116 FFF7FEFF 		bl	__aeabi_fadd
 1050              	.LVL134:
 1051 011a 0390     		str	r0, [sp, #12]	@ float
 1052              	.LVL135:
 1053              	.L34:
 375:Core/Src/main.c ****        for(float x=0; x<width; x++){
 1054              		.loc 1 375 21 discriminator 1 view .LVU249
 1055 011c 0798     		ldr	r0, [sp, #28]
 1056 011e FFF7FEFF 		bl	__aeabi_i2f
 1057              	.LVL136:
 1058 0122 0399     		ldr	r1, [sp, #12]	@ float
 1059 0124 FFF7FEFF 		bl	__aeabi_fcmpgt
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 28


 1060              	.LVL137:
 1061 0128 10B1     		cbz	r0, .L45
 1062              	.LBB17:
 376:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 1063              		.loc 1 376 18 is_stmt 0 view .LVU250
 1064 012a 0026     		movs	r6, #0
 1065 012c 3546     		mov	r5, r6
 1066 012e D2E7     		b	.L40
 1067              	.L45:
 1068              	.LBE17:
 1069              	.LBE18:
 390:Core/Src/main.c ****        }
 391:Core/Src/main.c ****     }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****     return mandelbrot_sum;
 1070              		.loc 1 393 5 is_stmt 1 view .LVU251
 394:Core/Src/main.c **** }
 1071              		.loc 1 394 1 is_stmt 0 view .LVU252
 1072 0130 0098     		ldr	r0, [sp]
 1073 0132 0199     		ldr	r1, [sp, #4]
 1074 0134 09B0     		add	sp, sp, #36
 1075              	.LCFI11:
 1076              		.cfi_def_cfa_offset 36
 1077              	.LVL138:
 1078              		.loc 1 394 1 view .LVU253
 1079              		@ sp needed
 1080 0136 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1081              	.LVL139:
 1082              	.L47:
 1083              		.loc 1 394 1 view .LVU254
 1084 013a 00BF     		.align	2
 1085              	.L46:
 1086 013c 00000C40 		.word	1074528256
 1087 0140 00002040 		.word	1075838976
 1088              		.cfi_endproc
 1089              	.LFE139:
 1091              		.section	.text.Error_Handler,"ax",%progbits
 1092              		.align	1
 1093              		.global	Error_Handler
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1098              	Error_Handler:
 1099              	.LFB140:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** /* USER CODE END 4 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** /**
 399:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 400:Core/Src/main.c ****   * @retval None
 401:Core/Src/main.c ****   */
 402:Core/Src/main.c **** void Error_Handler(void)
 403:Core/Src/main.c **** {
 1100              		.loc 1 403 1 is_stmt 1 view -0
 1101              		.cfi_startproc
 1102              		@ Volatile: function does not return.
 1103              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 29


 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 404:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 405:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 406:Core/Src/main.c ****   __disable_irq();
 1106              		.loc 1 406 3 view .LVU256
 1107              	.LBB19:
 1108              	.LBI19:
 1109              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 30


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 31


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 32


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 33


 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 34


 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 35


 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 36


 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 37


 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 38


 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 39


 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 40


 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 41


 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 42


 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 43


 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 44


 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 45


 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 46


 1110              		.loc 2 960 27 view .LVU257
 1111              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1112              		.loc 2 962 3 view .LVU258
 1113              		.syntax unified
 1114              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1115 0000 72B6     		cpsid i
 1116              	@ 0 "" 2
 1117              		.thumb
 1118              		.syntax unified
 1119              	.L49:
 1120              	.LBE20:
 1121              	.LBE19:
 407:Core/Src/main.c ****   while (1)
 1122              		.loc 1 407 3 view .LVU259
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****   }
 1123              		.loc 1 409 3 view .LVU260
 407:Core/Src/main.c ****   while (1)
 1124              		.loc 1 407 9 view .LVU261
 1125 0002 FEE7     		b	.L49
 1126              		.cfi_endproc
 1127              	.LFE140:
 1129              		.section	.text.SystemClock_Config,"ax",%progbits
 1130              		.align	1
 1131              		.global	SystemClock_Config
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1136              	SystemClock_Config:
 1137              	.LFB135:
 218:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1138              		.loc 1 218 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 80
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 00B5     		push	{lr}
 1143              	.LCFI12:
 1144              		.cfi_def_cfa_offset 4
 1145              		.cfi_offset 14, -4
 1146 0002 95B0     		sub	sp, sp, #84
 1147              	.LCFI13:
 1148              		.cfi_def_cfa_offset 88
 219:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1149              		.loc 1 219 3 view .LVU263
 219:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1150              		.loc 1 219 22 is_stmt 0 view .LVU264
 1151 0004 3422     		movs	r2, #52
 1152 0006 0021     		movs	r1, #0
 1153 0008 07A8     		add	r0, sp, #28
 1154 000a FFF7FEFF 		bl	memset
 1155              	.LVL140:
 220:Core/Src/main.c **** 
 1156              		.loc 1 220 3 is_stmt 1 view .LVU265
 220:Core/Src/main.c **** 
 1157              		.loc 1 220 22 is_stmt 0 view .LVU266
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 47


 1158 000e 0023     		movs	r3, #0
 1159 0010 0293     		str	r3, [sp, #8]
 1160 0012 0393     		str	r3, [sp, #12]
 1161 0014 0493     		str	r3, [sp, #16]
 1162 0016 0593     		str	r3, [sp, #20]
 1163 0018 0693     		str	r3, [sp, #24]
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1164              		.loc 1 224 3 is_stmt 1 view .LVU267
 1165              	.LBB21:
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1166              		.loc 1 224 3 view .LVU268
 1167 001a 0093     		str	r3, [sp]
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1168              		.loc 1 224 3 view .LVU269
 1169 001c 214A     		ldr	r2, .L56
 1170 001e 116C     		ldr	r1, [r2, #64]
 1171 0020 41F08051 		orr	r1, r1, #268435456
 1172 0024 1164     		str	r1, [r2, #64]
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1173              		.loc 1 224 3 view .LVU270
 1174 0026 126C     		ldr	r2, [r2, #64]
 1175 0028 02F08052 		and	r2, r2, #268435456
 1176 002c 0092     		str	r2, [sp]
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1177              		.loc 1 224 3 view .LVU271
 1178 002e 009A     		ldr	r2, [sp]
 1179              	.LBE21:
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1180              		.loc 1 224 3 view .LVU272
 225:Core/Src/main.c **** 
 1181              		.loc 1 225 3 view .LVU273
 1182              	.LBB22:
 225:Core/Src/main.c **** 
 1183              		.loc 1 225 3 view .LVU274
 1184 0030 0193     		str	r3, [sp, #4]
 225:Core/Src/main.c **** 
 1185              		.loc 1 225 3 view .LVU275
 1186 0032 1D4A     		ldr	r2, .L56+4
 1187 0034 1368     		ldr	r3, [r2]
 1188 0036 23F44043 		bic	r3, r3, #49152
 1189 003a 43F48043 		orr	r3, r3, #16384
 1190 003e 1360     		str	r3, [r2]
 225:Core/Src/main.c **** 
 1191              		.loc 1 225 3 view .LVU276
 1192 0040 1368     		ldr	r3, [r2]
 1193 0042 03F44043 		and	r3, r3, #49152
 1194 0046 0193     		str	r3, [sp, #4]
 225:Core/Src/main.c **** 
 1195              		.loc 1 225 3 view .LVU277
 1196 0048 019B     		ldr	r3, [sp, #4]
 1197              	.LBE22:
 225:Core/Src/main.c **** 
 1198              		.loc 1 225 3 view .LVU278
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1199              		.loc 1 230 3 view .LVU279
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1200              		.loc 1 230 36 is_stmt 0 view .LVU280
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 48


 1201 004a 0123     		movs	r3, #1
 1202 004c 0793     		str	r3, [sp, #28]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1203              		.loc 1 231 3 is_stmt 1 view .LVU281
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1204              		.loc 1 231 30 is_stmt 0 view .LVU282
 1205 004e 4FF48033 		mov	r3, #65536
 1206 0052 0893     		str	r3, [sp, #32]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1207              		.loc 1 232 3 is_stmt 1 view .LVU283
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1208              		.loc 1 232 34 is_stmt 0 view .LVU284
 1209 0054 0223     		movs	r3, #2
 1210 0056 0D93     		str	r3, [sp, #52]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1211              		.loc 1 233 3 is_stmt 1 view .LVU285
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1212              		.loc 1 233 35 is_stmt 0 view .LVU286
 1213 0058 4FF48002 		mov	r2, #4194304
 1214 005c 0E92     		str	r2, [sp, #56]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1215              		.loc 1 234 3 is_stmt 1 view .LVU287
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1216              		.loc 1 234 30 is_stmt 0 view .LVU288
 1217 005e 0F22     		movs	r2, #15
 1218 0060 0F92     		str	r2, [sp, #60]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1219              		.loc 1 235 3 is_stmt 1 view .LVU289
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1220              		.loc 1 235 30 is_stmt 0 view .LVU290
 1221 0062 9022     		movs	r2, #144
 1222 0064 1092     		str	r2, [sp, #64]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1223              		.loc 1 236 3 is_stmt 1 view .LVU291
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1224              		.loc 1 236 30 is_stmt 0 view .LVU292
 1225 0066 1193     		str	r3, [sp, #68]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1226              		.loc 1 237 3 is_stmt 1 view .LVU293
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1227              		.loc 1 237 30 is_stmt 0 view .LVU294
 1228 0068 1293     		str	r3, [sp, #72]
 238:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1229              		.loc 1 238 3 is_stmt 1 view .LVU295
 238:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1230              		.loc 1 238 30 is_stmt 0 view .LVU296
 1231 006a 1393     		str	r3, [sp, #76]
 239:Core/Src/main.c ****   {
 1232              		.loc 1 239 3 is_stmt 1 view .LVU297
 239:Core/Src/main.c ****   {
 1233              		.loc 1 239 7 is_stmt 0 view .LVU298
 1234 006c 07A8     		add	r0, sp, #28
 1235 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1236              	.LVL141:
 239:Core/Src/main.c ****   {
 1237              		.loc 1 239 6 discriminator 1 view .LVU299
 1238 0072 98B9     		cbnz	r0, .L54
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 49


 246:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1239              		.loc 1 246 3 is_stmt 1 view .LVU300
 246:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1240              		.loc 1 246 31 is_stmt 0 view .LVU301
 1241 0074 0F23     		movs	r3, #15
 1242 0076 0293     		str	r3, [sp, #8]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1243              		.loc 1 248 3 is_stmt 1 view .LVU302
 248:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1244              		.loc 1 248 34 is_stmt 0 view .LVU303
 1245 0078 0223     		movs	r3, #2
 1246 007a 0393     		str	r3, [sp, #12]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1247              		.loc 1 249 3 is_stmt 1 view .LVU304
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1248              		.loc 1 249 35 is_stmt 0 view .LVU305
 1249 007c 0023     		movs	r3, #0
 1250 007e 0493     		str	r3, [sp, #16]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1251              		.loc 1 250 3 is_stmt 1 view .LVU306
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1252              		.loc 1 250 36 is_stmt 0 view .LVU307
 1253 0080 4FF4A053 		mov	r3, #5120
 1254 0084 0593     		str	r3, [sp, #20]
 251:Core/Src/main.c **** 
 1255              		.loc 1 251 3 is_stmt 1 view .LVU308
 251:Core/Src/main.c **** 
 1256              		.loc 1 251 36 is_stmt 0 view .LVU309
 1257 0086 4FF48053 		mov	r3, #4096
 1258 008a 0693     		str	r3, [sp, #24]
 253:Core/Src/main.c ****   {
 1259              		.loc 1 253 3 is_stmt 1 view .LVU310
 253:Core/Src/main.c ****   {
 1260              		.loc 1 253 7 is_stmt 0 view .LVU311
 1261 008c 0321     		movs	r1, #3
 1262 008e 02A8     		add	r0, sp, #8
 1263 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1264              	.LVL142:
 253:Core/Src/main.c ****   {
 1265              		.loc 1 253 6 discriminator 1 view .LVU312
 1266 0094 20B9     		cbnz	r0, .L55
 257:Core/Src/main.c **** 
 1267              		.loc 1 257 1 view .LVU313
 1268 0096 15B0     		add	sp, sp, #84
 1269              	.LCFI14:
 1270              		.cfi_remember_state
 1271              		.cfi_def_cfa_offset 4
 1272              		@ sp needed
 1273 0098 5DF804FB 		ldr	pc, [sp], #4
 1274              	.L54:
 1275              	.LCFI15:
 1276              		.cfi_restore_state
 241:Core/Src/main.c ****   }
 1277              		.loc 1 241 5 is_stmt 1 view .LVU314
 1278 009c FFF7FEFF 		bl	Error_Handler
 1279              	.LVL143:
 1280              	.L55:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 50


 255:Core/Src/main.c ****   }
 1281              		.loc 1 255 5 view .LVU315
 1282 00a0 FFF7FEFF 		bl	Error_Handler
 1283              	.LVL144:
 1284              	.L57:
 1285              		.align	2
 1286              	.L56:
 1287 00a4 00380240 		.word	1073887232
 1288 00a8 00700040 		.word	1073770496
 1289              		.cfi_endproc
 1290              	.LFE135:
 1292              		.section	.text.delay,"ax",%progbits
 1293              		.align	1
 1294              		.global	delay
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1299              	delay:
 1300              	.LVL145:
 1301              	.LFB141:
 410:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****  * Basic delay function
 415:Core/Src/main.c ****  */
 416:Core/Src/main.c **** void delay(uint32_t delay_time){
 1302              		.loc 1 416 32 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 8
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 1307              		.loc 1 416 32 is_stmt 0 view .LVU317
 1308 0000 82B0     		sub	sp, sp, #8
 1309              	.LCFI16:
 1310              		.cfi_def_cfa_offset 8
 417:Core/Src/main.c **** 	uint32_t i = (delay_time*8000)/8;
 1311              		.loc 1 417 2 is_stmt 1 view .LVU318
 1312              		.loc 1 417 26 is_stmt 0 view .LVU319
 1313 0002 4FF4FA53 		mov	r3, #8000
 1314 0006 03FB00F2 		mul	r2, r3, r0
 1315              	.LVL146:
 418:Core/Src/main.c **** 	uint32_t i_in = i/1000;
 1316              		.loc 1 418 2 is_stmt 1 view .LVU320
 1317              		.loc 1 418 11 is_stmt 0 view .LVU321
 1318 000a 0C4B     		ldr	r3, .L65
 1319 000c A3FB0232 		umull	r3, r2, r3, r2
 1320              	.LVL147:
 1321              		.loc 1 418 11 view .LVU322
 1322 0010 520A     		lsrs	r2, r2, #9
 1323              	.LVL148:
 419:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1324              		.loc 1 419 2 is_stmt 1 view .LVU323
 1325              	.LBB23:
 1326              		.loc 1 419 6 view .LVU324
 1327              		.loc 1 419 24 is_stmt 0 view .LVU325
 1328 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 51


 1329 0014 0093     		str	r3, [sp]
 1330              		.loc 1 419 2 view .LVU326
 1331 0016 08E0     		b	.L59
 1332              	.L61:
 1333              	.LBB24:
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** 	  }
 1334              		.loc 1 422 4 is_stmt 1 view .LVU327
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1335              		.loc 1 420 42 discriminator 3 view .LVU328
 1336 0018 019B     		ldr	r3, [sp, #4]
 1337 001a 0133     		adds	r3, r3, #1
 1338 001c 0193     		str	r3, [sp, #4]
 1339              	.L60:
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1340              		.loc 1 420 32 discriminator 1 view .LVU329
 1341 001e 019B     		ldr	r3, [sp, #4]
 1342 0020 9342     		cmp	r3, r2
 1343 0022 F9D3     		bcc	.L61
 1344              	.LBE24:
 419:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1345              		.loc 1 419 38 discriminator 2 view .LVU330
 1346 0024 009B     		ldr	r3, [sp]
 1347 0026 0133     		adds	r3, r3, #1
 1348 0028 0093     		str	r3, [sp]
 1349              	.L59:
 419:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1350              		.loc 1 419 30 discriminator 1 view .LVU331
 1351 002a 009B     		ldr	r3, [sp]
 1352 002c B3F57A7F 		cmp	r3, #1000
 1353 0030 02D2     		bcs	.L64
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1354              		.loc 1 420 4 view .LVU332
 1355              	.LBB25:
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1356              		.loc 1 420 8 view .LVU333
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1357              		.loc 1 420 26 is_stmt 0 view .LVU334
 1358 0032 0023     		movs	r3, #0
 1359 0034 0193     		str	r3, [sp, #4]
 420:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1360              		.loc 1 420 4 view .LVU335
 1361 0036 F2E7     		b	.L60
 1362              	.L64:
 1363              	.LBE25:
 1364              	.LBE23:
 423:Core/Src/main.c **** 	}
 424:Core/Src/main.c **** }
 1365              		.loc 1 424 1 view .LVU336
 1366 0038 02B0     		add	sp, sp, #8
 1367              	.LCFI17:
 1368              		.cfi_def_cfa_offset 0
 1369              		@ sp needed
 1370 003a 7047     		bx	lr
 1371              	.L66:
 1372              		.align	2
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 52


 1373              	.L65:
 1374 003c D34D6210 		.word	274877907
 1375              		.cfi_endproc
 1376              	.LFE141:
 1378              		.section	.text.main,"ax",%progbits
 1379              		.align	1
 1380              		.global	main
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1385              	main:
 1386              	.LFB134:
  87:Core/Src/main.c **** 
 1387              		.loc 1 87 1 is_stmt 1 view -0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1392              	.LCFI18:
 1393              		.cfi_def_cfa_offset 32
 1394              		.cfi_offset 4, -32
 1395              		.cfi_offset 5, -28
 1396              		.cfi_offset 6, -24
 1397              		.cfi_offset 7, -20
 1398              		.cfi_offset 8, -16
 1399              		.cfi_offset 9, -12
 1400              		.cfi_offset 10, -8
 1401              		.cfi_offset 14, -4
  96:Core/Src/main.c **** 
 1402              		.loc 1 96 3 view .LVU338
 1403 0004 FFF7FEFF 		bl	HAL_Init
 1404              	.LVL149:
 103:Core/Src/main.c **** 
 1405              		.loc 1 103 3 view .LVU339
 1406 0008 FFF7FEFF 		bl	SystemClock_Config
 1407              	.LVL150:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1408              		.loc 1 110 3 view .LVU340
 1409 000c FFF7FEFF 		bl	MX_GPIO_Init
 1410              	.LVL151:
 116:Core/Src/main.c ****    for(int i=0; i<5; i++){
 1411              		.loc 1 116 4 view .LVU341
 116:Core/Src/main.c ****    for(int i=0; i<5; i++){
 1412              		.loc 1 116 10 is_stmt 0 view .LVU342
 1413 0010 0024     		movs	r4, #0
 1414 0012 574B     		ldr	r3, .L74
 1415 0014 1C60     		str	r4, [r3]
 117:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1416              		.loc 1 117 4 is_stmt 1 view .LVU343
 1417              	.LBB26:
 117:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1418              		.loc 1 117 8 view .LVU344
 1419              	.LVL152:
 117:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1420              		.loc 1 117 4 is_stmt 0 view .LVU345
 1421 0016 4FE0     		b	.L68
 1422              	.LVL153:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 53


 1423              	.L69:
 1424              	.LBB27:
 119:Core/Src/main.c **** 
 1425              		.loc 1 119 5 is_stmt 1 view .LVU346
 119:Core/Src/main.c **** 
 1426              		.loc 1 119 16 is_stmt 0 view .LVU347
 1427 0018 564D     		ldr	r5, .L74+4
 1428 001a 0123     		movs	r3, #1
 1429 001c 6B61     		str	r3, [r5, #20]
 122:Core/Src/main.c ****  	  height = imag_dim;
 1430              		.loc 1 122 5 is_stmt 1 view .LVU348
 122:Core/Src/main.c ****  	  height = imag_dim;
 1431              		.loc 1 122 27 is_stmt 0 view .LVU349
 1432 001e 564B     		ldr	r3, .L74+8
 1433 0020 53F82430 		ldr	r3, [r3, r4, lsl #2]
 122:Core/Src/main.c ****  	  height = imag_dim;
 1434              		.loc 1 122 14 view .LVU350
 1435 0024 554F     		ldr	r7, .L74+12
 1436 0026 3B60     		str	r3, [r7]
 123:Core/Src/main.c ****  	  width = imag_dim;
 1437              		.loc 1 123 5 is_stmt 1 view .LVU351
 123:Core/Src/main.c ****  	  width = imag_dim;
 1438              		.loc 1 123 12 is_stmt 0 view .LVU352
 1439 0028 DFF854A1 		ldr	r10, .L74+16
 1440 002c CAF80030 		str	r3, [r10]
 124:Core/Src/main.c **** 
 1441              		.loc 1 124 5 is_stmt 1 view .LVU353
 124:Core/Src/main.c **** 
 1442              		.loc 1 124 11 is_stmt 0 view .LVU354
 1443 0030 544E     		ldr	r6, .L74+20
 1444 0032 3360     		str	r3, [r6]
 127:Core/Src/main.c ****       //do mandelbrot with double
 1445              		.loc 1 127 5 is_stmt 1 view .LVU355
 127:Core/Src/main.c ****       //do mandelbrot with double
 1446              		.loc 1 127 18 is_stmt 0 view .LVU356
 1447 0034 FFF7FEFF 		bl	HAL_GetTick
 1448              	.LVL154:
 127:Core/Src/main.c ****       //do mandelbrot with double
 1449              		.loc 1 127 18 discriminator 1 view .LVU357
 1450 0038 4FF00009 		mov	r9, #0
 127:Core/Src/main.c ****       //do mandelbrot with double
 1451              		.loc 1 127 16 discriminator 1 view .LVU358
 1452 003c DFF84881 		ldr	r8, .L74+24
 1453 0040 C8F80000 		str	r0, [r8]
 1454 0044 C8F80490 		str	r9, [r8, #4]
 129:Core/Src/main.c ****  		 
 1455              		.loc 1 129 7 is_stmt 1 view .LVU359
 129:Core/Src/main.c ****  		 
 1456              		.loc 1 129 18 is_stmt 0 view .LVU360
 1457 0048 6422     		movs	r2, #100
 1458 004a DAF80010 		ldr	r1, [r10]
 1459 004e 3068     		ldr	r0, [r6]
 1460 0050 FFF7FEFF 		bl	calculate_mandelbrot_double
 1461              	.LVL155:
 129:Core/Src/main.c ****  		 
 1462              		.loc 1 129 16 discriminator 1 view .LVU361
 1463 0054 4D4E     		ldr	r6, .L74+28
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 54


 1464 0056 C6E90001 		strd	r0, [r6]
 132:Core/Src/main.c **** 
 1465              		.loc 1 132 5 is_stmt 1 view .LVU362
 132:Core/Src/main.c **** 
 1466              		.loc 1 132 16 is_stmt 0 view .LVU363
 1467 005a FFF7FEFF 		bl	HAL_GetTick
 1468              	.LVL156:
 132:Core/Src/main.c **** 
 1469              		.loc 1 132 14 discriminator 1 view .LVU364
 1470 005e 4C4B     		ldr	r3, .L74+32
 1471 0060 1860     		str	r0, [r3]
 1472 0062 C3F80490 		str	r9, [r3, #4]
 135:Core/Src/main.c **** 
 1473              		.loc 1 135 5 is_stmt 1 view .LVU365
 135:Core/Src/main.c **** 
 1474              		.loc 1 135 29 is_stmt 0 view .LVU366
 1475 0066 D8F80030 		ldr	r3, [r8]
 1476 006a D8F80420 		ldr	r2, [r8, #4]
 1477 006e C01A     		subs	r0, r0, r3
 1478 0070 62EB4202 		sbc	r2, r2, r2, lsl #1
 135:Core/Src/main.c **** 
 1479              		.loc 1 135 18 view .LVU367
 1480 0074 474B     		ldr	r3, .L74+36
 1481 0076 1860     		str	r0, [r3]
 1482 0078 5A60     		str	r2, [r3, #4]
 137:Core/Src/main.c ****  	  time_elapsed_d_arr[place] = time_elapsed;
 1483              		.loc 1 137 7 is_stmt 1 view .LVU368
 137:Core/Src/main.c ****  	  time_elapsed_d_arr[place] = time_elapsed;
 1484              		.loc 1 137 19 is_stmt 0 view .LVU369
 1485 007a DFF8F4C0 		ldr	ip, .L74
 1486 007e DCF80030 		ldr	r3, [ip]
 137:Core/Src/main.c ****  	  time_elapsed_d_arr[place] = time_elapsed;
 1487              		.loc 1 137 27 view .LVU370
 1488 0082 3F68     		ldr	r7, [r7]
 1489 0084 4449     		ldr	r1, .L74+40
 1490 0086 41F82370 		str	r7, [r1, r3, lsl #2]
 138:Core/Src/main.c ****  	  checksum_d_arr[place] = checksum;
 1491              		.loc 1 138 5 is_stmt 1 view .LVU371
 138:Core/Src/main.c ****  	  checksum_d_arr[place] = checksum;
 1492              		.loc 1 138 31 is_stmt 0 view .LVU372
 1493 008a 4449     		ldr	r1, .L74+44
 1494 008c 01EBC307 		add	r7, r1, r3, lsl #3
 1495 0090 41F83300 		str	r0, [r1, r3, lsl #3]
 1496 0094 7A60     		str	r2, [r7, #4]
 139:Core/Src/main.c ****       // increment the index for all output arrays
 1497              		.loc 1 139 5 is_stmt 1 view .LVU373
 139:Core/Src/main.c ****       // increment the index for all output arrays
 1498              		.loc 1 139 27 is_stmt 0 view .LVU374
 1499 0096 424A     		ldr	r2, .L74+48
 1500 0098 02EBC302 		add	r2, r2, r3, lsl #3
 1501 009c D6E90001 		ldrd	r0, [r6]
 1502 00a0 C2E90001 		strd	r0, [r2]
 141:Core/Src/main.c **** 
 1503              		.loc 1 141 7 is_stmt 1 view .LVU375
 141:Core/Src/main.c **** 
 1504              		.loc 1 141 12 is_stmt 0 view .LVU376
 1505 00a4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 55


 1506 00a6 CCF80030 		str	r3, [ip]
 144:Core/Src/main.c **** 
 1507              		.loc 1 144 5 is_stmt 1 view .LVU377
 144:Core/Src/main.c **** 
 1508              		.loc 1 144 16 is_stmt 0 view .LVU378
 1509 00aa 0323     		movs	r3, #3
 1510 00ac 6B61     		str	r3, [r5, #20]
 147:Core/Src/main.c **** 
 1511              		.loc 1 147 5 is_stmt 1 view .LVU379
 1512 00ae 4FF47A70 		mov	r0, #1000
 1513 00b2 FFF7FEFF 		bl	delay
 1514              	.LVL157:
 1515              	.LBE27:
 117:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1516              		.loc 1 117 23 discriminator 3 view .LVU380
 1517 00b6 0134     		adds	r4, r4, #1
 1518              	.LVL158:
 1519              	.L68:
 117:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1520              		.loc 1 117 18 discriminator 1 view .LVU381
 1521 00b8 042C     		cmp	r4, #4
 1522 00ba ADDD     		ble	.L69
 1523              	.LBE26:
 152:Core/Src/main.c ****       for(int j=0; j<5; j++){
 1524              		.loc 1 152 4 view .LVU382
 152:Core/Src/main.c ****       for(int j=0; j<5; j++){
 1525              		.loc 1 152 10 is_stmt 0 view .LVU383
 1526 00bc 0024     		movs	r4, #0
 1527              	.LVL159:
 152:Core/Src/main.c ****       for(int j=0; j<5; j++){
 1528              		.loc 1 152 10 view .LVU384
 1529 00be 2C4B     		ldr	r3, .L74
 1530 00c0 1C60     		str	r4, [r3]
 153:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
 1531              		.loc 1 153 7 is_stmt 1 view .LVU385
 1532              	.LBB28:
 153:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
 1533              		.loc 1 153 11 view .LVU386
 1534              	.LVL160:
 153:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
 1535              		.loc 1 153 7 is_stmt 0 view .LVU387
 1536 00c2 4FE0     		b	.L70
 1537              	.LVL161:
 1538              	.L71:
 1539              	.LBB29:
 155:Core/Src/main.c **** 
 1540              		.loc 1 155 8 is_stmt 1 view .LVU388
 155:Core/Src/main.c **** 
 1541              		.loc 1 155 19 is_stmt 0 view .LVU389
 1542 00c4 2B4D     		ldr	r5, .L74+4
 1543 00c6 0123     		movs	r3, #1
 1544 00c8 6B61     		str	r3, [r5, #20]
 158:Core/Src/main.c ****     	  height = imag_dim;
 1545              		.loc 1 158 8 is_stmt 1 view .LVU390
 158:Core/Src/main.c ****     	  height = imag_dim;
 1546              		.loc 1 158 30 is_stmt 0 view .LVU391
 1547 00ca 2B4B     		ldr	r3, .L74+8
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 56


 1548 00cc 53F82430 		ldr	r3, [r3, r4, lsl #2]
 158:Core/Src/main.c ****     	  height = imag_dim;
 1549              		.loc 1 158 17 view .LVU392
 1550 00d0 2A4F     		ldr	r7, .L74+12
 1551 00d2 3B60     		str	r3, [r7]
 159:Core/Src/main.c ****     	  width = imag_dim;
 1552              		.loc 1 159 8 is_stmt 1 view .LVU393
 159:Core/Src/main.c ****     	  width = imag_dim;
 1553              		.loc 1 159 15 is_stmt 0 view .LVU394
 1554 00d4 DFF8A8A0 		ldr	r10, .L74+16
 1555 00d8 CAF80030 		str	r3, [r10]
 160:Core/Src/main.c **** 
 1556              		.loc 1 160 8 is_stmt 1 view .LVU395
 160:Core/Src/main.c **** 
 1557              		.loc 1 160 14 is_stmt 0 view .LVU396
 1558 00dc 294E     		ldr	r6, .L74+20
 1559 00de 3360     		str	r3, [r6]
 163:Core/Src/main.c ****          //do mandelbrot with double
 1560              		.loc 1 163 8 is_stmt 1 view .LVU397
 163:Core/Src/main.c ****          //do mandelbrot with double
 1561              		.loc 1 163 21 is_stmt 0 view .LVU398
 1562 00e0 FFF7FEFF 		bl	HAL_GetTick
 1563              	.LVL162:
 163:Core/Src/main.c ****          //do mandelbrot with double
 1564              		.loc 1 163 21 discriminator 1 view .LVU399
 1565 00e4 4FF00009 		mov	r9, #0
 163:Core/Src/main.c ****          //do mandelbrot with double
 1566              		.loc 1 163 19 discriminator 1 view .LVU400
 1567 00e8 DFF89C80 		ldr	r8, .L74+24
 1568 00ec C8F80000 		str	r0, [r8]
 1569 00f0 C8F80490 		str	r9, [r8, #4]
 165:Core/Src/main.c **** 
 1570              		.loc 1 165 10 is_stmt 1 view .LVU401
 165:Core/Src/main.c **** 
 1571              		.loc 1 165 21 is_stmt 0 view .LVU402
 1572 00f4 6422     		movs	r2, #100
 1573 00f6 DAF80010 		ldr	r1, [r10]
 1574 00fa 3068     		ldr	r0, [r6]
 1575 00fc FFF7FEFF 		bl	calculate_mandelbrot_float
 1576              	.LVL163:
 165:Core/Src/main.c **** 
 1577              		.loc 1 165 19 discriminator 1 view .LVU403
 1578 0100 224E     		ldr	r6, .L74+28
 1579 0102 C6E90001 		strd	r0, [r6]
 168:Core/Src/main.c **** 
 1580              		.loc 1 168 8 is_stmt 1 view .LVU404
 168:Core/Src/main.c **** 
 1581              		.loc 1 168 19 is_stmt 0 view .LVU405
 1582 0106 FFF7FEFF 		bl	HAL_GetTick
 1583              	.LVL164:
 168:Core/Src/main.c **** 
 1584              		.loc 1 168 17 discriminator 1 view .LVU406
 1585 010a 214B     		ldr	r3, .L74+32
 1586 010c 1860     		str	r0, [r3]
 1587 010e C3F80490 		str	r9, [r3, #4]
 171:Core/Src/main.c **** 
 1588              		.loc 1 171 8 is_stmt 1 view .LVU407
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 57


 171:Core/Src/main.c **** 
 1589              		.loc 1 171 32 is_stmt 0 view .LVU408
 1590 0112 D8F80030 		ldr	r3, [r8]
 1591 0116 D8F80420 		ldr	r2, [r8, #4]
 1592 011a C01A     		subs	r0, r0, r3
 1593 011c 62EB4202 		sbc	r2, r2, r2, lsl #1
 171:Core/Src/main.c **** 
 1594              		.loc 1 171 21 view .LVU409
 1595 0120 1C4B     		ldr	r3, .L74+36
 1596 0122 1860     		str	r0, [r3]
 1597 0124 5A60     		str	r2, [r3, #4]
 173:Core/Src/main.c ****     	 time_elapsed_f_arr[place] = time_elapsed;
 1598              		.loc 1 173 10 is_stmt 1 view .LVU410
 173:Core/Src/main.c ****     	 time_elapsed_f_arr[place] = time_elapsed;
 1599              		.loc 1 173 22 is_stmt 0 view .LVU411
 1600 0126 DFF848C0 		ldr	ip, .L74
 1601 012a DCF80030 		ldr	r3, [ip]
 173:Core/Src/main.c ****     	 time_elapsed_f_arr[place] = time_elapsed;
 1602              		.loc 1 173 30 view .LVU412
 1603 012e 3F68     		ldr	r7, [r7]
 1604 0130 1949     		ldr	r1, .L74+40
 1605 0132 41F82370 		str	r7, [r1, r3, lsl #2]
 174:Core/Src/main.c ****     	 checksum_f_arr[place] = checksum;
 1606              		.loc 1 174 7 is_stmt 1 view .LVU413
 174:Core/Src/main.c ****     	 checksum_f_arr[place] = checksum;
 1607              		.loc 1 174 33 is_stmt 0 view .LVU414
 1608 0136 1B49     		ldr	r1, .L74+52
 1609 0138 01EBC307 		add	r7, r1, r3, lsl #3
 1610 013c 41F83300 		str	r0, [r1, r3, lsl #3]
 1611 0140 7A60     		str	r2, [r7, #4]
 175:Core/Src/main.c ****          // increment the index for all output arrays
 1612              		.loc 1 175 7 is_stmt 1 view .LVU415
 175:Core/Src/main.c ****          // increment the index for all output arrays
 1613              		.loc 1 175 29 is_stmt 0 view .LVU416
 1614 0142 194A     		ldr	r2, .L74+56
 1615 0144 02EBC302 		add	r2, r2, r3, lsl #3
 1616 0148 D6E90001 		ldrd	r0, [r6]
 1617 014c C2E90001 		strd	r0, [r2]
 177:Core/Src/main.c **** 
 1618              		.loc 1 177 10 is_stmt 1 view .LVU417
 177:Core/Src/main.c **** 
 1619              		.loc 1 177 15 is_stmt 0 view .LVU418
 1620 0150 0133     		adds	r3, r3, #1
 1621 0152 CCF80030 		str	r3, [ip]
 180:Core/Src/main.c **** 
 1622              		.loc 1 180 8 is_stmt 1 view .LVU419
 180:Core/Src/main.c **** 
 1623              		.loc 1 180 19 is_stmt 0 view .LVU420
 1624 0156 0323     		movs	r3, #3
 1625 0158 6B61     		str	r3, [r5, #20]
 183:Core/Src/main.c **** 
 1626              		.loc 1 183 8 is_stmt 1 view .LVU421
 1627 015a 4FF47A70 		mov	r0, #1000
 1628 015e FFF7FEFF 		bl	delay
 1629              	.LVL165:
 1630              	.LBE29:
 153:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 58


 1631              		.loc 1 153 26 discriminator 3 view .LVU422
 1632 0162 0134     		adds	r4, r4, #1
 1633              	.LVL166:
 1634              	.L70:
 153:Core/Src/main.c ****     	  //TODO: Turn on LED 0 to signify the start of the operation
 1635              		.loc 1 153 21 discriminator 1 view .LVU423
 1636 0164 042C     		cmp	r4, #4
 1637 0166 ADDD     		ble	.L71
 1638              	.LBE28:
 188:Core/Src/main.c **** 
 1639              		.loc 1 188 4 view .LVU424
 188:Core/Src/main.c **** 
 1640              		.loc 1 188 15 is_stmt 0 view .LVU425
 1641 0168 024B     		ldr	r3, .L74+4
 1642 016a 0022     		movs	r2, #0
 1643 016c 5A61     		str	r2, [r3, #20]
 1644              	.L72:
 192:Core/Src/main.c ****   {
 1645              		.loc 1 192 3 is_stmt 1 view .LVU426
 209:Core/Src/main.c ****   /* USER CODE END 3 */
 1646              		.loc 1 209 3 view .LVU427
 192:Core/Src/main.c ****   {
 1647              		.loc 1 192 9 view .LVU428
 1648 016e FEE7     		b	.L72
 1649              	.L75:
 1650              		.align	2
 1651              	.L74:
 1652 0170 00000000 		.word	place
 1653 0174 00040240 		.word	1073873920
 1654 0178 00000000 		.word	test_values
 1655 017c 00000000 		.word	imag_dim
 1656 0180 00000000 		.word	height
 1657 0184 00000000 		.word	width
 1658 0188 00000000 		.word	start_time
 1659 018c 00000000 		.word	checksum
 1660 0190 00000000 		.word	end_time
 1661 0194 00000000 		.word	time_elapsed
 1662 0198 00000000 		.word	imag_dim_arr
 1663 019c 00000000 		.word	time_elapsed_d_arr
 1664 01a0 00000000 		.word	checksum_d_arr
 1665 01a4 00000000 		.word	time_elapsed_f_arr
 1666 01a8 00000000 		.word	checksum_f_arr
 1667              		.cfi_endproc
 1668              	.LFE134:
 1670              		.global	place
 1671              		.section	.bss.place,"aw",%nobits
 1672              		.align	2
 1675              	place:
 1676 0000 00000000 		.space	4
 1677              		.global	time_elapsed
 1678              		.section	.bss.time_elapsed,"aw",%nobits
 1679              		.align	3
 1682              	time_elapsed:
 1683 0000 00000000 		.space	8
 1683      00000000 
 1684              		.global	end_time
 1685              		.section	.bss.end_time,"aw",%nobits
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 59


 1686              		.align	3
 1689              	end_time:
 1690 0000 00000000 		.space	8
 1690      00000000 
 1691              		.global	start_time
 1692              		.section	.bss.start_time,"aw",%nobits
 1693              		.align	3
 1696              	start_time:
 1697 0000 00000000 		.space	8
 1697      00000000 
 1698              		.global	checksum_f_arr
 1699              		.section	.bss.checksum_f_arr,"aw",%nobits
 1700              		.align	3
 1703              	checksum_f_arr:
 1704 0000 00000000 		.space	40
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1705              		.global	checksum_d_arr
 1706              		.section	.bss.checksum_d_arr,"aw",%nobits
 1707              		.align	3
 1710              	checksum_d_arr:
 1711 0000 00000000 		.space	40
 1711      00000000 
 1711      00000000 
 1711      00000000 
 1711      00000000 
 1712              		.global	time_elapsed_f_arr
 1713              		.section	.bss.time_elapsed_f_arr,"aw",%nobits
 1714              		.align	3
 1717              	time_elapsed_f_arr:
 1718 0000 00000000 		.space	40
 1718      00000000 
 1718      00000000 
 1718      00000000 
 1718      00000000 
 1719              		.global	time_elapsed_d_arr
 1720              		.section	.bss.time_elapsed_d_arr,"aw",%nobits
 1721              		.align	3
 1724              	time_elapsed_d_arr:
 1725 0000 00000000 		.space	40
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1726              		.global	imag_dim_arr
 1727              		.section	.bss.imag_dim_arr,"aw",%nobits
 1728              		.align	2
 1731              	imag_dim_arr:
 1732 0000 00000000 		.space	20
 1732      00000000 
 1732      00000000 
 1732      00000000 
 1732      00000000 
 1733              		.global	checksum
 1734              		.section	.bss.checksum,"aw",%nobits
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 60


 1735              		.align	3
 1738              	checksum:
 1739 0000 00000000 		.space	8
 1739      00000000 
 1740              		.global	imag_dim
 1741              		.section	.bss.imag_dim,"aw",%nobits
 1742              		.align	2
 1745              	imag_dim:
 1746 0000 00000000 		.space	4
 1747              		.global	test_values
 1748              		.section	.data.test_values,"aw"
 1749              		.align	2
 1752              	test_values:
 1753 0000 80000000 		.word	128
 1754 0004 A0000000 		.word	160
 1755 0008 C0000000 		.word	192
 1756 000c E0000000 		.word	224
 1757 0010 00010000 		.word	256
 1758              		.global	width
 1759              		.section	.bss.width,"aw",%nobits
 1760              		.align	2
 1763              	width:
 1764 0000 00000000 		.space	4
 1765              		.global	height
 1766              		.section	.bss.height,"aw",%nobits
 1767              		.align	2
 1770              	height:
 1771 0000 00000000 		.space	4
 1772              		.text
 1773              	.Letext0:
 1774              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1775              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1776              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1777              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1778              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1779              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1780              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1781              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1782              		.file 11 "<built-in>"
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:131    .text.MX_GPIO_Init:00000074 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:141    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:147    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:452    .text.calculate_mandelbrot_fixed_point_arithmetic:00000198 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:472    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:478    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:778    .text.calculate_mandelbrot_double:0000018c $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:795    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:801    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1086   .text.calculate_mandelbrot_float:0000013c $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1092   .text.Error_Handler:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1098   .text.Error_Handler:00000000 Error_Handler
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1130   .text.SystemClock_Config:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1136   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1287   .text.SystemClock_Config:000000a4 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1293   .text.delay:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1299   .text.delay:00000000 delay
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1374   .text.delay:0000003c $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1379   .text.main:00000000 $t
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1385   .text.main:00000000 main
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1652   .text.main:00000170 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1675   .bss.place:00000000 place
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1752   .data.test_values:00000000 test_values
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1745   .bss.imag_dim:00000000 imag_dim
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1770   .bss.height:00000000 height
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1763   .bss.width:00000000 width
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1696   .bss.start_time:00000000 start_time
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1738   .bss.checksum:00000000 checksum
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1689   .bss.end_time:00000000 end_time
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1682   .bss.time_elapsed:00000000 time_elapsed
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1731   .bss.imag_dim_arr:00000000 imag_dim_arr
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1724   .bss.time_elapsed_d_arr:00000000 time_elapsed_d_arr
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1710   .bss.checksum_d_arr:00000000 checksum_d_arr
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1717   .bss.time_elapsed_f_arr:00000000 time_elapsed_f_arr
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1703   .bss.checksum_f_arr:00000000 checksum_f_arr
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1672   .bss.place:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1679   .bss.time_elapsed:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1686   .bss.end_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1693   .bss.start_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1700   .bss.checksum_f_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1707   .bss.checksum_d_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1714   .bss.time_elapsed_f_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1721   .bss.time_elapsed_d_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1728   .bss.imag_dim_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1735   .bss.checksum:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1742   .bss.imag_dim:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1749   .data.test_values:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1760   .bss.width:00000000 $d
C:\Users\chris\AppData\Local\Temp\cccHxgDR.s:1767   .bss.height:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\Users\chris\AppData\Local\Temp\cccHxgDR.s 			page 62


__aeabi_i2d
__aeabi_ddiv
__aeabi_d2lz
__aeabi_ldivmod
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_ul2d
__aeabi_d2ulz
__aeabi_d2f
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
__aeabi_i2f
__aeabi_fcmpgt
__aeabi_fcmple
__aeabi_ul2f
__aeabi_f2ulz
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
