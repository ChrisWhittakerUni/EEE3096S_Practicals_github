ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** /*
  48:Core/Src/main.c ****   start_time
  49:Core/Src/main.c ****   end_time
  50:Core/Src/main.c ****   execution_time 
  51:Core/Src/main.c ****   checksum: should be uint64_t
  52:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  53:Core/Src/main.c **** */
  54:Core/Src/main.c **** uint64_t imag_dim = 160;
  55:Core/Src/main.c **** uint64_t checksum;
  56:Core/Src/main.c **** float start_time;
  57:Core/Src/main.c **** float end_time;
  58:Core/Src/main.c **** float time_elapsed;
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** static void MX_GPIO_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  66:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 106:Core/Src/main.c ****   GPIOB->ODR = 0b00000001;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   //TODO: Record the start time
 109:Core/Src/main.c ****   start_time = HAL_GetTick();
 110:Core/Src/main.c ****   
 111:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 112:Core/Src/main.c ****   //checksum = calculate_mandelbrot_fixed_point_arithmetic(imag_dim, imag_dim, MAX_ITER);
 113:Core/Src/main.c ****   checksum = calculate_mandelbrot_double(imag_dim, imag_dim, MAX_ITER);
 114:Core/Src/main.c ****   //TODO: Record the end time
 115:Core/Src/main.c ****   end_time = HAL_GetTick();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   //TODO: Calculate the execution time
 118:Core/Src/main.c ****   time_elapsed = end_time - start_time;
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 121:Core/Src/main.c ****   GPIOB->ODR = 0b00000011;
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 124:Core/Src/main.c ****   delay(1000);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   //TODO: Turn off the LEDs
 127:Core/Src/main.c ****   GPIOB->ODR = 0b00000000;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_idiv
 120              		.global	__aeabi_i2d
 121              		.global	__aeabi_dmul
 122              		.global	__aeabi_dsub
 123              		.global	__aeabi_d2lz
 124              		.global	__aeabi_dadd
 125              		.global	__aeabi_ldivmod
 126              		.global	__aeabi_lmul
 127              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 128              		.align	1
 129              		.global	calculate_mandelbrot_fixed_point_arithmetic
 130              		.syntax unified
 131              		.code	16
 132              		.thumb_func
 134              	calculate_mandelbrot_fixed_point_arithmetic:
 135              	.LVL3:
 136              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 137              		.loc 1 208 96 is_stmt 1 view -0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 7


 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 72
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 208 96 is_stmt 0 view .LVU27
 142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 DE46     		mov	lr, fp
 151 0004 5746     		mov	r7, r10
 152 0006 4E46     		mov	r6, r9
 153 0008 4546     		mov	r5, r8
 154 000a E0B5     		push	{r5, r6, r7, lr}
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 36
 157              		.cfi_offset 8, -36
 158              		.cfi_offset 9, -32
 159              		.cfi_offset 10, -28
 160              		.cfi_offset 11, -24
 161 000c 93B0     		sub	sp, sp, #76
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 112
 164 000e 1090     		str	r0, [sp, #64]
 165 0010 0F91     		str	r1, [sp, #60]
 166 0012 1192     		str	r2, [sp, #68]
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 167              		.loc 1 209 3 is_stmt 1 view .LVU28
 168              	.LVL4:
 210:Core/Src/main.c ****   //TODO: Complete the function implementation
 211:Core/Src/main.c ****   int64_t x_0;
 169              		.loc 1 211 3 view .LVU29
 212:Core/Src/main.c ****   int64_t y_0;
 170              		.loc 1 212 3 view .LVU30
 213:Core/Src/main.c ****   int64_t x_i;
 171              		.loc 1 213 3 view .LVU31
 214:Core/Src/main.c ****   int64_t y_i;
 172              		.loc 1 214 3 view .LVU32
 215:Core/Src/main.c ****   int64_t iteration;
 173              		.loc 1 215 3 view .LVU33
 216:Core/Src/main.c ****   int64_t temp;
 174              		.loc 1 216 3 view .LVU34
 217:Core/Src/main.c ****   for(int y=0; y<height; y++){
 175              		.loc 1 217 3 view .LVU35
 176              	.LBB6:
 177              		.loc 1 217 7 view .LVU36
 178              		.loc 1 217 11 is_stmt 0 view .LVU37
 179 0014 0023     		movs	r3, #0
 180 0016 9A46     		mov	r10, r3
 181              	.LBE6:
 209:Core/Src/main.c ****   //TODO: Complete the function implementation
 182              		.loc 1 209 12 view .LVU38
 183 0018 0023     		movs	r3, #0
 184 001a 0024     		movs	r4, #0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 8


 185 001c 0A93     		str	r3, [sp, #40]
 186 001e 0B94     		str	r4, [sp, #44]
 187              	.LBB9:
 188              		.loc 1 217 3 view .LVU39
 189 0020 A5E0     		b	.L5
 190              	.LVL5:
 191              	.L9:
 192              	.LBB7:
 218:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 219:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 220:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 221:Core/Src/main.c **** 		  x_i = 0;
 222:Core/Src/main.c **** 		  y_i = 0;
 223:Core/Src/main.c **** 		  iteration = 0;
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000000) <= 4000000)){
 226:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 193              		.loc 1 226 6 is_stmt 1 view .LVU40
 194              		.loc 1 226 23 is_stmt 0 view .LVU41
 195 0022 5D4A     		ldr	r2, .L18
 196 0024 0023     		movs	r3, #0
 197 0026 3000     		movs	r0, r6
 198 0028 3900     		movs	r1, r7
 199 002a FFF7FEFF 		bl	__aeabi_ldivmod
 200              	.LVL6:
 201 002e 0600     		movs	r6, r0
 202 0030 0F00     		movs	r7, r1
 203              		.loc 1 226 43 view .LVU42
 204 0032 5A4A     		ldr	r2, .L18+4
 205 0034 0123     		movs	r3, #1
 206 0036 5B42     		rsbs	r3, r3, #0
 207 0038 0098     		ldr	r0, [sp]
 208 003a 0199     		ldr	r1, [sp, #4]
 209 003c FFF7FEFF 		bl	__aeabi_ldivmod
 210              	.LVL7:
 211              		.loc 1 226 32 view .LVU43
 212 0040 3618     		adds	r6, r6, r0
 213 0042 4F41     		adcs	r7, r7, r1
 214              		.loc 1 226 11 view .LVU44
 215 0044 049A     		ldr	r2, [sp, #16]
 216 0046 059B     		ldr	r3, [sp, #20]
 217 0048 B618     		adds	r6, r6, r2
 218 004a 5F41     		adcs	r7, r7, r3
 219              	.LVL8:
 227:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000000) + y_0;
 220              		.loc 1 227 6 is_stmt 1 view .LVU45
 221              		.loc 1 227 19 is_stmt 0 view .LVU46
 222 004c 2200     		movs	r2, r4
 223 004e 2B00     		movs	r3, r5
 224 0050 4846     		mov	r0, r9
 225 0052 4146     		mov	r1, r8
 226 0054 FFF7FEFF 		bl	__aeabi_lmul
 227              	.LVL9:
 228              		.loc 1 227 24 view .LVU47
 229 0058 514A     		ldr	r2, .L18+8
 230 005a 0023     		movs	r3, #0
 231 005c FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 9


 232              	.LVL10:
 233              		.loc 1 227 10 view .LVU48
 234 0060 069C     		ldr	r4, [sp, #24]
 235 0062 079D     		ldr	r5, [sp, #28]
 236              	.LVL11:
 237              		.loc 1 227 10 view .LVU49
 238 0064 2418     		adds	r4, r4, r0
 239 0066 4D41     		adcs	r5, r5, r1
 240              	.LVL12:
 228:Core/Src/main.c **** 			  x_i = temp;
 241              		.loc 1 228 6 is_stmt 1 view .LVU50
 229:Core/Src/main.c **** 			  iteration += 1;
 242              		.loc 1 229 6 view .LVU51
 243              		.loc 1 229 16 is_stmt 0 view .LVU52
 244 0068 0122     		movs	r2, #1
 245 006a 0023     		movs	r3, #0
 246 006c 0298     		ldr	r0, [sp, #8]
 247 006e 0399     		ldr	r1, [sp, #12]
 248 0070 8018     		adds	r0, r0, r2
 249 0072 5941     		adcs	r1, r1, r3
 250 0074 0290     		str	r0, [sp, #8]
 251 0076 0391     		str	r1, [sp, #12]
 252              	.LVL13:
 228:Core/Src/main.c **** 			  x_i = temp;
 253              		.loc 1 228 10 view .LVU53
 254 0078 B146     		mov	r9, r6
 255 007a B846     		mov	r8, r7
 256              	.LVL14:
 257              	.L6:
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 258              		.loc 1 225 40 is_stmt 1 view .LVU54
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 259              		.loc 1 225 22 is_stmt 0 view .LVU55
 260 007c 5346     		mov	r3, r10
 261 007e DA17     		asrs	r2, r3, #31
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 262              		.loc 1 225 40 view .LVU56
 263 0080 0399     		ldr	r1, [sp, #12]
 264 0082 8A42     		cmp	r2, r1
 265 0084 21DD     		ble	.L15
 266              	.L14:
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 267              		.loc 1 225 49 discriminator 1 view .LVU57
 268 0086 4A46     		mov	r2, r9
 269 0088 4346     		mov	r3, r8
 270 008a 4846     		mov	r0, r9
 271 008c 4146     		mov	r1, r8
 272 008e FFF7FEFF 		bl	__aeabi_lmul
 273              	.LVL15:
 274 0092 0600     		movs	r6, r0
 275 0094 0F00     		movs	r7, r1
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 276              		.loc 1 225 57 discriminator 1 view .LVU58
 277 0096 2200     		movs	r2, r4
 278 0098 2B00     		movs	r3, r5
 279 009a 2000     		movs	r0, r4
 280 009c 2900     		movs	r1, r5
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 10


 281 009e FFF7FEFF 		bl	__aeabi_lmul
 282              	.LVL16:
 283 00a2 0090     		str	r0, [sp]
 284 00a4 0191     		str	r1, [sp, #4]
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 285              		.loc 1 225 53 discriminator 1 view .LVU59
 286 00a6 009A     		ldr	r2, [sp]
 287 00a8 019B     		ldr	r3, [sp, #4]
 288 00aa 9219     		adds	r2, r2, r6
 289 00ac 7B41     		adcs	r3, r3, r7
 290 00ae 0892     		str	r2, [sp, #32]
 291 00b0 0993     		str	r3, [sp, #36]
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 292              		.loc 1 225 40 discriminator 1 view .LVU60
 293 00b2 E921     		movs	r1, #233
 294 00b4 8900     		lsls	r1, r1, #2
 295 00b6 8B42     		cmp	r3, r1
 296 00b8 0DDA     		bge	.L7
 297 00ba 3A49     		ldr	r1, .L18+12
 298 00bc 8B42     		cmp	r3, r1
 299 00be B0D1     		bne	.L9
 300 00c0 394B     		ldr	r3, .L18+16
 301 00c2 089A     		ldr	r2, [sp, #32]
 302 00c4 9A42     		cmp	r2, r3
 303 00c6 ACD9     		bls	.L9
 304 00c8 05E0     		b	.L7
 305              	.L15:
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 306              		.loc 1 225 40 view .LVU61
 307 00ca 0298     		ldr	r0, [sp, #8]
 308 00cc 0399     		ldr	r1, [sp, #12]
 309 00ce 8A42     		cmp	r2, r1
 310 00d0 01D1     		bne	.L7
 311 00d2 8342     		cmp	r3, r0
 312 00d4 D7D8     		bhi	.L14
 313              	.L7:
 230:Core/Src/main.c **** 		  }
 231:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 314              		.loc 1 231 20 view .LVU62
 315 00d6 0D9F     		ldr	r7, [sp, #52]
 316 00d8 0E9E     		ldr	r6, [sp, #56]
 317              		.loc 1 231 5 is_stmt 1 view .LVU63
 318              		.loc 1 231 20 is_stmt 0 view .LVU64
 319 00da 0A9B     		ldr	r3, [sp, #40]
 320 00dc 0B9C     		ldr	r4, [sp, #44]
 321 00de 0299     		ldr	r1, [sp, #8]
 322 00e0 039A     		ldr	r2, [sp, #12]
 323 00e2 5B18     		adds	r3, r3, r1
 324 00e4 5441     		adcs	r4, r4, r2
 325 00e6 0A93     		str	r3, [sp, #40]
 326 00e8 0B94     		str	r4, [sp, #44]
 327              	.LVL17:
 218:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 328              		.loc 1 218 27 is_stmt 1 discriminator 2 view .LVU65
 329 00ea 0136     		adds	r6, r6, #1
 330              	.LVL18:
 331              	.L12:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 11


 218:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 332              		.loc 1 218 18 discriminator 1 view .LVU66
 333 00ec 5E45     		cmp	r6, fp
 334 00ee 3ADA     		bge	.L16
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 335              		.loc 1 219 5 view .LVU67
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 336              		.loc 1 219 15 is_stmt 0 view .LVU68
 337 00f0 7301     		lsls	r3, r6, #5
 338 00f2 9B1B     		subs	r3, r3, r6
 339 00f4 9801     		lsls	r0, r3, #6
 340 00f6 C01A     		subs	r0, r0, r3
 341 00f8 C000     		lsls	r0, r0, #3
 342 00fa 8019     		adds	r0, r0, r6
 343 00fc 8001     		lsls	r0, r0, #6
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 344              		.loc 1 219 24 view .LVU69
 345 00fe 5946     		mov	r1, fp
 346 0100 FFF7FEFF 		bl	__aeabi_idiv
 347              	.LVL19:
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 348              		.loc 1 219 33 view .LVU70
 349 0104 FFF7FEFF 		bl	__aeabi_i2d
 350              	.LVL20:
 351 0108 0022     		movs	r2, #0
 352 010a 284B     		ldr	r3, .L18+20
 353 010c FFF7FEFF 		bl	__aeabi_dmul
 354              	.LVL21:
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 355              		.loc 1 219 41 view .LVU71
 356 0110 0022     		movs	r2, #0
 357 0112 274B     		ldr	r3, .L18+24
 358 0114 FFF7FEFF 		bl	__aeabi_dsub
 359              	.LVL22:
 219:Core/Src/main.c **** 		  y_0 = (((y*1000000)/(height))*(2.0)) - (1000000);
 360              		.loc 1 219 9 view .LVU72
 361 0118 FFF7FEFF 		bl	__aeabi_d2lz
 362              	.LVL23:
 363 011c 0490     		str	r0, [sp, #16]
 364 011e 0591     		str	r1, [sp, #20]
 365              	.LVL24:
 220:Core/Src/main.c **** 		  x_i = 0;
 366              		.loc 1 220 5 is_stmt 1 view .LVU73
 220:Core/Src/main.c **** 		  x_i = 0;
 367              		.loc 1 220 15 is_stmt 0 view .LVU74
 368 0120 7B01     		lsls	r3, r7, #5
 369 0122 DB1B     		subs	r3, r3, r7
 370 0124 9801     		lsls	r0, r3, #6
 371 0126 C01A     		subs	r0, r0, r3
 372 0128 C000     		lsls	r0, r0, #3
 373 012a C019     		adds	r0, r0, r7
 374 012c 8001     		lsls	r0, r0, #6
 220:Core/Src/main.c **** 		  x_i = 0;
 375              		.loc 1 220 24 view .LVU75
 376 012e 0F99     		ldr	r1, [sp, #60]
 377 0130 FFF7FEFF 		bl	__aeabi_idiv
 378              	.LVL25:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 12


 220:Core/Src/main.c **** 		  x_i = 0;
 379              		.loc 1 220 34 view .LVU76
 380 0134 FFF7FEFF 		bl	__aeabi_i2d
 381              	.LVL26:
 382 0138 0200     		movs	r2, r0
 383 013a 0B00     		movs	r3, r1
 384 013c FFF7FEFF 		bl	__aeabi_dadd
 385              	.LVL27:
 220:Core/Src/main.c **** 		  x_i = 0;
 386              		.loc 1 220 42 view .LVU77
 387 0140 0022     		movs	r2, #0
 388 0142 1C4B     		ldr	r3, .L18+28
 389 0144 FFF7FEFF 		bl	__aeabi_dsub
 390              	.LVL28:
 220:Core/Src/main.c **** 		  x_i = 0;
 391              		.loc 1 220 9 view .LVU78
 392 0148 FFF7FEFF 		bl	__aeabi_d2lz
 393              	.LVL29:
 394 014c 0690     		str	r0, [sp, #24]
 395 014e 0791     		str	r1, [sp, #28]
 396              	.LVL30:
 221:Core/Src/main.c **** 		  y_i = 0;
 397              		.loc 1 221 5 is_stmt 1 view .LVU79
 222:Core/Src/main.c **** 		  iteration = 0;
 398              		.loc 1 222 5 view .LVU80
 223:Core/Src/main.c **** 
 399              		.loc 1 223 5 view .LVU81
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 400              		.loc 1 225 5 view .LVU82
 223:Core/Src/main.c **** 
 401              		.loc 1 223 15 is_stmt 0 view .LVU83
 402 0150 0023     		movs	r3, #0
 403 0152 0024     		movs	r4, #0
 404 0154 0293     		str	r3, [sp, #8]
 405 0156 0394     		str	r4, [sp, #12]
 222:Core/Src/main.c **** 		  iteration = 0;
 406              		.loc 1 222 9 view .LVU84
 407 0158 0024     		movs	r4, #0
 408 015a 0025     		movs	r5, #0
 221:Core/Src/main.c **** 		  y_i = 0;
 409              		.loc 1 221 9 view .LVU85
 410 015c 9946     		mov	r9, r3
 411 015e 9846     		mov	r8, r3
 412 0160 0D97     		str	r7, [sp, #52]
 413 0162 0E96     		str	r6, [sp, #56]
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 414              		.loc 1 225 10 view .LVU86
 415 0164 8AE7     		b	.L6
 416              	.LVL31:
 417              	.L16:
 225:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 418              		.loc 1 225 10 view .LVU87
 419              	.LBE7:
 217:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 420              		.loc 1 217 27 discriminator 2 view .LVU88
 421 0166 BA46     		mov	r10, r7
 217:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 13


 422              		.loc 1 217 27 is_stmt 1 discriminator 2 view .LVU89
 423 0168 0123     		movs	r3, #1
 424 016a 9C46     		mov	ip, r3
 425 016c E244     		add	r10, r10, ip
 426              	.LVL32:
 427              	.L5:
 217:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 428              		.loc 1 217 17 discriminator 1 view .LVU90
 429 016e 0F9B     		ldr	r3, [sp, #60]
 430 0170 9A45     		cmp	r10, r3
 431 0172 07DA     		bge	.L17
 432              	.LBB8:
 218:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 433              		.loc 1 218 12 is_stmt 0 view .LVU91
 434 0174 0023     		movs	r3, #0
 435 0176 5746     		mov	r7, r10
 436 0178 1E00     		movs	r6, r3
 437 017a 109B     		ldr	r3, [sp, #64]
 438 017c 9B46     		mov	fp, r3
 439 017e 119B     		ldr	r3, [sp, #68]
 440 0180 9A46     		mov	r10, r3
 441              	.LVL33:
 218:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 442              		.loc 1 218 12 view .LVU92
 443 0182 B3E7     		b	.L12
 444              	.LVL34:
 445              	.L17:
 218:Core/Src/main.c **** 		  x_0 = (((x*1000000)/(width))*(3.5)) - (2500000);
 446              		.loc 1 218 12 view .LVU93
 447              	.LBE8:
 448              	.LBE9:
 232:Core/Src/main.c **** 	  }
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   return mandelbrot_sum;
 449              		.loc 1 234 3 is_stmt 1 view .LVU94
 235:Core/Src/main.c ****     
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** }
 450              		.loc 1 237 1 is_stmt 0 view .LVU95
 451 0184 0A98     		ldr	r0, [sp, #40]
 452 0186 0B99     		ldr	r1, [sp, #44]
 453 0188 13B0     		add	sp, sp, #76
 454              		@ sp needed
 455              	.LVL35:
 456              		.loc 1 237 1 view .LVU96
 457 018a F0BC     		pop	{r4, r5, r6, r7}
 458 018c BB46     		mov	fp, r7
 459 018e B246     		mov	r10, r6
 460 0190 A946     		mov	r9, r5
 461 0192 A046     		mov	r8, r4
 462 0194 F0BD     		pop	{r4, r5, r6, r7, pc}
 463              	.L19:
 464 0196 C046     		.align	2
 465              	.L18:
 466 0198 40420F00 		.word	1000000
 467 019c C0BDF0FF 		.word	-1000000
 468 01a0 20A10700 		.word	500000
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 14


 469 01a4 A3030000 		.word	931
 470 01a8 3F82A352 		.word	1386447423
 471 01ac 00000C40 		.word	1074528256
 472 01b0 D0124341 		.word	1094914768
 473 01b4 80842E41 		.word	1093567616
 474              		.cfi_endproc
 475              	.LFE43:
 477              		.global	__aeabi_ddiv
 478              		.global	__aeabi_dcmpgt
 479              		.global	__aeabi_dcmple
 480              		.global	__aeabi_ul2d
 481              		.global	__aeabi_d2ulz
 482              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 483              		.align	1
 484              		.global	calculate_mandelbrot_double
 485              		.syntax unified
 486              		.code	16
 487              		.thumb_func
 489              	calculate_mandelbrot_double:
 490              	.LVL36:
 491              	.LFB44:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 240:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 492              		.loc 1 240 80 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 72
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 240 80 is_stmt 0 view .LVU98
 497 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 498              	.LCFI5:
 499              		.cfi_def_cfa_offset 20
 500              		.cfi_offset 4, -20
 501              		.cfi_offset 5, -16
 502              		.cfi_offset 6, -12
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 DE46     		mov	lr, fp
 506 0004 5746     		mov	r7, r10
 507 0006 4E46     		mov	r6, r9
 508 0008 4546     		mov	r5, r8
 509 000a E0B5     		push	{r5, r6, r7, lr}
 510              	.LCFI6:
 511              		.cfi_def_cfa_offset 36
 512              		.cfi_offset 8, -36
 513              		.cfi_offset 9, -32
 514              		.cfi_offset 10, -28
 515              		.cfi_offset 11, -24
 516 000c 93B0     		sub	sp, sp, #76
 517              	.LCFI7:
 518              		.cfi_def_cfa_offset 112
 519 000e 8346     		mov	fp, r0
 520 0010 0E00     		movs	r6, r1
 521 0012 9046     		mov	r8, r2
 241:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 522              		.loc 1 241 5 is_stmt 1 view .LVU99
 523              	.LVL37:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 15


 242:Core/Src/main.c ****     //TODO: Complete the function implementation
 243:Core/Src/main.c ****     double x_0;
 524              		.loc 1 243 5 view .LVU100
 244:Core/Src/main.c ****     double y_0;
 525              		.loc 1 244 5 view .LVU101
 245:Core/Src/main.c ****     double x_i;
 526              		.loc 1 245 5 view .LVU102
 246:Core/Src/main.c ****     double y_i;
 527              		.loc 1 246 5 view .LVU103
 247:Core/Src/main.c ****     double iteration;
 528              		.loc 1 247 5 view .LVU104
 248:Core/Src/main.c ****     double temp;
 529              		.loc 1 248 5 view .LVU105
 249:Core/Src/main.c ****     for(double y=0; y<height; y++){
 530              		.loc 1 249 5 view .LVU106
 531              	.LBB10:
 532              		.loc 1 249 9 view .LVU107
 533              		.loc 1 249 16 is_stmt 0 view .LVU108
 534 0014 0023     		movs	r3, #0
 535 0016 0024     		movs	r4, #0
 536 0018 0E93     		str	r3, [sp, #56]
 537 001a 0F94     		str	r4, [sp, #60]
 538              	.LBE10:
 241:Core/Src/main.c ****     //TODO: Complete the function implementation
 539              		.loc 1 241 14 view .LVU109
 540 001c 0023     		movs	r3, #0
 541 001e 9A46     		mov	r10, r3
 542 0020 0D93     		str	r3, [sp, #52]
 543              	.LBB13:
 544              		.loc 1 249 5 view .LVU110
 545 0022 9BE0     		b	.L21
 546              	.LVL38:
 547              	.L25:
 548              	.LBB11:
 250:Core/Src/main.c ****        for(double x=0; x<width; x++){
 251:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 252:Core/Src/main.c ****     	  y_0 = ((y/height)*2.0) - 1.0;
 253:Core/Src/main.c ****     	  x_i = 0;
 254:Core/Src/main.c ****     	  y_i = 0;
 255:Core/Src/main.c ****           iteration = 0;
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 258:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 549              		.loc 1 258 7 is_stmt 1 view .LVU111
 550              		.loc 1 258 23 is_stmt 0 view .LVU112
 551 0024 049A     		ldr	r2, [sp, #16]
 552 0026 059B     		ldr	r3, [sp, #20]
 553 0028 0298     		ldr	r0, [sp, #8]
 554 002a 0399     		ldr	r1, [sp, #12]
 555 002c FFF7FEFF 		bl	__aeabi_dsub
 556              	.LVL39:
 557              		.loc 1 258 12 view .LVU113
 558 0030 069A     		ldr	r2, [sp, #24]
 559 0032 079B     		ldr	r3, [sp, #28]
 560 0034 FFF7FEFF 		bl	__aeabi_dadd
 561              	.LVL40:
 562 0038 0290     		str	r0, [sp, #8]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 16


 563 003a 0391     		str	r1, [sp, #12]
 564              	.LVL41:
 259:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 565              		.loc 1 259 7 is_stmt 1 view .LVU114
 566              		.loc 1 259 15 is_stmt 0 view .LVU115
 567 003c 3200     		movs	r2, r6
 568 003e 3B00     		movs	r3, r7
 569 0040 3000     		movs	r0, r6
 570              	.LVL42:
 571              		.loc 1 259 15 view .LVU116
 572 0042 3900     		movs	r1, r7
 573 0044 FFF7FEFF 		bl	__aeabi_dadd
 574              	.LVL43:
 575              		.loc 1 259 19 view .LVU117
 576 0048 2200     		movs	r2, r4
 577 004a 2B00     		movs	r3, r5
 578 004c FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL44:
 580              		.loc 1 259 11 view .LVU118
 581 0050 089A     		ldr	r2, [sp, #32]
 582 0052 099B     		ldr	r3, [sp, #36]
 583 0054 FFF7FEFF 		bl	__aeabi_dadd
 584              	.LVL45:
 585 0058 0400     		movs	r4, r0
 586              	.LVL46:
 587              		.loc 1 259 11 view .LVU119
 588 005a 0D00     		movs	r5, r1
 589              	.LVL47:
 260:Core/Src/main.c ****     		x_i = temp;
 590              		.loc 1 260 7 is_stmt 1 view .LVU120
 261:Core/Src/main.c ****     		iteration += 1;
 591              		.loc 1 261 7 view .LVU121
 592              		.loc 1 261 17 is_stmt 0 view .LVU122
 593 005c 0022     		movs	r2, #0
 594 005e 4D4B     		ldr	r3, .L32
 595 0060 0098     		ldr	r0, [sp]
 596 0062 0199     		ldr	r1, [sp, #4]
 597 0064 FFF7FEFF 		bl	__aeabi_dadd
 598              	.LVL48:
 599 0068 0090     		str	r0, [sp]
 600 006a 0191     		str	r1, [sp, #4]
 601              	.LVL49:
 260:Core/Src/main.c ****     		x_i = temp;
 602              		.loc 1 260 11 view .LVU123
 603 006c 029E     		ldr	r6, [sp, #8]
 604 006e 039F     		ldr	r7, [sp, #12]
 605              	.LVL50:
 606              	.L22:
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 607              		.loc 1 257 43 is_stmt 1 view .LVU124
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 608              		.loc 1 257 25 is_stmt 0 view .LVU125
 609 0070 4046     		mov	r0, r8
 610 0072 FFF7FEFF 		bl	__aeabi_i2d
 611              	.LVL51:
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 612              		.loc 1 257 43 view .LVU126
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 17


 613 0076 009A     		ldr	r2, [sp]
 614 0078 019B     		ldr	r3, [sp, #4]
 615 007a FFF7FEFF 		bl	__aeabi_dcmpgt
 616              	.LVL52:
 617 007e 0028     		cmp	r0, #0
 618 0080 1BD0     		beq	.L23
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 619              		.loc 1 257 51 discriminator 1 view .LVU127
 620 0082 3200     		movs	r2, r6
 621 0084 3B00     		movs	r3, r7
 622 0086 3000     		movs	r0, r6
 623 0088 3900     		movs	r1, r7
 624 008a FFF7FEFF 		bl	__aeabi_dmul
 625              	.LVL53:
 626 008e 0290     		str	r0, [sp, #8]
 627 0090 0391     		str	r1, [sp, #12]
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 628              		.loc 1 257 63 discriminator 1 view .LVU128
 629 0092 2200     		movs	r2, r4
 630 0094 2B00     		movs	r3, r5
 631 0096 2000     		movs	r0, r4
 632 0098 2900     		movs	r1, r5
 633 009a FFF7FEFF 		bl	__aeabi_dmul
 634              	.LVL54:
 635 009e 0200     		movs	r2, r0
 636 00a0 0B00     		movs	r3, r1
 637 00a2 0492     		str	r2, [sp, #16]
 638 00a4 0593     		str	r3, [sp, #20]
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 639              		.loc 1 257 57 discriminator 1 view .LVU129
 640 00a6 0298     		ldr	r0, [sp, #8]
 641 00a8 0399     		ldr	r1, [sp, #12]
 642 00aa FFF7FEFF 		bl	__aeabi_dadd
 643              	.LVL55:
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 644              		.loc 1 257 43 discriminator 1 view .LVU130
 645 00ae 0022     		movs	r2, #0
 646 00b0 394B     		ldr	r3, .L32+4
 647 00b2 FFF7FEFF 		bl	__aeabi_dcmple
 648              	.LVL56:
 649 00b6 0028     		cmp	r0, #0
 650 00b8 B4D1     		bne	.L25
 651              	.L23:
 262:Core/Src/main.c ****     	  }
 263:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 652              		.loc 1 263 8 is_stmt 1 view .LVU131
 653              		.loc 1 263 23 is_stmt 0 view .LVU132
 654 00ba 5046     		mov	r0, r10
 655 00bc 0D99     		ldr	r1, [sp, #52]
 656 00be FFF7FEFF 		bl	__aeabi_ul2d
 657              	.LVL57:
 658 00c2 009A     		ldr	r2, [sp]
 659 00c4 019B     		ldr	r3, [sp, #4]
 660 00c6 FFF7FEFF 		bl	__aeabi_dadd
 661              	.LVL58:
 662 00ca FFF7FEFF 		bl	__aeabi_d2ulz
 663              	.LVL59:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 18


 664 00ce 8246     		mov	r10, r0
 665              	.LVL60:
 666              		.loc 1 263 23 view .LVU133
 667 00d0 0D91     		str	r1, [sp, #52]
 668              	.LVL61:
 250:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 669              		.loc 1 250 34 is_stmt 1 discriminator 2 view .LVU134
 670 00d2 0022     		movs	r2, #0
 671 00d4 2F4B     		ldr	r3, .L32
 672 00d6 0A98     		ldr	r0, [sp, #40]
 673 00d8 0B99     		ldr	r1, [sp, #44]
 674              	.LVL62:
 250:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 675              		.loc 1 250 34 is_stmt 0 discriminator 2 view .LVU135
 676 00da FFF7FEFF 		bl	__aeabi_dadd
 677              	.LVL63:
 250:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 678              		.loc 1 250 34 discriminator 2 view .LVU136
 679 00de 0A90     		str	r0, [sp, #40]
 680 00e0 0B91     		str	r1, [sp, #44]
 681              	.LVL64:
 682              	.L27:
 250:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 683              		.loc 1 250 25 is_stmt 1 discriminator 1 view .LVU137
 684 00e2 5846     		mov	r0, fp
 685 00e4 FFF7FEFF 		bl	__aeabi_i2d
 686              	.LVL65:
 687 00e8 0400     		movs	r4, r0
 688 00ea 0D00     		movs	r5, r1
 689 00ec 0A9A     		ldr	r2, [sp, #40]
 690 00ee 0B9B     		ldr	r3, [sp, #44]
 691 00f0 FFF7FEFF 		bl	__aeabi_dcmpgt
 692              	.LVL66:
 693 00f4 0028     		cmp	r0, #0
 694 00f6 28D0     		beq	.L30
 251:Core/Src/main.c ****     	  y_0 = ((y/height)*2.0) - 1.0;
 695              		.loc 1 251 8 view .LVU138
 251:Core/Src/main.c ****     	  y_0 = ((y/height)*2.0) - 1.0;
 696              		.loc 1 251 17 is_stmt 0 view .LVU139
 697 00f8 2200     		movs	r2, r4
 698 00fa 2B00     		movs	r3, r5
 699 00fc 0A98     		ldr	r0, [sp, #40]
 700 00fe 0B99     		ldr	r1, [sp, #44]
 701 0100 FFF7FEFF 		bl	__aeabi_ddiv
 702              	.LVL67:
 251:Core/Src/main.c ****     	  y_0 = ((y/height)*2.0) - 1.0;
 703              		.loc 1 251 24 view .LVU140
 704 0104 0022     		movs	r2, #0
 705 0106 254B     		ldr	r3, .L32+8
 706 0108 FFF7FEFF 		bl	__aeabi_dmul
 707              	.LVL68:
 251:Core/Src/main.c ****     	  y_0 = ((y/height)*2.0) - 1.0;
 708              		.loc 1 251 12 view .LVU141
 709 010c 0022     		movs	r2, #0
 710 010e 244B     		ldr	r3, .L32+12
 711 0110 FFF7FEFF 		bl	__aeabi_dsub
 712              	.LVL69:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 19


 713 0114 0690     		str	r0, [sp, #24]
 714 0116 0791     		str	r1, [sp, #28]
 715              	.LVL70:
 252:Core/Src/main.c ****     	  x_i = 0;
 716              		.loc 1 252 8 is_stmt 1 view .LVU142
 252:Core/Src/main.c ****     	  x_i = 0;
 717              		.loc 1 252 17 is_stmt 0 view .LVU143
 718 0118 109A     		ldr	r2, [sp, #64]
 719 011a 119B     		ldr	r3, [sp, #68]
 720 011c 0E98     		ldr	r0, [sp, #56]
 721 011e 0F99     		ldr	r1, [sp, #60]
 722              	.LVL71:
 252:Core/Src/main.c ****     	  x_i = 0;
 723              		.loc 1 252 17 view .LVU144
 724 0120 FFF7FEFF 		bl	__aeabi_ddiv
 725              	.LVL72:
 252:Core/Src/main.c ****     	  x_i = 0;
 726              		.loc 1 252 25 view .LVU145
 727 0124 0200     		movs	r2, r0
 728 0126 0B00     		movs	r3, r1
 729 0128 FFF7FEFF 		bl	__aeabi_dadd
 730              	.LVL73:
 252:Core/Src/main.c ****     	  x_i = 0;
 731              		.loc 1 252 12 view .LVU146
 732 012c 0022     		movs	r2, #0
 733 012e 194B     		ldr	r3, .L32
 734 0130 FFF7FEFF 		bl	__aeabi_dsub
 735              	.LVL74:
 736 0134 0890     		str	r0, [sp, #32]
 737 0136 0991     		str	r1, [sp, #36]
 738              	.LVL75:
 253:Core/Src/main.c ****     	  y_i = 0;
 739              		.loc 1 253 8 is_stmt 1 view .LVU147
 254:Core/Src/main.c ****           iteration = 0;
 740              		.loc 1 254 8 view .LVU148
 255:Core/Src/main.c **** 
 741              		.loc 1 255 11 view .LVU149
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 742              		.loc 1 257 8 view .LVU150
 255:Core/Src/main.c **** 
 743              		.loc 1 255 21 is_stmt 0 view .LVU151
 744 0138 0023     		movs	r3, #0
 745 013a 0024     		movs	r4, #0
 746 013c 1E00     		movs	r6, r3
 747 013e 2700     		movs	r7, r4
 748 0140 0096     		str	r6, [sp]
 749 0142 0197     		str	r7, [sp, #4]
 254:Core/Src/main.c ****           iteration = 0;
 750              		.loc 1 254 12 view .LVU152
 751 0144 1C00     		movs	r4, r3
 752 0146 3D00     		movs	r5, r7
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 753              		.loc 1 257 13 view .LVU153
 754 0148 92E7     		b	.L22
 755              	.LVL76:
 756              	.L30:
 257:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 20


 757              		.loc 1 257 13 view .LVU154
 758              	.LBE11:
 249:Core/Src/main.c ****        for(double x=0; x<width; x++){
 759              		.loc 1 249 32 discriminator 2 view .LVU155
 760 014a 4E46     		mov	r6, r9
 249:Core/Src/main.c ****        for(double x=0; x<width; x++){
 761              		.loc 1 249 32 is_stmt 1 discriminator 2 view .LVU156
 762 014c 0022     		movs	r2, #0
 763 014e 114B     		ldr	r3, .L32
 764 0150 0E98     		ldr	r0, [sp, #56]
 765 0152 0F99     		ldr	r1, [sp, #60]
 766 0154 FFF7FEFF 		bl	__aeabi_dadd
 767              	.LVL77:
 768 0158 0E90     		str	r0, [sp, #56]
 769 015a 0F91     		str	r1, [sp, #60]
 770              	.LVL78:
 771              	.L21:
 249:Core/Src/main.c ****        for(double x=0; x<width; x++){
 772              		.loc 1 249 22 discriminator 1 view .LVU157
 773 015c 3000     		movs	r0, r6
 774 015e FFF7FEFF 		bl	__aeabi_i2d
 775              	.LVL79:
 776 0162 1090     		str	r0, [sp, #64]
 777 0164 1191     		str	r1, [sp, #68]
 778 0166 0E9A     		ldr	r2, [sp, #56]
 779 0168 0F9B     		ldr	r3, [sp, #60]
 780 016a FFF7FEFF 		bl	__aeabi_dcmpgt
 781              	.LVL80:
 782 016e 0028     		cmp	r0, #0
 783 0170 05D0     		beq	.L31
 784              	.LBB12:
 250:Core/Src/main.c ****     	  x_0 = ((x/width)*3.5) - 2.5;
 785              		.loc 1 250 19 is_stmt 0 view .LVU158
 786 0172 0023     		movs	r3, #0
 787 0174 0024     		movs	r4, #0
 788 0176 0A93     		str	r3, [sp, #40]
 789 0178 0B94     		str	r4, [sp, #44]
 790 017a B146     		mov	r9, r6
 791 017c B1E7     		b	.L27
 792              	.L31:
 793              	.LBE12:
 794              	.LBE13:
 264:Core/Src/main.c ****        }
 265:Core/Src/main.c ****     }
 266:Core/Src/main.c ****     
 267:Core/Src/main.c ****     return mandelbrot_sum;
 268:Core/Src/main.c **** }
 795              		.loc 1 268 1 view .LVU159
 796 017e 0D9B     		ldr	r3, [sp, #52]
 267:Core/Src/main.c **** }
 797              		.loc 1 267 5 is_stmt 1 view .LVU160
 798              		.loc 1 268 1 is_stmt 0 view .LVU161
 799 0180 5046     		mov	r0, r10
 800 0182 1900     		movs	r1, r3
 801 0184 13B0     		add	sp, sp, #76
 802              		@ sp needed
 803              	.LVL81:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 21


 804              	.LVL82:
 805              	.LVL83:
 806              	.LVL84:
 807              		.loc 1 268 1 view .LVU162
 808 0186 F0BC     		pop	{r4, r5, r6, r7}
 809 0188 BB46     		mov	fp, r7
 810 018a B246     		mov	r10, r6
 811 018c A946     		mov	r9, r5
 812 018e A046     		mov	r8, r4
 813 0190 F0BD     		pop	{r4, r5, r6, r7, pc}
 814              	.L33:
 815 0192 C046     		.align	2
 816              	.L32:
 817 0194 0000F03F 		.word	1072693248
 818 0198 00001040 		.word	1074790400
 819 019c 00000C40 		.word	1074528256
 820 01a0 00000440 		.word	1074003968
 821              		.cfi_endproc
 822              	.LFE44:
 824              		.section	.text.Error_Handler,"ax",%progbits
 825              		.align	1
 826              		.global	Error_Handler
 827              		.syntax unified
 828              		.code	16
 829              		.thumb_func
 831              	Error_Handler:
 832              	.LFB45:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /* USER CODE END 4 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /**
 273:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** void Error_Handler(void)
 277:Core/Src/main.c **** {
 833              		.loc 1 277 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ Volatile: function does not return.
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 278:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 279:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 280:Core/Src/main.c ****   __disable_irq();
 839              		.loc 1 280 3 view .LVU164
 840              	.LBB14:
 841              	.LBI14:
 842              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 22


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 23


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 24


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 843              		.loc 2 140 27 view .LVU165
 844              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 845              		.loc 2 142 3 view .LVU166
 846              		.syntax divided
 847              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 848 0000 72B6     		cpsid i
 849              	@ 0 "" 2
 850              		.thumb
 851              		.syntax unified
 852              	.L35:
 853              	.LBE15:
 854              	.LBE14:
 281:Core/Src/main.c ****   while (1)
 855              		.loc 1 281 3 view .LVU167
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****   }
 856              		.loc 1 283 3 view .LVU168
 281:Core/Src/main.c ****   while (1)
 857              		.loc 1 281 9 view .LVU169
 858 0002 FEE7     		b	.L35
 859              		.cfi_endproc
 860              	.LFE45:
 862              		.section	.text.SystemClock_Config,"ax",%progbits
 863              		.align	1
 864              		.global	SystemClock_Config
 865              		.syntax unified
 866              		.code	16
 867              		.thumb_func
 869              	SystemClock_Config:
 870              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 871              		.loc 1 147 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 64
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875 0000 00B5     		push	{lr}
 876              	.LCFI8:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 25


 877              		.cfi_def_cfa_offset 4
 878              		.cfi_offset 14, -4
 879 0002 91B0     		sub	sp, sp, #68
 880              	.LCFI9:
 881              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 882              		.loc 1 148 3 view .LVU171
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 883              		.loc 1 148 22 is_stmt 0 view .LVU172
 884 0004 3022     		movs	r2, #48
 885 0006 0021     		movs	r1, #0
 886 0008 04A8     		add	r0, sp, #16
 887 000a FFF7FEFF 		bl	memset
 888              	.LVL85:
 149:Core/Src/main.c **** 
 889              		.loc 1 149 3 is_stmt 1 view .LVU173
 149:Core/Src/main.c **** 
 890              		.loc 1 149 22 is_stmt 0 view .LVU174
 891 000e 1022     		movs	r2, #16
 892 0010 0021     		movs	r1, #0
 893 0012 6846     		mov	r0, sp
 894 0014 FFF7FEFF 		bl	memset
 895              	.LVL86:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 896              		.loc 1 154 3 is_stmt 1 view .LVU175
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 897              		.loc 1 154 36 is_stmt 0 view .LVU176
 898 0018 0223     		movs	r3, #2
 899 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 900              		.loc 1 155 3 is_stmt 1 view .LVU177
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 901              		.loc 1 155 30 is_stmt 0 view .LVU178
 902 001c 013B     		subs	r3, r3, #1
 903 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 904              		.loc 1 156 3 is_stmt 1 view .LVU179
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 905              		.loc 1 156 41 is_stmt 0 view .LVU180
 906 0020 0F33     		adds	r3, r3, #15
 907 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 908              		.loc 1 157 3 is_stmt 1 view .LVU181
 158:Core/Src/main.c ****   {
 909              		.loc 1 158 3 view .LVU182
 158:Core/Src/main.c ****   {
 910              		.loc 1 158 7 is_stmt 0 view .LVU183
 911 0024 04A8     		add	r0, sp, #16
 912 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 913              	.LVL87:
 158:Core/Src/main.c ****   {
 914              		.loc 1 158 6 discriminator 1 view .LVU184
 915 002a 0028     		cmp	r0, #0
 916 002c 0DD1     		bne	.L39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 917              		.loc 1 165 3 is_stmt 1 view .LVU185
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 26


 918              		.loc 1 165 31 is_stmt 0 view .LVU186
 919 002e 0723     		movs	r3, #7
 920 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 921              		.loc 1 167 3 is_stmt 1 view .LVU187
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 922              		.loc 1 167 34 is_stmt 0 view .LVU188
 923 0032 0023     		movs	r3, #0
 924 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 925              		.loc 1 168 3 is_stmt 1 view .LVU189
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 926              		.loc 1 168 35 is_stmt 0 view .LVU190
 927 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 928              		.loc 1 169 3 is_stmt 1 view .LVU191
 169:Core/Src/main.c **** 
 929              		.loc 1 169 36 is_stmt 0 view .LVU192
 930 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 931              		.loc 1 171 3 is_stmt 1 view .LVU193
 171:Core/Src/main.c ****   {
 932              		.loc 1 171 7 is_stmt 0 view .LVU194
 933 003a 0021     		movs	r1, #0
 934 003c 6846     		mov	r0, sp
 935 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 936              	.LVL88:
 171:Core/Src/main.c ****   {
 937              		.loc 1 171 6 discriminator 1 view .LVU195
 938 0042 0028     		cmp	r0, #0
 939 0044 03D1     		bne	.L40
 175:Core/Src/main.c **** 
 940              		.loc 1 175 1 view .LVU196
 941 0046 11B0     		add	sp, sp, #68
 942              		@ sp needed
 943 0048 00BD     		pop	{pc}
 944              	.L39:
 160:Core/Src/main.c ****   }
 945              		.loc 1 160 5 is_stmt 1 view .LVU197
 946 004a FFF7FEFF 		bl	Error_Handler
 947              	.LVL89:
 948              	.L40:
 173:Core/Src/main.c ****   }
 949              		.loc 1 173 5 view .LVU198
 950 004e FFF7FEFF 		bl	Error_Handler
 951              	.LVL90:
 952              		.cfi_endproc
 953              	.LFE41:
 955              		.global	__aeabi_uidiv
 956              		.section	.text.delay,"ax",%progbits
 957              		.align	1
 958              		.global	delay
 959              		.syntax unified
 960              		.code	16
 961              		.thumb_func
 963              	delay:
 964              	.LVL91:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 27


 965              	.LFB46:
 284:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 285:Core/Src/main.c **** }
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /**
 288:Core/Src/main.c ****  * Basic delay function
 289:Core/Src/main.c ****  */
 290:Core/Src/main.c **** void delay(uint32_t delay_time){
 966              		.loc 1 290 32 view -0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 8
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		.loc 1 290 32 is_stmt 0 view .LVU200
 971 0000 00B5     		push	{lr}
 972              	.LCFI10:
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 14, -4
 975 0002 83B0     		sub	sp, sp, #12
 976              	.LCFI11:
 977              		.cfi_def_cfa_offset 16
 291:Core/Src/main.c **** 	uint32_t i = (delay_time*8000)/8;
 978              		.loc 1 291 2 is_stmt 1 view .LVU201
 979              		.loc 1 291 26 is_stmt 0 view .LVU202
 980 0004 4301     		lsls	r3, r0, #5
 981 0006 1B1A     		subs	r3, r3, r0
 982 0008 9B00     		lsls	r3, r3, #2
 983 000a 1818     		adds	r0, r3, r0
 984              	.LVL92:
 985              		.loc 1 291 26 view .LVU203
 986 000c 8001     		lsls	r0, r0, #6
 987              	.LVL93:
 292:Core/Src/main.c **** 	uint32_t i_in = i/1000;
 988              		.loc 1 292 2 is_stmt 1 view .LVU204
 989              		.loc 1 292 11 is_stmt 0 view .LVU205
 990 000e FA21     		movs	r1, #250
 991 0010 4901     		lsls	r1, r1, #5
 992 0012 FFF7FEFF 		bl	__aeabi_uidiv
 993              	.LVL94:
 293:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 994              		.loc 1 293 2 is_stmt 1 view .LVU206
 995              	.LBB16:
 996              		.loc 1 293 6 view .LVU207
 997              		.loc 1 293 24 is_stmt 0 view .LVU208
 998 0016 0023     		movs	r3, #0
 999 0018 0093     		str	r3, [sp]
 1000              		.loc 1 293 2 view .LVU209
 1001 001a 08E0     		b	.L42
 1002              	.L44:
 1003              	.LBB17:
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 	  }
 1004              		.loc 1 296 4 is_stmt 1 view .LVU210
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1005              		.loc 1 294 42 discriminator 3 view .LVU211
 1006 001c 019B     		ldr	r3, [sp, #4]
 1007 001e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 28


 1008 0020 0193     		str	r3, [sp, #4]
 1009              	.L43:
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1010              		.loc 1 294 32 discriminator 1 view .LVU212
 1011 0022 019B     		ldr	r3, [sp, #4]
 1012 0024 8342     		cmp	r3, r0
 1013 0026 F9D3     		bcc	.L44
 1014              	.LBE17:
 293:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1015              		.loc 1 293 38 discriminator 2 view .LVU213
 1016 0028 009B     		ldr	r3, [sp]
 1017 002a 0133     		adds	r3, r3, #1
 1018 002c 0093     		str	r3, [sp]
 1019              	.L42:
 293:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1020              		.loc 1 293 30 discriminator 1 view .LVU214
 1021 002e 009A     		ldr	r2, [sp]
 1022 0030 FA23     		movs	r3, #250
 1023 0032 9B00     		lsls	r3, r3, #2
 1024 0034 9A42     		cmp	r2, r3
 1025 0036 02D2     		bcs	.L46
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1026              		.loc 1 294 4 view .LVU215
 1027              	.LBB18:
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1028              		.loc 1 294 8 view .LVU216
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1029              		.loc 1 294 26 is_stmt 0 view .LVU217
 1030 0038 0023     		movs	r3, #0
 1031 003a 0193     		str	r3, [sp, #4]
 294:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1032              		.loc 1 294 4 view .LVU218
 1033 003c F1E7     		b	.L43
 1034              	.L46:
 1035              	.LBE18:
 1036              	.LBE16:
 297:Core/Src/main.c **** 	}
 298:Core/Src/main.c **** }
 1037              		.loc 1 298 1 view .LVU219
 1038 003e 03B0     		add	sp, sp, #12
 1039              		@ sp needed
 1040 0040 00BD     		pop	{pc}
 1041              		.cfi_endproc
 1042              	.LFE46:
 1044              		.global	__aeabi_ui2f
 1045              		.global	__aeabi_fsub
 1046              		.section	.text.main,"ax",%progbits
 1047              		.align	1
 1048              		.global	main
 1049              		.syntax unified
 1050              		.code	16
 1051              		.thumb_func
 1053              	main:
 1054              	.LFB40:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1055              		.loc 1 81 1 is_stmt 1 view -0
 1056              		.cfi_startproc
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 29


 1057              		@ Volatile: function does not return.
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060 0000 70B5     		push	{r4, r5, r6, lr}
 1061              	.LCFI12:
 1062              		.cfi_def_cfa_offset 16
 1063              		.cfi_offset 4, -16
 1064              		.cfi_offset 5, -12
 1065              		.cfi_offset 6, -8
 1066              		.cfi_offset 14, -4
  89:Core/Src/main.c **** 
 1067              		.loc 1 89 3 view .LVU221
 1068 0002 FFF7FEFF 		bl	HAL_Init
 1069              	.LVL95:
  96:Core/Src/main.c **** 
 1070              		.loc 1 96 3 view .LVU222
 1071 0006 FFF7FEFF 		bl	SystemClock_Config
 1072              	.LVL96:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1073              		.loc 1 103 3 view .LVU223
 1074 000a FFF7FEFF 		bl	MX_GPIO_Init
 1075              	.LVL97:
 106:Core/Src/main.c **** 
 1076              		.loc 1 106 3 view .LVU224
 106:Core/Src/main.c **** 
 1077              		.loc 1 106 14 is_stmt 0 view .LVU225
 1078 000e 134C     		ldr	r4, .L49
 1079 0010 0123     		movs	r3, #1
 1080 0012 6361     		str	r3, [r4, #20]
 109:Core/Src/main.c ****   
 1081              		.loc 1 109 3 is_stmt 1 view .LVU226
 109:Core/Src/main.c ****   
 1082              		.loc 1 109 16 is_stmt 0 view .LVU227
 1083 0014 FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL98:
 109:Core/Src/main.c ****   
 1085              		.loc 1 109 14 discriminator 1 view .LVU228
 1086 0018 114D     		ldr	r5, .L49+4
 1087 001a FFF7FEFF 		bl	__aeabi_ui2f
 1088              	.LVL99:
 1089 001e 2860     		str	r0, [r5]
 113:Core/Src/main.c ****   //TODO: Record the end time
 1090              		.loc 1 113 3 is_stmt 1 view .LVU229
 113:Core/Src/main.c ****   //TODO: Record the end time
 1091              		.loc 1 113 14 is_stmt 0 view .LVU230
 1092 0020 104B     		ldr	r3, .L49+8
 1093 0022 1868     		ldr	r0, [r3]
 1094 0024 6422     		movs	r2, #100
 1095 0026 0100     		movs	r1, r0
 1096 0028 FFF7FEFF 		bl	calculate_mandelbrot_double
 1097              	.LVL100:
 113:Core/Src/main.c ****   //TODO: Record the end time
 1098              		.loc 1 113 12 discriminator 1 view .LVU231
 1099 002c 0E4B     		ldr	r3, .L49+12
 1100 002e 1860     		str	r0, [r3]
 1101 0030 5960     		str	r1, [r3, #4]
 115:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 30


 1102              		.loc 1 115 3 is_stmt 1 view .LVU232
 115:Core/Src/main.c **** 
 1103              		.loc 1 115 14 is_stmt 0 view .LVU233
 1104 0032 FFF7FEFF 		bl	HAL_GetTick
 1105              	.LVL101:
 115:Core/Src/main.c **** 
 1106              		.loc 1 115 12 discriminator 1 view .LVU234
 1107 0036 FFF7FEFF 		bl	__aeabi_ui2f
 1108              	.LVL102:
 1109 003a 0C4B     		ldr	r3, .L49+16
 1110 003c 1860     		str	r0, [r3]
 118:Core/Src/main.c **** 
 1111              		.loc 1 118 3 is_stmt 1 view .LVU235
 118:Core/Src/main.c **** 
 1112              		.loc 1 118 27 is_stmt 0 view .LVU236
 1113 003e 2968     		ldr	r1, [r5]
 1114 0040 FFF7FEFF 		bl	__aeabi_fsub
 1115              	.LVL103:
 118:Core/Src/main.c **** 
 1116              		.loc 1 118 16 view .LVU237
 1117 0044 0A4B     		ldr	r3, .L49+20
 1118 0046 1860     		str	r0, [r3]
 121:Core/Src/main.c **** 
 1119              		.loc 1 121 3 is_stmt 1 view .LVU238
 121:Core/Src/main.c **** 
 1120              		.loc 1 121 14 is_stmt 0 view .LVU239
 1121 0048 0323     		movs	r3, #3
 1122 004a 6361     		str	r3, [r4, #20]
 124:Core/Src/main.c **** 
 1123              		.loc 1 124 3 is_stmt 1 view .LVU240
 1124 004c FA20     		movs	r0, #250
 1125 004e 8000     		lsls	r0, r0, #2
 1126 0050 FFF7FEFF 		bl	delay
 1127              	.LVL104:
 127:Core/Src/main.c **** 
 1128              		.loc 1 127 3 view .LVU241
 127:Core/Src/main.c **** 
 1129              		.loc 1 127 14 is_stmt 0 view .LVU242
 1130 0054 0023     		movs	r3, #0
 1131 0056 6361     		str	r3, [r4, #20]
 1132              	.L48:
 133:Core/Src/main.c ****   {
 1133              		.loc 1 133 3 is_stmt 1 view .LVU243
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 1134              		.loc 1 138 3 view .LVU244
 133:Core/Src/main.c ****   {
 1135              		.loc 1 133 9 view .LVU245
 1136 0058 FEE7     		b	.L48
 1137              	.L50:
 1138 005a C046     		.align	2
 1139              	.L49:
 1140 005c 00040048 		.word	1207960576
 1141 0060 00000000 		.word	start_time
 1142 0064 00000000 		.word	imag_dim
 1143 0068 00000000 		.word	checksum
 1144 006c 00000000 		.word	end_time
 1145 0070 00000000 		.word	time_elapsed
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 31


 1146              		.cfi_endproc
 1147              	.LFE40:
 1149              		.global	time_elapsed
 1150              		.section	.bss.time_elapsed,"aw",%nobits
 1151              		.align	2
 1154              	time_elapsed:
 1155 0000 00000000 		.space	4
 1156              		.global	end_time
 1157              		.section	.bss.end_time,"aw",%nobits
 1158              		.align	2
 1161              	end_time:
 1162 0000 00000000 		.space	4
 1163              		.global	start_time
 1164              		.section	.bss.start_time,"aw",%nobits
 1165              		.align	2
 1168              	start_time:
 1169 0000 00000000 		.space	4
 1170              		.global	checksum
 1171              		.section	.bss.checksum,"aw",%nobits
 1172              		.align	3
 1175              	checksum:
 1176 0000 00000000 		.space	8
 1176      00000000 
 1177              		.global	imag_dim
 1178              		.section	.data.imag_dim,"aw"
 1179              		.align	3
 1182              	imag_dim:
 1183 0000 A0000000 		.word	160
 1184 0004 00000000 		.word	0
 1185              		.text
 1186              	.Letext0:
 1187              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1188              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1189              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1190              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1191              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1192              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1193              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1194              		.file 10 "<built-in>"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:134    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:466    .text.calculate_mandelbrot_fixed_point_arithmetic:00000198 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:483    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:489    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:817    .text.calculate_mandelbrot_double:00000194 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:825    .text.Error_Handler:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:831    .text.Error_Handler:00000000 Error_Handler
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:863    .text.SystemClock_Config:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:869    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:957    .text.delay:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:963    .text.delay:00000000 delay
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1047   .text.main:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1053   .text.main:00000000 main
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1140   .text.main:0000005c $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1168   .bss.start_time:00000000 start_time
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1182   .data.imag_dim:00000000 imag_dim
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1175   .bss.checksum:00000000 checksum
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1161   .bss.end_time:00000000 end_time
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1154   .bss.time_elapsed:00000000 time_elapsed
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1151   .bss.time_elapsed:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1158   .bss.end_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1165   .bss.start_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1172   .bss.checksum:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccJ0eVpO.s:1179   .data.imag_dim:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_idiv
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_d2lz
__aeabi_dadd
__aeabi_ldivmod
__aeabi_lmul
__aeabi_ddiv
__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_ul2d
__aeabi_d2ulz
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_uidiv
__aeabi_ui2f
__aeabi_fsub
HAL_Init
HAL_GetTick
