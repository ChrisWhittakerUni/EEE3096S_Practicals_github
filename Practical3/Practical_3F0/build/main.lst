ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define variables you think you might need
  46:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  47:Core/Src/main.c **** #define MAX_ITER 100
  48:Core/Src/main.c **** int height;
  49:Core/Src/main.c **** int width;
  50:Core/Src/main.c **** int test_values[5] = {128, 160, 192, 224, 256};
  51:Core/Src/main.c **** int imag_dim;
  52:Core/Src/main.c **** uint64_t checksum;
  53:Core/Src/main.c **** int imag_dim_arr[5];
  54:Core/Src/main.c **** uint64_t time_elapsed_arr[5];
  55:Core/Src/main.c **** uint64_t checksum_arr[5];
  56:Core/Src/main.c **** uint64_t start_time;
  57:Core/Src/main.c **** uint64_t end_time;
  58:Core/Src/main.c **** uint64_t time_elapsed;
  59:Core/Src/main.c **** int place=0;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MX_GPIO_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  70:Core/Src/main.c **** // function declarations
  71:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  72:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  73:Core/Src/main.c **** /* USER CODE END PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /**
  81:Core/Src/main.c ****   * @brief  The application entry point.
  82:Core/Src/main.c ****   * @retval int
  83:Core/Src/main.c ****   */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 2 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   // loop to make testing easier
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     //loop for double mandelbrot
 119:Core/Src/main.c ****      place = 0;
 120:Core/Src/main.c ****      for(int i=0; i<5; i++){
 121:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 122:Core/Src/main.c ****    	  GPIOB->ODR = 0b00000001;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****    	  // set height and width
 125:Core/Src/main.c ****    	  imag_dim = test_values[i];
 126:Core/Src/main.c ****    	  height = imag_dim;
 127:Core/Src/main.c ****    	  width = imag_dim;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****         //TODO: Record the start time
 130:Core/Src/main.c ****    	  start_time = HAL_GetTick();
 131:Core/Src/main.c ****         //do mandelbrot with double
 132:Core/Src/main.c ****         checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, MAX_ITER);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****         //TODO: Record the end time
 135:Core/Src/main.c ****    	  end_time = HAL_GetTick();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****         //TODO: Calculate the execution time
 138:Core/Src/main.c ****    	  time_elapsed = end_time - start_time;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****         imag_dim_arr[place] = imag_dim;
 141:Core/Src/main.c ****    	  time_elapsed_arr[place] = time_elapsed;
 142:Core/Src/main.c ****    	  checksum_arr[place] = checksum;
 143:Core/Src/main.c ****         // increment the index for all output arrays
 144:Core/Src/main.c ****         place+=1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****         //TODO: Turn on LED 1 to signify the end of the operation
 147:Core/Src/main.c ****    	  GPIOB->ODR = 0b00000011;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****    	  //TODO: Hold the LEDs on for a 1s delay
 150:Core/Src/main.c ****    	  delay(1000);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****      }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****      //TODO: Turn off the LEDs
 155:Core/Src/main.c ****      GPIOB->ODR = 0b00000000;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* Infinite loop */
 158:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 159:Core/Src/main.c ****   while (1)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     /* USER CODE END WHILE */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 164:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	  // TODO: Turn OFF LEDs
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c ****   /* USER CODE END 3 */
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief System Clock Configuration
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void SystemClock_Config(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 190:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 193:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 5


 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief GPIO Initialization Function
 223:Core/Src/main.c ****   * @param None
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** static void MX_GPIO_Init(void)
 227:Core/Src/main.c **** {
  26              		.loc 1 227 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 228:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 228 3 view .LVU1
  39              		.loc 1 228 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 229:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 234:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 234 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 234 3 view .LVU4
  48              		.loc 1 234 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 6


  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 234 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 234 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 234 3 view .LVU8
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 235 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 235 3 view .LVU10
  66              		.loc 1 235 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 235 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 235 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 235 3 view .LVU14
 236:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 236 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 236 3 view .LVU16
  83              		.loc 1 236 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 236 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 236 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 236 3 view .LVU20
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 239 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 240:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 7


 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 243:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 244 3 view .LVU22
 105              		.loc 1 244 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 246 3 is_stmt 1 view .LVU24
 109              		.loc 1 246 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 247 3 is_stmt 1 view .LVU26
 113              		.loc 1 247 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 248:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 248 3 is_stmt 1 view .LVU28
 117              		.loc 1 248 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 249:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 249 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 254:Core/Src/main.c **** }
 124              		.loc 1 254 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_idiv
 137              		.global	__aeabi_lmul
 138              		.global	__aeabi_ldivmod
 139              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 140              		.align	1
 141              		.global	calculate_mandelbrot_fixed_point_arithmetic
 142              		.syntax unified
 143              		.code	16
 144              		.thumb_func
 146              	calculate_mandelbrot_fixed_point_arithmetic:
 147              	.LVL3:
 148              	.LFB43:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 8


 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 257:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 258:Core/Src/main.c **** /*
 259:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using scale factor of 1
 260:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 261:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 262:Core/Src/main.c ****   //TODO: Complete the function implementation
 263:Core/Src/main.c ****   int64_t x_0;
 264:Core/Src/main.c ****   int64_t y_0;
 265:Core/Src/main.c ****   int64_t x_i;
 266:Core/Src/main.c ****   int64_t y_i;
 267:Core/Src/main.c ****   int64_t iteration;
 268:Core/Src/main.c ****   int64_t temp;
 269:Core/Src/main.c ****   int64_t h_adj = 2000000/height;
 270:Core/Src/main.c ****   int64_t w_adj = 3500000/width;
 271:Core/Src/main.c ****   for(int y=0; y<height; y++){
 272:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 273:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 274:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 275:Core/Src/main.c **** 		  x_i = 0;
 276:Core/Src/main.c **** 		  y_i = 0;
 277:Core/Src/main.c **** 		  iteration = 0;
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000000) <= 4000000)){
 280:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 281:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000000) + y_0;
 282:Core/Src/main.c **** 			  x_i = temp;
 283:Core/Src/main.c **** 			  iteration += 1;
 284:Core/Src/main.c **** 		  }
 285:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 286:Core/Src/main.c **** 	  }
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   return mandelbrot_sum;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }*/
 292:Core/Src/main.c **** /*
 293:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using scale factor of 1
 294:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 295:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 296:Core/Src/main.c ****   //TODO: Complete the function implementation
 297:Core/Src/main.c ****   int64_t x_0;
 298:Core/Src/main.c ****   int64_t y_0;
 299:Core/Src/main.c ****   int64_t x_i;
 300:Core/Src/main.c ****   int64_t y_i;
 301:Core/Src/main.c ****   int64_t iteration;
 302:Core/Src/main.c ****   int64_t temp;
 303:Core/Src/main.c ****   int64_t h_adj = 20000/height;
 304:Core/Src/main.c ****   int64_t w_adj = 35000/width;
 305:Core/Src/main.c ****   for(int y=0; y<height; y++){
 306:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 307:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (25000);
 308:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (10000);
 309:Core/Src/main.c **** 		  x_i = 0;
 310:Core/Src/main.c **** 		  y_i = 0;
 311:Core/Src/main.c **** 		  iteration = 0;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 9


 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/10000) <= 40000)){
 314:Core/Src/main.c **** 			  temp = ((x_i*x_i)/10000)-((y_i*y_i)/10000) + (x_0);
 315:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/10000) + y_0;
 316:Core/Src/main.c **** 			  x_i = temp;
 317:Core/Src/main.c **** 			  iteration += 1;
 318:Core/Src/main.c **** 		  }
 319:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 320:Core/Src/main.c **** 	  }
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   return mandelbrot_sum;
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** }*/
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using 10^3 scale factor
 328:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 149              		.loc 1 328 96 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 72
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 328 96 is_stmt 0 view .LVU33
 154 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 20
 157              		.cfi_offset 4, -20
 158              		.cfi_offset 5, -16
 159              		.cfi_offset 6, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 DE46     		mov	lr, fp
 163 0004 5746     		mov	r7, r10
 164 0006 4E46     		mov	r6, r9
 165 0008 4546     		mov	r5, r8
 166 000a E0B5     		push	{r5, r6, r7, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 36
 169              		.cfi_offset 8, -36
 170              		.cfi_offset 9, -32
 171              		.cfi_offset 10, -28
 172              		.cfi_offset 11, -24
 173 000c 93B0     		sub	sp, sp, #76
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 112
 176 000e 0500     		movs	r5, r0
 177 0010 0C90     		str	r0, [sp, #48]
 178 0012 0C00     		movs	r4, r1
 179 0014 1192     		str	r2, [sp, #68]
 329:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 180              		.loc 1 329 3 is_stmt 1 view .LVU34
 181              	.LVL4:
 330:Core/Src/main.c ****   //TODO: Complete the function implementation
 331:Core/Src/main.c ****   int64_t x_0;
 182              		.loc 1 331 3 view .LVU35
 332:Core/Src/main.c ****   int64_t y_0;
 183              		.loc 1 332 3 view .LVU36
 333:Core/Src/main.c ****   int64_t x_i;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 10


 184              		.loc 1 333 3 view .LVU37
 334:Core/Src/main.c ****   int64_t y_i;
 185              		.loc 1 334 3 view .LVU38
 335:Core/Src/main.c ****   int64_t iteration;
 186              		.loc 1 335 3 view .LVU39
 336:Core/Src/main.c ****   int64_t temp;
 187              		.loc 1 336 3 view .LVU40
 337:Core/Src/main.c ****   int64_t h_adj = 2000/height;
 188              		.loc 1 337 3 view .LVU41
 189              		.loc 1 337 23 is_stmt 0 view .LVU42
 190 0016 FA20     		movs	r0, #250
 191              	.LVL5:
 192              		.loc 1 337 23 view .LVU43
 193 0018 C000     		lsls	r0, r0, #3
 194 001a FFF7FEFF 		bl	__aeabi_idiv
 195              	.LVL6:
 196              		.loc 1 337 23 view .LVU44
 197 001e 0D90     		str	r0, [sp, #52]
 198              		.loc 1 337 11 view .LVU45
 199 0020 C317     		asrs	r3, r0, #31
 200 0022 0F93     		str	r3, [sp, #60]
 201              	.LVL7:
 338:Core/Src/main.c ****   int64_t w_adj = 3500/width;
 202              		.loc 1 338 3 is_stmt 1 view .LVU46
 203              		.loc 1 338 23 is_stmt 0 view .LVU47
 204 0024 2900     		movs	r1, r5
 205 0026 5848     		ldr	r0, .L18
 206              	.LVL8:
 207              		.loc 1 338 23 view .LVU48
 208 0028 FFF7FEFF 		bl	__aeabi_idiv
 209              	.LVL9:
 210              		.loc 1 338 23 view .LVU49
 211 002c 0E90     		str	r0, [sp, #56]
 212              		.loc 1 338 11 view .LVU50
 213 002e C317     		asrs	r3, r0, #31
 214 0030 1093     		str	r3, [sp, #64]
 215              	.LVL10:
 339:Core/Src/main.c ****   for(int y=0; y<height; y++){
 216              		.loc 1 339 3 is_stmt 1 view .LVU51
 217              	.LBB7:
 218              		.loc 1 339 7 view .LVU52
 219              		.loc 1 339 11 is_stmt 0 view .LVU53
 220 0032 0023     		movs	r3, #0
 221              	.LVL11:
 222              		.loc 1 339 11 view .LVU54
 223 0034 9A46     		mov	r10, r3
 224              	.LBE7:
 329:Core/Src/main.c ****   //TODO: Complete the function implementation
 225              		.loc 1 329 12 view .LVU55
 226 0036 0022     		movs	r2, #0
 227 0038 0023     		movs	r3, #0
 228 003a 0892     		str	r2, [sp, #32]
 229 003c 0993     		str	r3, [sp, #36]
 230 003e 5346     		mov	r3, r10
 231 0040 0B93     		str	r3, [sp, #44]
 232              	.LBB10:
 233              		.loc 1 339 3 view .LVU56
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 11


 234 0042 8DE0     		b	.L5
 235              	.LVL12:
 236              	.L9:
 237              	.LBB8:
 340:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 341:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 342:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 343:Core/Src/main.c **** 		  x_i = 0;
 344:Core/Src/main.c **** 		  y_i = 0;
 345:Core/Src/main.c **** 		  iteration = 0;
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000) <= 4000)){
 348:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 238              		.loc 1 348 6 is_stmt 1 view .LVU57
 239              		.loc 1 348 23 is_stmt 0 view .LVU58
 240 0044 FA22     		movs	r2, #250
 241 0046 9200     		lsls	r2, r2, #2
 242 0048 0023     		movs	r3, #0
 243 004a 0098     		ldr	r0, [sp]
 244 004c 0199     		ldr	r1, [sp, #4]
 245 004e FFF7FEFF 		bl	__aeabi_ldivmod
 246              	.LVL13:
 247 0052 0090     		str	r0, [sp]
 248 0054 0191     		str	r1, [sp, #4]
 249              		.loc 1 348 40 view .LVU59
 250 0056 4D4A     		ldr	r2, .L18+4
 251 0058 0123     		movs	r3, #1
 252 005a 5B42     		rsbs	r3, r3, #0
 253 005c 2000     		movs	r0, r4
 254 005e 2900     		movs	r1, r5
 255 0060 FFF7FEFF 		bl	__aeabi_ldivmod
 256              	.LVL14:
 257              		.loc 1 348 29 view .LVU60
 258 0064 009C     		ldr	r4, [sp]
 259 0066 019D     		ldr	r5, [sp, #4]
 260 0068 2418     		adds	r4, r4, r0
 261 006a 4D41     		adcs	r5, r5, r1
 262              		.loc 1 348 11 view .LVU61
 263 006c 049A     		ldr	r2, [sp, #16]
 264 006e 059B     		ldr	r3, [sp, #20]
 265 0070 A418     		adds	r4, r4, r2
 266 0072 5D41     		adcs	r5, r5, r3
 267              	.LVL15:
 349:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000) + y_0;
 268              		.loc 1 349 6 is_stmt 1 view .LVU62
 269              		.loc 1 349 19 is_stmt 0 view .LVU63
 270 0074 3200     		movs	r2, r6
 271 0076 3B00     		movs	r3, r7
 272 0078 4846     		mov	r0, r9
 273 007a 4146     		mov	r1, r8
 274 007c FFF7FEFF 		bl	__aeabi_lmul
 275              	.LVL16:
 276              		.loc 1 349 24 view .LVU64
 277 0080 FA22     		movs	r2, #250
 278 0082 5200     		lsls	r2, r2, #1
 279 0084 0023     		movs	r3, #0
 280 0086 FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 12


 281              	.LVL17:
 282              		.loc 1 349 10 view .LVU65
 283 008a 069E     		ldr	r6, [sp, #24]
 284 008c 079F     		ldr	r7, [sp, #28]
 285              	.LVL18:
 286              		.loc 1 349 10 view .LVU66
 287 008e 3618     		adds	r6, r6, r0
 288 0090 4F41     		adcs	r7, r7, r1
 289              	.LVL19:
 350:Core/Src/main.c **** 			  x_i = temp;
 290              		.loc 1 350 6 is_stmt 1 view .LVU67
 351:Core/Src/main.c **** 			  iteration += 1;
 291              		.loc 1 351 6 view .LVU68
 292              		.loc 1 351 16 is_stmt 0 view .LVU69
 293 0092 0122     		movs	r2, #1
 294 0094 0023     		movs	r3, #0
 295 0096 0298     		ldr	r0, [sp, #8]
 296 0098 0399     		ldr	r1, [sp, #12]
 297 009a 8018     		adds	r0, r0, r2
 298 009c 5941     		adcs	r1, r1, r3
 299 009e 0290     		str	r0, [sp, #8]
 300 00a0 0391     		str	r1, [sp, #12]
 301              	.LVL20:
 350:Core/Src/main.c **** 			  x_i = temp;
 302              		.loc 1 350 10 view .LVU70
 303 00a2 A146     		mov	r9, r4
 304 00a4 A846     		mov	r8, r5
 305              	.LVL21:
 306              	.L6:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 307              		.loc 1 347 40 is_stmt 1 view .LVU71
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 308              		.loc 1 347 22 is_stmt 0 view .LVU72
 309 00a6 5346     		mov	r3, r10
 310 00a8 DA17     		asrs	r2, r3, #31
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 311              		.loc 1 347 40 view .LVU73
 312 00aa 0399     		ldr	r1, [sp, #12]
 313 00ac 8A42     		cmp	r2, r1
 314 00ae 1BDD     		ble	.L15
 315              	.L14:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 316              		.loc 1 347 49 discriminator 1 view .LVU74
 317 00b0 4A46     		mov	r2, r9
 318 00b2 4346     		mov	r3, r8
 319 00b4 4846     		mov	r0, r9
 320 00b6 4146     		mov	r1, r8
 321 00b8 FFF7FEFF 		bl	__aeabi_lmul
 322              	.LVL22:
 323 00bc 0090     		str	r0, [sp]
 324 00be 0191     		str	r1, [sp, #4]
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 325              		.loc 1 347 57 discriminator 1 view .LVU75
 326 00c0 3200     		movs	r2, r6
 327 00c2 3B00     		movs	r3, r7
 328 00c4 3000     		movs	r0, r6
 329 00c6 3900     		movs	r1, r7
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 13


 330 00c8 FFF7FEFF 		bl	__aeabi_lmul
 331              	.LVL23:
 332 00cc 0400     		movs	r4, r0
 333 00ce 0D00     		movs	r5, r1
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 334              		.loc 1 347 53 discriminator 1 view .LVU76
 335 00d0 009A     		ldr	r2, [sp]
 336 00d2 019B     		ldr	r3, [sp, #4]
 337 00d4 1219     		adds	r2, r2, r4
 338 00d6 6B41     		adcs	r3, r3, r5
 339 00d8 1100     		movs	r1, r2
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 340              		.loc 1 347 40 discriminator 1 view .LVU77
 341 00da 002B     		cmp	r3, #0
 342 00dc 0ADC     		bgt	.L7
 343 00de B1D1     		bne	.L9
 344 00e0 2B4B     		ldr	r3, .L18+8
 345 00e2 9942     		cmp	r1, r3
 346 00e4 AED9     		bls	.L9
 347 00e6 05E0     		b	.L7
 348              	.L15:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 349              		.loc 1 347 40 view .LVU78
 350 00e8 0298     		ldr	r0, [sp, #8]
 351 00ea 0399     		ldr	r1, [sp, #12]
 352 00ec 8A42     		cmp	r2, r1
 353 00ee 01D1     		bne	.L7
 354 00f0 8342     		cmp	r3, r0
 355 00f2 DDD8     		bhi	.L14
 356              	.L7:
 352:Core/Src/main.c **** 		  }
 353:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 357              		.loc 1 353 20 view .LVU79
 358 00f4 0A9C     		ldr	r4, [sp, #40]
 359              		.loc 1 353 5 is_stmt 1 view .LVU80
 360              		.loc 1 353 20 is_stmt 0 view .LVU81
 361 00f6 089A     		ldr	r2, [sp, #32]
 362 00f8 099B     		ldr	r3, [sp, #36]
 363 00fa 0298     		ldr	r0, [sp, #8]
 364 00fc 0399     		ldr	r1, [sp, #12]
 365 00fe 1218     		adds	r2, r2, r0
 366 0100 4B41     		adcs	r3, r3, r1
 367 0102 0892     		str	r2, [sp, #32]
 368 0104 0993     		str	r3, [sp, #36]
 369              	.LVL24:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 370              		.loc 1 340 27 is_stmt 1 discriminator 2 view .LVU82
 371 0106 0134     		adds	r4, r4, #1
 372              	.LVL25:
 373              	.L12:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 374              		.loc 1 340 18 discriminator 1 view .LVU83
 375 0108 0C9B     		ldr	r3, [sp, #48]
 376 010a 9C42     		cmp	r4, r3
 377 010c 24DA     		bge	.L16
 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 378              		.loc 1 341 5 view .LVU84
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 14


 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 379              		.loc 1 341 13 is_stmt 0 view .LVU85
 380 010e E117     		asrs	r1, r4, #31
 381 0110 0E9A     		ldr	r2, [sp, #56]
 382 0112 109B     		ldr	r3, [sp, #64]
 383 0114 2000     		movs	r0, r4
 384 0116 FFF7FEFF 		bl	__aeabi_lmul
 385              	.LVL26:
 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 386              		.loc 1 341 9 view .LVU86
 387 011a 1E4A     		ldr	r2, .L18+12
 388 011c 0123     		movs	r3, #1
 389 011e 5B42     		rsbs	r3, r3, #0
 390 0120 8018     		adds	r0, r0, r2
 391 0122 5941     		adcs	r1, r1, r3
 392 0124 0490     		str	r0, [sp, #16]
 393 0126 0591     		str	r1, [sp, #20]
 394              	.LVL27:
 342:Core/Src/main.c **** 		  x_i = 0;
 395              		.loc 1 342 5 is_stmt 1 view .LVU87
 342:Core/Src/main.c **** 		  x_i = 0;
 396              		.loc 1 342 13 is_stmt 0 view .LVU88
 397 0128 0B98     		ldr	r0, [sp, #44]
 398              	.LVL28:
 342:Core/Src/main.c **** 		  x_i = 0;
 399              		.loc 1 342 13 view .LVU89
 400 012a C117     		asrs	r1, r0, #31
 401 012c 0D9A     		ldr	r2, [sp, #52]
 402 012e 0F9B     		ldr	r3, [sp, #60]
 403 0130 FFF7FEFF 		bl	__aeabi_lmul
 404              	.LVL29:
 342:Core/Src/main.c **** 		  x_i = 0;
 405              		.loc 1 342 9 view .LVU90
 406 0134 154A     		ldr	r2, .L18+4
 407 0136 0123     		movs	r3, #1
 408 0138 5B42     		rsbs	r3, r3, #0
 409 013a 8018     		adds	r0, r0, r2
 410 013c 5941     		adcs	r1, r1, r3
 411 013e 0690     		str	r0, [sp, #24]
 412 0140 0791     		str	r1, [sp, #28]
 413              	.LVL30:
 343:Core/Src/main.c **** 		  y_i = 0;
 414              		.loc 1 343 5 is_stmt 1 view .LVU91
 344:Core/Src/main.c **** 		  iteration = 0;
 415              		.loc 1 344 5 view .LVU92
 345:Core/Src/main.c **** 
 416              		.loc 1 345 5 view .LVU93
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 417              		.loc 1 347 5 view .LVU94
 345:Core/Src/main.c **** 
 418              		.loc 1 345 15 is_stmt 0 view .LVU95
 419 0142 0022     		movs	r2, #0
 420 0144 0023     		movs	r3, #0
 421 0146 0292     		str	r2, [sp, #8]
 422 0148 0393     		str	r3, [sp, #12]
 344:Core/Src/main.c **** 		  iteration = 0;
 423              		.loc 1 344 9 view .LVU96
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 15


 424 014a 0026     		movs	r6, #0
 425 014c 0027     		movs	r7, #0
 343:Core/Src/main.c **** 		  y_i = 0;
 426              		.loc 1 343 9 view .LVU97
 427 014e 0023     		movs	r3, #0
 428 0150 9946     		mov	r9, r3
 429 0152 9846     		mov	r8, r3
 430 0154 0A94     		str	r4, [sp, #40]
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 431              		.loc 1 347 10 view .LVU98
 432 0156 A6E7     		b	.L6
 433              	.LVL31:
 434              	.L16:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 435              		.loc 1 347 10 view .LVU99
 436              	.LBE8:
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 437              		.loc 1 339 27 discriminator 2 view .LVU100
 438 0158 5C46     		mov	r4, fp
 439              	.LVL32:
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 440              		.loc 1 339 27 is_stmt 1 discriminator 2 view .LVU101
 441 015a 0B9B     		ldr	r3, [sp, #44]
 442 015c 0133     		adds	r3, r3, #1
 443 015e 0B93     		str	r3, [sp, #44]
 444              	.LVL33:
 445              	.L5:
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 446              		.loc 1 339 17 discriminator 1 view .LVU102
 447 0160 0B9B     		ldr	r3, [sp, #44]
 448 0162 A342     		cmp	r3, r4
 449 0164 06DA     		bge	.L17
 450              	.LBB9:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 451              		.loc 1 340 12 is_stmt 0 view .LVU103
 452 0166 0023     		movs	r3, #0
 453 0168 2200     		movs	r2, r4
 454 016a 1C00     		movs	r4, r3
 455              	.LVL34:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 456              		.loc 1 340 12 view .LVU104
 457 016c 119B     		ldr	r3, [sp, #68]
 458 016e 9A46     		mov	r10, r3
 459 0170 9346     		mov	fp, r2
 460 0172 C9E7     		b	.L12
 461              	.LVL35:
 462              	.L17:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 463              		.loc 1 340 12 view .LVU105
 464              	.LBE9:
 465              	.LBE10:
 354:Core/Src/main.c **** 	  }
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   return mandelbrot_sum;
 466              		.loc 1 356 3 is_stmt 1 view .LVU106
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 16


 359:Core/Src/main.c **** }
 467              		.loc 1 359 1 is_stmt 0 view .LVU107
 468 0174 0898     		ldr	r0, [sp, #32]
 469 0176 0999     		ldr	r1, [sp, #36]
 470 0178 13B0     		add	sp, sp, #76
 471              		@ sp needed
 472              	.LVL36:
 473              		.loc 1 359 1 view .LVU108
 474 017a F0BC     		pop	{r4, r5, r6, r7}
 475 017c BB46     		mov	fp, r7
 476 017e B246     		mov	r10, r6
 477 0180 A946     		mov	r9, r5
 478 0182 A046     		mov	r8, r4
 479 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 480              	.L19:
 481 0186 C046     		.align	2
 482              	.L18:
 483 0188 AC0D0000 		.word	3500
 484 018c 18FCFFFF 		.word	-1000
 485 0190 E70C3D00 		.word	4000999
 486 0194 3CF6FFFF 		.word	-2500
 487              		.cfi_endproc
 488              	.LFE43:
 490              		.global	__aeabi_i2d
 491              		.global	__aeabi_ddiv
 492              		.global	__aeabi_dmul
 493              		.global	__aeabi_dsub
 494              		.global	__aeabi_dadd
 495              		.global	__aeabi_dcmpgt
 496              		.global	__aeabi_dcmple
 497              		.global	__aeabi_ul2d
 498              		.global	__aeabi_d2ulz
 499              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 500              		.align	1
 501              		.global	calculate_mandelbrot_double
 502              		.syntax unified
 503              		.code	16
 504              		.thumb_func
 506              	calculate_mandelbrot_double:
 507              	.LVL37:
 508              	.LFB44:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 362:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 509              		.loc 1 362 80 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 80
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		.loc 1 362 80 is_stmt 0 view .LVU110
 514 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 515              	.LCFI5:
 516              		.cfi_def_cfa_offset 20
 517              		.cfi_offset 4, -20
 518              		.cfi_offset 5, -16
 519              		.cfi_offset 6, -12
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 17


 522 0002 DE46     		mov	lr, fp
 523 0004 5746     		mov	r7, r10
 524 0006 4E46     		mov	r6, r9
 525 0008 4546     		mov	r5, r8
 526 000a E0B5     		push	{r5, r6, r7, lr}
 527              	.LCFI6:
 528              		.cfi_def_cfa_offset 36
 529              		.cfi_offset 8, -36
 530              		.cfi_offset 9, -32
 531              		.cfi_offset 10, -28
 532              		.cfi_offset 11, -24
 533 000c 95B0     		sub	sp, sp, #84
 534              	.LCFI7:
 535              		.cfi_def_cfa_offset 120
 536 000e 0E00     		movs	r6, r1
 537 0010 9046     		mov	r8, r2
 363:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 538              		.loc 1 363 5 is_stmt 1 view .LVU111
 539              	.LVL38:
 364:Core/Src/main.c ****     //TODO: Complete the function implementation
 365:Core/Src/main.c ****     double x_0;
 540              		.loc 1 365 5 view .LVU112
 366:Core/Src/main.c ****     double y_0;
 541              		.loc 1 366 5 view .LVU113
 367:Core/Src/main.c ****     double x_i;
 542              		.loc 1 367 5 view .LVU114
 368:Core/Src/main.c ****     double y_i;
 543              		.loc 1 368 5 view .LVU115
 369:Core/Src/main.c ****     double iteration;
 544              		.loc 1 369 5 view .LVU116
 370:Core/Src/main.c ****     double temp;
 545              		.loc 1 370 5 view .LVU117
 371:Core/Src/main.c ****     double w_adj=3.5/width;
 546              		.loc 1 371 5 view .LVU118
 547              		.loc 1 371 21 is_stmt 0 view .LVU119
 548 0012 FFF7FEFF 		bl	__aeabi_i2d
 549              	.LVL39:
 550              		.loc 1 371 21 view .LVU120
 551 0016 0400     		movs	r4, r0
 552 0018 0D00     		movs	r5, r1
 553 001a 0E94     		str	r4, [sp, #56]
 554 001c 0F95     		str	r5, [sp, #60]
 555              		.loc 1 371 12 view .LVU121
 556 001e 0200     		movs	r2, r0
 557 0020 0B00     		movs	r3, r1
 558 0022 0020     		movs	r0, #0
 559 0024 6049     		ldr	r1, .L32
 560 0026 FFF7FEFF 		bl	__aeabi_ddiv
 561              	.LVL40:
 562 002a 1090     		str	r0, [sp, #64]
 563 002c 1191     		str	r1, [sp, #68]
 564              	.LVL41:
 372:Core/Src/main.c ****     double h_adj=2.0/width;
 565              		.loc 1 372 5 is_stmt 1 view .LVU122
 566              		.loc 1 372 12 is_stmt 0 view .LVU123
 567 002e 2200     		movs	r2, r4
 568 0030 2B00     		movs	r3, r5
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 18


 569 0032 0020     		movs	r0, #0
 570              	.LVL42:
 571              		.loc 1 372 12 view .LVU124
 572 0034 8021     		movs	r1, #128
 573 0036 C905     		lsls	r1, r1, #23
 574 0038 FFF7FEFF 		bl	__aeabi_ddiv
 575              	.LVL43:
 576 003c 1290     		str	r0, [sp, #72]
 577 003e 1391     		str	r1, [sp, #76]
 578              	.LVL44:
 373:Core/Src/main.c ****     for(double y=0; y<height; y++){
 579              		.loc 1 373 5 is_stmt 1 view .LVU125
 580              	.LBB11:
 581              		.loc 1 373 9 view .LVU126
 582              		.loc 1 373 16 is_stmt 0 view .LVU127
 583 0040 0023     		movs	r3, #0
 584 0042 0024     		movs	r4, #0
 585 0044 0C93     		str	r3, [sp, #48]
 586 0046 0D94     		str	r4, [sp, #52]
 587              	.LBE11:
 363:Core/Src/main.c ****     //TODO: Complete the function implementation
 588              		.loc 1 363 14 view .LVU128
 589 0048 0023     		movs	r3, #0
 590 004a 9A46     		mov	r10, r3
 591 004c 9946     		mov	r9, r3
 592              	.LBB14:
 593              		.loc 1 373 5 view .LVU129
 594 004e 91E0     		b	.L21
 595              	.LVL45:
 596              	.L25:
 597              	.LBB12:
 374:Core/Src/main.c ****        for(double x=0; x<width; x++){
 375:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 376:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 377:Core/Src/main.c ****     	  x_i = 0;
 378:Core/Src/main.c ****     	  y_i = 0;
 379:Core/Src/main.c ****           iteration = 0;
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 382:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 598              		.loc 1 382 7 is_stmt 1 view .LVU130
 599              		.loc 1 382 23 is_stmt 0 view .LVU131
 600 0050 049A     		ldr	r2, [sp, #16]
 601 0052 059B     		ldr	r3, [sp, #20]
 602 0054 0298     		ldr	r0, [sp, #8]
 603 0056 0399     		ldr	r1, [sp, #12]
 604 0058 FFF7FEFF 		bl	__aeabi_dsub
 605              	.LVL46:
 606              		.loc 1 382 12 view .LVU132
 607 005c 069A     		ldr	r2, [sp, #24]
 608 005e 079B     		ldr	r3, [sp, #28]
 609 0060 FFF7FEFF 		bl	__aeabi_dadd
 610              	.LVL47:
 611 0064 0290     		str	r0, [sp, #8]
 612 0066 0391     		str	r1, [sp, #12]
 613              	.LVL48:
 383:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 19


 614              		.loc 1 383 7 is_stmt 1 view .LVU133
 615              		.loc 1 383 15 is_stmt 0 view .LVU134
 616 0068 3200     		movs	r2, r6
 617 006a 3B00     		movs	r3, r7
 618 006c 3000     		movs	r0, r6
 619              	.LVL49:
 620              		.loc 1 383 15 view .LVU135
 621 006e 3900     		movs	r1, r7
 622 0070 FFF7FEFF 		bl	__aeabi_dadd
 623              	.LVL50:
 624              		.loc 1 383 19 view .LVU136
 625 0074 2200     		movs	r2, r4
 626 0076 2B00     		movs	r3, r5
 627 0078 FFF7FEFF 		bl	__aeabi_dmul
 628              	.LVL51:
 629              		.loc 1 383 11 view .LVU137
 630 007c 089A     		ldr	r2, [sp, #32]
 631 007e 099B     		ldr	r3, [sp, #36]
 632 0080 FFF7FEFF 		bl	__aeabi_dadd
 633              	.LVL52:
 634 0084 0400     		movs	r4, r0
 635              	.LVL53:
 636              		.loc 1 383 11 view .LVU138
 637 0086 0D00     		movs	r5, r1
 638              	.LVL54:
 384:Core/Src/main.c ****     		x_i = temp;
 639              		.loc 1 384 7 is_stmt 1 view .LVU139
 385:Core/Src/main.c ****     		iteration += 1;
 640              		.loc 1 385 7 view .LVU140
 641              		.loc 1 385 17 is_stmt 0 view .LVU141
 642 0088 0022     		movs	r2, #0
 643 008a 484B     		ldr	r3, .L32+4
 644 008c 0098     		ldr	r0, [sp]
 645 008e 0199     		ldr	r1, [sp, #4]
 646 0090 FFF7FEFF 		bl	__aeabi_dadd
 647              	.LVL55:
 648 0094 0090     		str	r0, [sp]
 649 0096 0191     		str	r1, [sp, #4]
 650              	.LVL56:
 384:Core/Src/main.c ****     		x_i = temp;
 651              		.loc 1 384 11 view .LVU142
 652 0098 029E     		ldr	r6, [sp, #8]
 653 009a 039F     		ldr	r7, [sp, #12]
 654              	.LVL57:
 655              	.L22:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 656              		.loc 1 381 43 is_stmt 1 view .LVU143
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 657              		.loc 1 381 25 is_stmt 0 view .LVU144
 658 009c 4046     		mov	r0, r8
 659 009e FFF7FEFF 		bl	__aeabi_i2d
 660              	.LVL58:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 661              		.loc 1 381 43 view .LVU145
 662 00a2 009A     		ldr	r2, [sp]
 663 00a4 019B     		ldr	r3, [sp, #4]
 664 00a6 FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 20


 665              	.LVL59:
 666 00aa 0028     		cmp	r0, #0
 667 00ac 1BD0     		beq	.L23
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 668              		.loc 1 381 51 discriminator 1 view .LVU146
 669 00ae 3200     		movs	r2, r6
 670 00b0 3B00     		movs	r3, r7
 671 00b2 3000     		movs	r0, r6
 672 00b4 3900     		movs	r1, r7
 673 00b6 FFF7FEFF 		bl	__aeabi_dmul
 674              	.LVL60:
 675 00ba 0290     		str	r0, [sp, #8]
 676 00bc 0391     		str	r1, [sp, #12]
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 677              		.loc 1 381 63 discriminator 1 view .LVU147
 678 00be 2200     		movs	r2, r4
 679 00c0 2B00     		movs	r3, r5
 680 00c2 2000     		movs	r0, r4
 681 00c4 2900     		movs	r1, r5
 682 00c6 FFF7FEFF 		bl	__aeabi_dmul
 683              	.LVL61:
 684 00ca 0200     		movs	r2, r0
 685 00cc 0B00     		movs	r3, r1
 686 00ce 0492     		str	r2, [sp, #16]
 687 00d0 0593     		str	r3, [sp, #20]
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 688              		.loc 1 381 57 discriminator 1 view .LVU148
 689 00d2 0298     		ldr	r0, [sp, #8]
 690 00d4 0399     		ldr	r1, [sp, #12]
 691 00d6 FFF7FEFF 		bl	__aeabi_dadd
 692              	.LVL62:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 693              		.loc 1 381 43 discriminator 1 view .LVU149
 694 00da 0022     		movs	r2, #0
 695 00dc 344B     		ldr	r3, .L32+8
 696 00de FFF7FEFF 		bl	__aeabi_dcmple
 697              	.LVL63:
 698 00e2 0028     		cmp	r0, #0
 699 00e4 B4D1     		bne	.L25
 700              	.L23:
 386:Core/Src/main.c ****     	  }
 387:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 701              		.loc 1 387 8 is_stmt 1 view .LVU150
 702              		.loc 1 387 23 is_stmt 0 view .LVU151
 703 00e6 5046     		mov	r0, r10
 704 00e8 5946     		mov	r1, fp
 705 00ea FFF7FEFF 		bl	__aeabi_ul2d
 706              	.LVL64:
 707 00ee 009A     		ldr	r2, [sp]
 708 00f0 019B     		ldr	r3, [sp, #4]
 709 00f2 FFF7FEFF 		bl	__aeabi_dadd
 710              	.LVL65:
 711 00f6 FFF7FEFF 		bl	__aeabi_d2ulz
 712              	.LVL66:
 713 00fa 8246     		mov	r10, r0
 714              	.LVL67:
 715              		.loc 1 387 23 view .LVU152
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 21


 716 00fc 8B46     		mov	fp, r1
 717              	.LVL68:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 718              		.loc 1 374 34 is_stmt 1 discriminator 2 view .LVU153
 719 00fe 0022     		movs	r2, #0
 720 0100 2A4B     		ldr	r3, .L32+4
 721 0102 0A98     		ldr	r0, [sp, #40]
 722 0104 0B99     		ldr	r1, [sp, #44]
 723              	.LVL69:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 724              		.loc 1 374 34 is_stmt 0 discriminator 2 view .LVU154
 725 0106 FFF7FEFF 		bl	__aeabi_dadd
 726              	.LVL70:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 727              		.loc 1 374 34 discriminator 2 view .LVU155
 728 010a 0A90     		str	r0, [sp, #40]
 729 010c 0B91     		str	r1, [sp, #44]
 730              	.LVL71:
 731              	.L27:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 732              		.loc 1 374 25 is_stmt 1 discriminator 1 view .LVU156
 733 010e 0A9A     		ldr	r2, [sp, #40]
 734 0110 0B9B     		ldr	r3, [sp, #44]
 735 0112 0E98     		ldr	r0, [sp, #56]
 736 0114 0F99     		ldr	r1, [sp, #60]
 737 0116 FFF7FEFF 		bl	__aeabi_dcmpgt
 738              	.LVL72:
 739 011a 0028     		cmp	r0, #0
 740 011c 20D0     		beq	.L30
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 741              		.loc 1 375 8 view .LVU157
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 742              		.loc 1 375 16 is_stmt 0 view .LVU158
 743 011e 109A     		ldr	r2, [sp, #64]
 744 0120 119B     		ldr	r3, [sp, #68]
 745 0122 0A98     		ldr	r0, [sp, #40]
 746 0124 0B99     		ldr	r1, [sp, #44]
 747 0126 FFF7FEFF 		bl	__aeabi_dmul
 748              	.LVL73:
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 749              		.loc 1 375 12 view .LVU159
 750 012a 0022     		movs	r2, #0
 751 012c 214B     		ldr	r3, .L32+12
 752 012e FFF7FEFF 		bl	__aeabi_dsub
 753              	.LVL74:
 754 0132 0690     		str	r0, [sp, #24]
 755 0134 0791     		str	r1, [sp, #28]
 756              	.LVL75:
 376:Core/Src/main.c ****     	  x_i = 0;
 757              		.loc 1 376 8 is_stmt 1 view .LVU160
 376:Core/Src/main.c ****     	  x_i = 0;
 758              		.loc 1 376 16 is_stmt 0 view .LVU161
 759 0136 129A     		ldr	r2, [sp, #72]
 760 0138 139B     		ldr	r3, [sp, #76]
 761 013a 0C98     		ldr	r0, [sp, #48]
 762 013c 0D99     		ldr	r1, [sp, #52]
 763              	.LVL76:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 22


 376:Core/Src/main.c ****     	  x_i = 0;
 764              		.loc 1 376 16 view .LVU162
 765 013e FFF7FEFF 		bl	__aeabi_dmul
 766              	.LVL77:
 376:Core/Src/main.c ****     	  x_i = 0;
 767              		.loc 1 376 12 view .LVU163
 768 0142 0022     		movs	r2, #0
 769 0144 194B     		ldr	r3, .L32+4
 770 0146 FFF7FEFF 		bl	__aeabi_dsub
 771              	.LVL78:
 772 014a 0890     		str	r0, [sp, #32]
 773 014c 0991     		str	r1, [sp, #36]
 774              	.LVL79:
 377:Core/Src/main.c ****     	  y_i = 0;
 775              		.loc 1 377 8 is_stmt 1 view .LVU164
 378:Core/Src/main.c ****           iteration = 0;
 776              		.loc 1 378 8 view .LVU165
 379:Core/Src/main.c **** 
 777              		.loc 1 379 11 view .LVU166
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 778              		.loc 1 381 8 view .LVU167
 379:Core/Src/main.c **** 
 779              		.loc 1 379 21 is_stmt 0 view .LVU168
 780 014e 0023     		movs	r3, #0
 781 0150 0024     		movs	r4, #0
 782 0152 1E00     		movs	r6, r3
 783 0154 2700     		movs	r7, r4
 784 0156 0096     		str	r6, [sp]
 785 0158 0197     		str	r7, [sp, #4]
 378:Core/Src/main.c ****           iteration = 0;
 786              		.loc 1 378 12 view .LVU169
 787 015a 1C00     		movs	r4, r3
 788 015c 3D00     		movs	r5, r7
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 789              		.loc 1 381 13 view .LVU170
 790 015e 9DE7     		b	.L22
 791              	.LVL80:
 792              	.L30:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 793              		.loc 1 381 13 view .LVU171
 794              	.LBE12:
 373:Core/Src/main.c ****        for(double x=0; x<width; x++){
 795              		.loc 1 373 32 discriminator 2 view .LVU172
 796 0160 4E46     		mov	r6, r9
 797 0162 D946     		mov	r9, fp
 798              	.LVL81:
 373:Core/Src/main.c ****        for(double x=0; x<width; x++){
 799              		.loc 1 373 32 is_stmt 1 discriminator 2 view .LVU173
 800 0164 0022     		movs	r2, #0
 801 0166 114B     		ldr	r3, .L32+4
 802 0168 0C98     		ldr	r0, [sp, #48]
 803 016a 0D99     		ldr	r1, [sp, #52]
 804 016c FFF7FEFF 		bl	__aeabi_dadd
 805              	.LVL82:
 806 0170 0C90     		str	r0, [sp, #48]
 807 0172 0D91     		str	r1, [sp, #52]
 808              	.LVL83:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 23


 809              	.L21:
 373:Core/Src/main.c ****        for(double x=0; x<width; x++){
 810              		.loc 1 373 22 discriminator 1 view .LVU174
 811 0174 3000     		movs	r0, r6
 812 0176 FFF7FEFF 		bl	__aeabi_i2d
 813              	.LVL84:
 814 017a 0C9A     		ldr	r2, [sp, #48]
 815 017c 0D9B     		ldr	r3, [sp, #52]
 816 017e FFF7FEFF 		bl	__aeabi_dcmpgt
 817              	.LVL85:
 818 0182 0028     		cmp	r0, #0
 819 0184 06D0     		beq	.L31
 820              	.LBB13:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 821              		.loc 1 374 19 is_stmt 0 view .LVU175
 822 0186 0023     		movs	r3, #0
 823 0188 0024     		movs	r4, #0
 824 018a 0A93     		str	r3, [sp, #40]
 825 018c 0B94     		str	r4, [sp, #44]
 826 018e CB46     		mov	fp, r9
 827 0190 B146     		mov	r9, r6
 828              	.LVL86:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 829              		.loc 1 374 19 view .LVU176
 830 0192 BCE7     		b	.L27
 831              	.LVL87:
 832              	.L31:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 833              		.loc 1 374 19 view .LVU177
 834              	.LBE13:
 835              	.LBE14:
 388:Core/Src/main.c ****        }
 389:Core/Src/main.c ****     }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****     return mandelbrot_sum;
 836              		.loc 1 391 5 is_stmt 1 view .LVU178
 392:Core/Src/main.c **** }
 837              		.loc 1 392 1 is_stmt 0 view .LVU179
 838 0194 5046     		mov	r0, r10
 839 0196 4946     		mov	r1, r9
 840 0198 15B0     		add	sp, sp, #84
 841              		@ sp needed
 842              	.LVL88:
 843              	.LVL89:
 844              	.LVL90:
 845              	.LVL91:
 846              		.loc 1 392 1 view .LVU180
 847 019a F0BC     		pop	{r4, r5, r6, r7}
 848 019c BB46     		mov	fp, r7
 849 019e B246     		mov	r10, r6
 850 01a0 A946     		mov	r9, r5
 851 01a2 A046     		mov	r8, r4
 852 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 853              	.L33:
 854 01a6 C046     		.align	2
 855              	.L32:
 856 01a8 00000C40 		.word	1074528256
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 24


 857 01ac 0000F03F 		.word	1072693248
 858 01b0 00001040 		.word	1074790400
 859 01b4 00000440 		.word	1074003968
 860              		.cfi_endproc
 861              	.LFE44:
 863              		.section	.text.Error_Handler,"ax",%progbits
 864              		.align	1
 865              		.global	Error_Handler
 866              		.syntax unified
 867              		.code	16
 868              		.thumb_func
 870              	Error_Handler:
 871              	.LFB45:
 393:Core/Src/main.c **** /* USER CODE END 4 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** /**
 396:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 397:Core/Src/main.c ****   * @retval None
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c **** void Error_Handler(void)
 400:Core/Src/main.c **** {
 872              		.loc 1 400 1 is_stmt 1 view -0
 873              		.cfi_startproc
 874              		@ Volatile: function does not return.
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 401:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 402:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 403:Core/Src/main.c ****   __disable_irq();
 878              		.loc 1 403 3 view .LVU182
 879              	.LBB15:
 880              	.LBI15:
 881              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 25


  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 26


  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 27


 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 882              		.loc 2 140 27 view .LVU183
 883              	.LBB16:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 884              		.loc 2 142 3 view .LVU184
 885              		.syntax divided
 886              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 887 0000 72B6     		cpsid i
 888              	@ 0 "" 2
 889              		.thumb
 890              		.syntax unified
 891              	.L35:
 892              	.LBE16:
 893              	.LBE15:
 404:Core/Src/main.c ****   while (1)
 894              		.loc 1 404 3 view .LVU185
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****   }
 895              		.loc 1 406 3 view .LVU186
 404:Core/Src/main.c ****   while (1)
 896              		.loc 1 404 9 view .LVU187
 897 0002 FEE7     		b	.L35
 898              		.cfi_endproc
 899              	.LFE45:
 901              		.section	.text.SystemClock_Config,"ax",%progbits
 902              		.align	1
 903              		.global	SystemClock_Config
 904              		.syntax unified
 905              		.code	16
 906              		.thumb_func
 908              	SystemClock_Config:
 909              	.LFB41:
 188:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 910              		.loc 1 188 1 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 64
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914 0000 00B5     		push	{lr}
 915              	.LCFI8:
 916              		.cfi_def_cfa_offset 4
 917              		.cfi_offset 14, -4
 918 0002 91B0     		sub	sp, sp, #68
 919              	.LCFI9:
 920              		.cfi_def_cfa_offset 72
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 921              		.loc 1 189 3 view .LVU189
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 922              		.loc 1 189 22 is_stmt 0 view .LVU190
 923 0004 3022     		movs	r2, #48
 924 0006 0021     		movs	r1, #0
 925 0008 04A8     		add	r0, sp, #16
 926 000a FFF7FEFF 		bl	memset
 927              	.LVL92:
 190:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 28


 928              		.loc 1 190 3 is_stmt 1 view .LVU191
 190:Core/Src/main.c **** 
 929              		.loc 1 190 22 is_stmt 0 view .LVU192
 930 000e 1022     		movs	r2, #16
 931 0010 0021     		movs	r1, #0
 932 0012 6846     		mov	r0, sp
 933 0014 FFF7FEFF 		bl	memset
 934              	.LVL93:
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 935              		.loc 1 195 3 is_stmt 1 view .LVU193
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 936              		.loc 1 195 36 is_stmt 0 view .LVU194
 937 0018 0223     		movs	r3, #2
 938 001a 0493     		str	r3, [sp, #16]
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 939              		.loc 1 196 3 is_stmt 1 view .LVU195
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 940              		.loc 1 196 30 is_stmt 0 view .LVU196
 941 001c 0122     		movs	r2, #1
 942 001e 0792     		str	r2, [sp, #28]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 943              		.loc 1 197 3 is_stmt 1 view .LVU197
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 944              		.loc 1 197 41 is_stmt 0 view .LVU198
 945 0020 0F32     		adds	r2, r2, #15
 946 0022 0892     		str	r2, [sp, #32]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 947              		.loc 1 198 3 is_stmt 1 view .LVU199
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 948              		.loc 1 198 34 is_stmt 0 view .LVU200
 949 0024 0C93     		str	r3, [sp, #48]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 950              		.loc 1 199 3 is_stmt 1 view .LVU201
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 951              		.loc 1 200 3 view .LVU202
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 952              		.loc 1 200 32 is_stmt 0 view .LVU203
 953 0026 A023     		movs	r3, #160
 954 0028 9B03     		lsls	r3, r3, #14
 955 002a 0E93     		str	r3, [sp, #56]
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 956              		.loc 1 201 3 is_stmt 1 view .LVU204
 202:Core/Src/main.c ****   {
 957              		.loc 1 202 3 view .LVU205
 202:Core/Src/main.c ****   {
 958              		.loc 1 202 7 is_stmt 0 view .LVU206
 959 002c 04A8     		add	r0, sp, #16
 960 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 961              	.LVL94:
 202:Core/Src/main.c ****   {
 962              		.loc 1 202 6 discriminator 1 view .LVU207
 963 0032 0028     		cmp	r0, #0
 964 0034 0ED1     		bne	.L39
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 965              		.loc 1 209 3 is_stmt 1 view .LVU208
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 966              		.loc 1 209 31 is_stmt 0 view .LVU209
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 29


 967 0036 0723     		movs	r3, #7
 968 0038 0093     		str	r3, [sp]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 969              		.loc 1 211 3 is_stmt 1 view .LVU210
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 970              		.loc 1 211 34 is_stmt 0 view .LVU211
 971 003a 053B     		subs	r3, r3, #5
 972 003c 0193     		str	r3, [sp, #4]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 973              		.loc 1 212 3 is_stmt 1 view .LVU212
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 974              		.loc 1 212 35 is_stmt 0 view .LVU213
 975 003e 0023     		movs	r3, #0
 976 0040 0293     		str	r3, [sp, #8]
 213:Core/Src/main.c **** 
 977              		.loc 1 213 3 is_stmt 1 view .LVU214
 213:Core/Src/main.c **** 
 978              		.loc 1 213 36 is_stmt 0 view .LVU215
 979 0042 0393     		str	r3, [sp, #12]
 215:Core/Src/main.c ****   {
 980              		.loc 1 215 3 is_stmt 1 view .LVU216
 215:Core/Src/main.c ****   {
 981              		.loc 1 215 7 is_stmt 0 view .LVU217
 982 0044 0121     		movs	r1, #1
 983 0046 6846     		mov	r0, sp
 984 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 985              	.LVL95:
 215:Core/Src/main.c ****   {
 986              		.loc 1 215 6 discriminator 1 view .LVU218
 987 004c 0028     		cmp	r0, #0
 988 004e 03D1     		bne	.L40
 219:Core/Src/main.c **** 
 989              		.loc 1 219 1 view .LVU219
 990 0050 11B0     		add	sp, sp, #68
 991              		@ sp needed
 992 0052 00BD     		pop	{pc}
 993              	.L39:
 204:Core/Src/main.c ****   }
 994              		.loc 1 204 5 is_stmt 1 view .LVU220
 995 0054 FFF7FEFF 		bl	Error_Handler
 996              	.LVL96:
 997              	.L40:
 217:Core/Src/main.c ****   }
 998              		.loc 1 217 5 view .LVU221
 999 0058 FFF7FEFF 		bl	Error_Handler
 1000              	.LVL97:
 1001              		.cfi_endproc
 1002              	.LFE41:
 1004              		.global	__aeabi_uidiv
 1005              		.section	.text.delay,"ax",%progbits
 1006              		.align	1
 1007              		.global	delay
 1008              		.syntax unified
 1009              		.code	16
 1010              		.thumb_func
 1012              	delay:
 1013              	.LVL98:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 30


 1014              	.LFB46:
 407:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 408:Core/Src/main.c **** }
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** /**
 411:Core/Src/main.c ****  * Basic delay function
 412:Core/Src/main.c ****  */
 413:Core/Src/main.c **** void delay(uint32_t delay_time){
 1015              		.loc 1 413 32 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 8
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		.loc 1 413 32 is_stmt 0 view .LVU223
 1020 0000 00B5     		push	{lr}
 1021              	.LCFI10:
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 14, -4
 1024 0002 83B0     		sub	sp, sp, #12
 1025              	.LCFI11:
 1026              		.cfi_def_cfa_offset 16
 414:Core/Src/main.c **** 	uint32_t i = (delay_time*8000)/8;
 1027              		.loc 1 414 2 is_stmt 1 view .LVU224
 1028              		.loc 1 414 26 is_stmt 0 view .LVU225
 1029 0004 4301     		lsls	r3, r0, #5
 1030 0006 1B1A     		subs	r3, r3, r0
 1031 0008 9B00     		lsls	r3, r3, #2
 1032 000a 1818     		adds	r0, r3, r0
 1033              	.LVL99:
 1034              		.loc 1 414 26 view .LVU226
 1035 000c 8001     		lsls	r0, r0, #6
 1036              	.LVL100:
 415:Core/Src/main.c **** 	uint32_t i_in = i/1000;
 1037              		.loc 1 415 2 is_stmt 1 view .LVU227
 1038              		.loc 1 415 11 is_stmt 0 view .LVU228
 1039 000e FA21     		movs	r1, #250
 1040 0010 4901     		lsls	r1, r1, #5
 1041 0012 FFF7FEFF 		bl	__aeabi_uidiv
 1042              	.LVL101:
 416:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1043              		.loc 1 416 2 is_stmt 1 view .LVU229
 1044              	.LBB17:
 1045              		.loc 1 416 6 view .LVU230
 1046              		.loc 1 416 24 is_stmt 0 view .LVU231
 1047 0016 0023     		movs	r3, #0
 1048 0018 0093     		str	r3, [sp]
 1049              		.loc 1 416 2 view .LVU232
 1050 001a 08E0     		b	.L42
 1051              	.L44:
 1052              	.LBB18:
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** 	  }
 1053              		.loc 1 419 4 is_stmt 1 view .LVU233
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1054              		.loc 1 417 42 discriminator 3 view .LVU234
 1055 001c 019B     		ldr	r3, [sp, #4]
 1056 001e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 31


 1057 0020 0193     		str	r3, [sp, #4]
 1058              	.L43:
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1059              		.loc 1 417 32 discriminator 1 view .LVU235
 1060 0022 019B     		ldr	r3, [sp, #4]
 1061 0024 8342     		cmp	r3, r0
 1062 0026 F9D3     		bcc	.L44
 1063              	.LBE18:
 416:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1064              		.loc 1 416 38 discriminator 2 view .LVU236
 1065 0028 009B     		ldr	r3, [sp]
 1066 002a 0133     		adds	r3, r3, #1
 1067 002c 0093     		str	r3, [sp]
 1068              	.L42:
 416:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1069              		.loc 1 416 30 discriminator 1 view .LVU237
 1070 002e 009A     		ldr	r2, [sp]
 1071 0030 FA23     		movs	r3, #250
 1072 0032 9B00     		lsls	r3, r3, #2
 1073 0034 9A42     		cmp	r2, r3
 1074 0036 02D2     		bcs	.L46
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1075              		.loc 1 417 4 view .LVU238
 1076              	.LBB19:
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1077              		.loc 1 417 8 view .LVU239
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1078              		.loc 1 417 26 is_stmt 0 view .LVU240
 1079 0038 0023     		movs	r3, #0
 1080 003a 0193     		str	r3, [sp, #4]
 417:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1081              		.loc 1 417 4 view .LVU241
 1082 003c F1E7     		b	.L43
 1083              	.L46:
 1084              	.LBE19:
 1085              	.LBE17:
 420:Core/Src/main.c **** 	}
 421:Core/Src/main.c **** }
 1086              		.loc 1 421 1 view .LVU242
 1087 003e 03B0     		add	sp, sp, #12
 1088              		@ sp needed
 1089 0040 00BD     		pop	{pc}
 1090              		.cfi_endproc
 1091              	.LFE46:
 1093              		.section	.text.main,"ax",%progbits
 1094              		.align	1
 1095              		.global	main
 1096              		.syntax unified
 1097              		.code	16
 1098              		.thumb_func
 1100              	main:
 1101              	.LFB40:
  88:Core/Src/main.c **** 
 1102              		.loc 1 88 1 is_stmt 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 8
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 32


 1106 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1107              	.LCFI12:
 1108              		.cfi_def_cfa_offset 20
 1109              		.cfi_offset 4, -20
 1110              		.cfi_offset 5, -16
 1111              		.cfi_offset 6, -12
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 DE46     		mov	lr, fp
 1115 0004 5746     		mov	r7, r10
 1116 0006 4E46     		mov	r6, r9
 1117 0008 4546     		mov	r5, r8
 1118 000a E0B5     		push	{r5, r6, r7, lr}
 1119              	.LCFI13:
 1120              		.cfi_def_cfa_offset 36
 1121              		.cfi_offset 8, -36
 1122              		.cfi_offset 9, -32
 1123              		.cfi_offset 10, -28
 1124              		.cfi_offset 11, -24
 1125 000c 83B0     		sub	sp, sp, #12
 1126              	.LCFI14:
 1127              		.cfi_def_cfa_offset 48
  97:Core/Src/main.c **** 
 1128              		.loc 1 97 3 view .LVU244
 1129 000e FFF7FEFF 		bl	HAL_Init
 1130              	.LVL102:
 104:Core/Src/main.c **** 
 1131              		.loc 1 104 3 view .LVU245
 1132 0012 FFF7FEFF 		bl	SystemClock_Config
 1133              	.LVL103:
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1134              		.loc 1 111 3 view .LVU246
 1135 0016 FFF7FEFF 		bl	MX_GPIO_Init
 1136              	.LVL104:
 119:Core/Src/main.c ****      for(int i=0; i<5; i++){
 1137              		.loc 1 119 6 view .LVU247
 119:Core/Src/main.c ****      for(int i=0; i<5; i++){
 1138              		.loc 1 119 12 is_stmt 0 view .LVU248
 1139 001a 324B     		ldr	r3, .L51
 1140 001c 0022     		movs	r2, #0
 1141 001e 1A60     		str	r2, [r3]
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1142              		.loc 1 120 6 is_stmt 1 view .LVU249
 1143              	.LBB20:
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1144              		.loc 1 120 10 view .LVU250
 1145              	.LVL105:
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1146              		.loc 1 120 14 is_stmt 0 view .LVU251
 1147 0020 0026     		movs	r6, #0
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1148              		.loc 1 120 6 view .LVU252
 1149 0022 58E0     		b	.L48
 1150              	.LVL106:
 1151              	.L49:
 1152              	.LBB21:
 122:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 33


 1153              		.loc 1 122 7 is_stmt 1 view .LVU253
 122:Core/Src/main.c **** 
 1154              		.loc 1 122 18 is_stmt 0 view .LVU254
 1155 0024 304F     		ldr	r7, .L51+4
 1156 0026 0123     		movs	r3, #1
 1157 0028 7B61     		str	r3, [r7, #20]
 125:Core/Src/main.c ****    	  height = imag_dim;
 1158              		.loc 1 125 7 is_stmt 1 view .LVU255
 125:Core/Src/main.c ****    	  height = imag_dim;
 1159              		.loc 1 125 29 is_stmt 0 view .LVU256
 1160 002a 304B     		ldr	r3, .L51+8
 1161 002c B200     		lsls	r2, r6, #2
 1162 002e D358     		ldr	r3, [r2, r3]
 125:Core/Src/main.c ****    	  height = imag_dim;
 1163              		.loc 1 125 16 view .LVU257
 1164 0030 2F4A     		ldr	r2, .L51+12
 1165 0032 9146     		mov	r9, r2
 1166 0034 1360     		str	r3, [r2]
 126:Core/Src/main.c ****    	  width = imag_dim;
 1167              		.loc 1 126 7 is_stmt 1 view .LVU258
 126:Core/Src/main.c ****    	  width = imag_dim;
 1168              		.loc 1 126 14 is_stmt 0 view .LVU259
 1169 0036 2F4A     		ldr	r2, .L51+16
 1170 0038 9346     		mov	fp, r2
 1171 003a 1360     		str	r3, [r2]
 127:Core/Src/main.c **** 
 1172              		.loc 1 127 7 is_stmt 1 view .LVU260
 127:Core/Src/main.c **** 
 1173              		.loc 1 127 13 is_stmt 0 view .LVU261
 1174 003c 2E4A     		ldr	r2, .L51+20
 1175 003e 9046     		mov	r8, r2
 1176 0040 1360     		str	r3, [r2]
 130:Core/Src/main.c ****         //do mandelbrot with double
 1177              		.loc 1 130 7 is_stmt 1 view .LVU262
 130:Core/Src/main.c ****         //do mandelbrot with double
 1178              		.loc 1 130 20 is_stmt 0 view .LVU263
 1179 0042 FFF7FEFF 		bl	HAL_GetTick
 1180              	.LVL107:
 130:Core/Src/main.c ****         //do mandelbrot with double
 1181              		.loc 1 130 18 discriminator 1 view .LVU264
 1182 0046 2D4B     		ldr	r3, .L51+24
 1183 0048 9A46     		mov	r10, r3
 1184 004a 1860     		str	r0, [r3]
 1185 004c 0023     		movs	r3, #0
 1186 004e 5246     		mov	r2, r10
 1187 0050 5360     		str	r3, [r2, #4]
 132:Core/Src/main.c **** 
 1188              		.loc 1 132 9 is_stmt 1 view .LVU265
 132:Core/Src/main.c **** 
 1189              		.loc 1 132 20 is_stmt 0 view .LVU266
 1190 0052 5B46     		mov	r3, fp
 1191 0054 1968     		ldr	r1, [r3]
 1192 0056 4346     		mov	r3, r8
 1193 0058 1868     		ldr	r0, [r3]
 1194 005a 6422     		movs	r2, #100
 1195 005c FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1196              	.LVL108:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 34


 132:Core/Src/main.c **** 
 1197              		.loc 1 132 18 discriminator 1 view .LVU267
 1198 0060 274B     		ldr	r3, .L51+28
 1199 0062 9846     		mov	r8, r3
 1200 0064 1860     		str	r0, [r3]
 1201 0066 5960     		str	r1, [r3, #4]
 135:Core/Src/main.c **** 
 1202              		.loc 1 135 7 is_stmt 1 view .LVU268
 135:Core/Src/main.c **** 
 1203              		.loc 1 135 18 is_stmt 0 view .LVU269
 1204 0068 FFF7FEFF 		bl	HAL_GetTick
 1205              	.LVL109:
 135:Core/Src/main.c **** 
 1206              		.loc 1 135 18 discriminator 1 view .LVU270
 1207 006c 0400     		movs	r4, r0
 1208 006e 0025     		movs	r5, #0
 135:Core/Src/main.c **** 
 1209              		.loc 1 135 16 discriminator 1 view .LVU271
 1210 0070 244B     		ldr	r3, .L51+32
 1211 0072 1C60     		str	r4, [r3]
 1212 0074 5D60     		str	r5, [r3, #4]
 138:Core/Src/main.c **** 
 1213              		.loc 1 138 7 is_stmt 1 view .LVU272
 138:Core/Src/main.c **** 
 1214              		.loc 1 138 31 is_stmt 0 view .LVU273
 1215 0076 5346     		mov	r3, r10
 1216 0078 1A68     		ldr	r2, [r3]
 1217 007a 5B68     		ldr	r3, [r3, #4]
 1218 007c 2900     		movs	r1, r5
 1219 007e 801A     		subs	r0, r0, r2
 1220 0080 9941     		sbcs	r1, r1, r3
 138:Core/Src/main.c **** 
 1221              		.loc 1 138 20 view .LVU274
 1222 0082 214B     		ldr	r3, .L51+36
 1223 0084 0090     		str	r0, [sp]
 1224 0086 0191     		str	r1, [sp, #4]
 1225 0088 1860     		str	r0, [r3]
 1226 008a 5960     		str	r1, [r3, #4]
 140:Core/Src/main.c ****    	  time_elapsed_arr[place] = time_elapsed;
 1227              		.loc 1 140 9 is_stmt 1 view .LVU275
 140:Core/Src/main.c ****    	  time_elapsed_arr[place] = time_elapsed;
 1228              		.loc 1 140 21 is_stmt 0 view .LVU276
 1229 008c 154B     		ldr	r3, .L51
 1230 008e 9C46     		mov	ip, r3
 1231 0090 1B68     		ldr	r3, [r3]
 140:Core/Src/main.c ****    	  time_elapsed_arr[place] = time_elapsed;
 1232              		.loc 1 140 29 view .LVU277
 1233 0092 1E4A     		ldr	r2, .L51+40
 1234 0094 9900     		lsls	r1, r3, #2
 1235 0096 8A46     		mov	r10, r1
 1236 0098 4946     		mov	r1, r9
 1237 009a 0968     		ldr	r1, [r1]
 1238 009c 8946     		mov	r9, r1
 1239 009e 5146     		mov	r1, r10
 1240 00a0 4846     		mov	r0, r9
 1241 00a2 8850     		str	r0, [r1, r2]
 141:Core/Src/main.c ****    	  checksum_arr[place] = checksum;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 35


 1242              		.loc 1 141 7 is_stmt 1 view .LVU278
 141:Core/Src/main.c ****    	  checksum_arr[place] = checksum;
 1243              		.loc 1 141 31 is_stmt 0 view .LVU279
 1244 00a4 1A4A     		ldr	r2, .L51+44
 1245 00a6 D900     		lsls	r1, r3, #3
 1246 00a8 8946     		mov	r9, r1
 1247 00aa 4A44     		add	r2, r2, r9
 1248 00ac 0098     		ldr	r0, [sp]
 1249 00ae 0199     		ldr	r1, [sp, #4]
 1250 00b0 1060     		str	r0, [r2]
 1251 00b2 5160     		str	r1, [r2, #4]
 142:Core/Src/main.c ****         // increment the index for all output arrays
 1252              		.loc 1 142 7 is_stmt 1 view .LVU280
 142:Core/Src/main.c ****         // increment the index for all output arrays
 1253              		.loc 1 142 27 is_stmt 0 view .LVU281
 1254 00b4 174A     		ldr	r2, .L51+48
 1255 00b6 4A44     		add	r2, r2, r9
 1256 00b8 4146     		mov	r1, r8
 1257 00ba 0868     		ldr	r0, [r1]
 1258 00bc 4968     		ldr	r1, [r1, #4]
 1259 00be 1060     		str	r0, [r2]
 1260 00c0 5160     		str	r1, [r2, #4]
 144:Core/Src/main.c **** 
 1261              		.loc 1 144 9 is_stmt 1 view .LVU282
 144:Core/Src/main.c **** 
 1262              		.loc 1 144 14 is_stmt 0 view .LVU283
 1263 00c2 0133     		adds	r3, r3, #1
 1264 00c4 6246     		mov	r2, ip
 1265 00c6 1360     		str	r3, [r2]
 147:Core/Src/main.c **** 
 1266              		.loc 1 147 7 is_stmt 1 view .LVU284
 147:Core/Src/main.c **** 
 1267              		.loc 1 147 18 is_stmt 0 view .LVU285
 1268 00c8 0323     		movs	r3, #3
 1269 00ca 7B61     		str	r3, [r7, #20]
 150:Core/Src/main.c **** 
 1270              		.loc 1 150 7 is_stmt 1 view .LVU286
 1271 00cc FA20     		movs	r0, #250
 1272 00ce 8000     		lsls	r0, r0, #2
 1273 00d0 FFF7FEFF 		bl	delay
 1274              	.LVL110:
 1275              	.LBE21:
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1276              		.loc 1 120 25 discriminator 3 view .LVU287
 1277 00d4 0136     		adds	r6, r6, #1
 1278              	.LVL111:
 1279              	.L48:
 120:Core/Src/main.c ****    	  //TODO: Turn on LED 0 to signify the start of the operation
 1280              		.loc 1 120 20 discriminator 1 view .LVU288
 1281 00d6 042E     		cmp	r6, #4
 1282 00d8 A4DD     		ble	.L49
 1283              	.LBE20:
 155:Core/Src/main.c **** 
 1284              		.loc 1 155 6 view .LVU289
 155:Core/Src/main.c **** 
 1285              		.loc 1 155 17 is_stmt 0 view .LVU290
 1286 00da 034B     		ldr	r3, .L51+4
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 36


 1287 00dc 0022     		movs	r2, #0
 1288 00de 5A61     		str	r2, [r3, #20]
 1289              	.L50:
 159:Core/Src/main.c ****   {
 1290              		.loc 1 159 3 is_stmt 1 view .LVU291
 179:Core/Src/main.c ****   /* USER CODE END 3 */
 1291              		.loc 1 179 3 view .LVU292
 159:Core/Src/main.c ****   {
 1292              		.loc 1 159 9 view .LVU293
 1293 00e0 FEE7     		b	.L50
 1294              	.L52:
 1295 00e2 C046     		.align	2
 1296              	.L51:
 1297 00e4 00000000 		.word	place
 1298 00e8 00040048 		.word	1207960576
 1299 00ec 00000000 		.word	test_values
 1300 00f0 00000000 		.word	imag_dim
 1301 00f4 00000000 		.word	height
 1302 00f8 00000000 		.word	width
 1303 00fc 00000000 		.word	start_time
 1304 0100 00000000 		.word	checksum
 1305 0104 00000000 		.word	end_time
 1306 0108 00000000 		.word	time_elapsed
 1307 010c 00000000 		.word	imag_dim_arr
 1308 0110 00000000 		.word	time_elapsed_arr
 1309 0114 00000000 		.word	checksum_arr
 1310              		.cfi_endproc
 1311              	.LFE40:
 1313              		.global	place
 1314              		.section	.bss.place,"aw",%nobits
 1315              		.align	2
 1318              	place:
 1319 0000 00000000 		.space	4
 1320              		.global	time_elapsed
 1321              		.section	.bss.time_elapsed,"aw",%nobits
 1322              		.align	3
 1325              	time_elapsed:
 1326 0000 00000000 		.space	8
 1326      00000000 
 1327              		.global	end_time
 1328              		.section	.bss.end_time,"aw",%nobits
 1329              		.align	3
 1332              	end_time:
 1333 0000 00000000 		.space	8
 1333      00000000 
 1334              		.global	start_time
 1335              		.section	.bss.start_time,"aw",%nobits
 1336              		.align	3
 1339              	start_time:
 1340 0000 00000000 		.space	8
 1340      00000000 
 1341              		.global	checksum_arr
 1342              		.section	.bss.checksum_arr,"aw",%nobits
 1343              		.align	3
 1346              	checksum_arr:
 1347 0000 00000000 		.space	40
 1347      00000000 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 37


 1347      00000000 
 1347      00000000 
 1347      00000000 
 1348              		.global	time_elapsed_arr
 1349              		.section	.bss.time_elapsed_arr,"aw",%nobits
 1350              		.align	3
 1353              	time_elapsed_arr:
 1354 0000 00000000 		.space	40
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1355              		.global	imag_dim_arr
 1356              		.section	.bss.imag_dim_arr,"aw",%nobits
 1357              		.align	2
 1360              	imag_dim_arr:
 1361 0000 00000000 		.space	20
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1362              		.global	checksum
 1363              		.section	.bss.checksum,"aw",%nobits
 1364              		.align	3
 1367              	checksum:
 1368 0000 00000000 		.space	8
 1368      00000000 
 1369              		.global	imag_dim
 1370              		.section	.bss.imag_dim,"aw",%nobits
 1371              		.align	2
 1374              	imag_dim:
 1375 0000 00000000 		.space	4
 1376              		.global	test_values
 1377              		.section	.data.test_values,"aw"
 1378              		.align	2
 1381              	test_values:
 1382 0000 80000000 		.word	128
 1383 0004 A0000000 		.word	160
 1384 0008 C0000000 		.word	192
 1385 000c E0000000 		.word	224
 1386 0010 00010000 		.word	256
 1387              		.global	width
 1388              		.section	.bss.width,"aw",%nobits
 1389              		.align	2
 1392              	width:
 1393 0000 00000000 		.space	4
 1394              		.global	height
 1395              		.section	.bss.height,"aw",%nobits
 1396              		.align	2
 1399              	height:
 1400 0000 00000000 		.space	4
 1401              		.text
 1402              	.Letext0:
 1403              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1404              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1405              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1406              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 38


 1407              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1408              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1409              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1410              		.file 10 "<built-in>"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:140    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:146    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:483    .text.calculate_mandelbrot_fixed_point_arithmetic:00000188 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:500    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:506    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:856    .text.calculate_mandelbrot_double:000001a8 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:864    .text.Error_Handler:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:870    .text.Error_Handler:00000000 Error_Handler
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:902    .text.SystemClock_Config:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:908    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1006   .text.delay:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1012   .text.delay:00000000 delay
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1094   .text.main:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1100   .text.main:00000000 main
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1297   .text.main:000000e4 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1318   .bss.place:00000000 place
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1381   .data.test_values:00000000 test_values
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1374   .bss.imag_dim:00000000 imag_dim
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1399   .bss.height:00000000 height
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1392   .bss.width:00000000 width
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1339   .bss.start_time:00000000 start_time
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1367   .bss.checksum:00000000 checksum
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1332   .bss.end_time:00000000 end_time
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1325   .bss.time_elapsed:00000000 time_elapsed
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1360   .bss.imag_dim_arr:00000000 imag_dim_arr
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1353   .bss.time_elapsed_arr:00000000 time_elapsed_arr
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1346   .bss.checksum_arr:00000000 checksum_arr
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1315   .bss.place:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1322   .bss.time_elapsed:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1329   .bss.end_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1336   .bss.start_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1343   .bss.checksum_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1350   .bss.time_elapsed_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1357   .bss.imag_dim_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1364   .bss.checksum:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1371   .bss.imag_dim:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1378   .data.test_values:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1389   .bss.width:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s:1396   .bss.height:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_idiv
__aeabi_lmul
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccrkvO8q.s 			page 40


__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_ul2d
__aeabi_d2ulz
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_uidiv
HAL_Init
HAL_GetTick
