ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define variables you think you might need
  46:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** #define MAX_ITER 100
  50:Core/Src/main.c **** int height;
  51:Core/Src/main.c **** int width;
  52:Core/Src/main.c **** int test_values[5] = {128, 160, 192, 224, 256};
  53:Core/Src/main.c **** int imag_dim;
  54:Core/Src/main.c **** uint64_t checksum;
  55:Core/Src/main.c **** int imag_dim_arr[5];
  56:Core/Src/main.c **** uint64_t time_elapsed_arr[5];
  57:Core/Src/main.c **** uint64_t checksum_arr[5];
  58:Core/Src/main.c **** uint64_t start_time;
  59:Core/Src/main.c **** uint64_t end_time;
  60:Core/Src/main.c **** uint64_t time_elapsed;
  61:Core/Src/main.c **** int place=0;
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** static void MX_GPIO_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  69:Core/Src/main.c **** // function declarations
  70:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  71:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /**
  81:Core/Src/main.c ****   * @brief  The application entry point.
  82:Core/Src/main.c ****   * @retval int
  83:Core/Src/main.c ****   */
  84:Core/Src/main.c **** int main(void)
  85:Core/Src/main.c **** {
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END 1 */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 3


  91:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Core/Src/main.c ****   HAL_Init();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END Init */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Configure the system clock */
 101:Core/Src/main.c ****   SystemClock_Config();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Initialize all configured peripherals */
 108:Core/Src/main.c ****   MX_GPIO_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   // loop to make testing easier
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //loop for double mandelbrot
 114:Core/Src/main.c ****    place = 0;
 115:Core/Src/main.c ****    for(int i=0; i<5; i++){
 116:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 117:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000001;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****  	  // set height and width
 120:Core/Src/main.c ****  	  imag_dim = test_values[i];
 121:Core/Src/main.c ****  	  height = imag_dim;
 122:Core/Src/main.c ****  	  width = imag_dim;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****       //TODO: Record the start time
 125:Core/Src/main.c ****  	  start_time = HAL_GetTick();
 126:Core/Src/main.c ****       //do mandelbrot with double
 127:Core/Src/main.c ****       checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, MAX_ITER);
 128:Core/Src/main.c ****  		 
 129:Core/Src/main.c ****       //TODO: Record the end time
 130:Core/Src/main.c ****  	  end_time = HAL_GetTick();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****       //TODO: Calculate the execution time
 133:Core/Src/main.c ****  	  time_elapsed = end_time - start_time;
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****       imag_dim_arr[place] = imag_dim;
 136:Core/Src/main.c ****  	  time_elapsed_arr[place] = time_elapsed;
 137:Core/Src/main.c ****  	  checksum_arr[place] = checksum;
 138:Core/Src/main.c ****       // increment the index for all output arrays
 139:Core/Src/main.c ****       place+=1;
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****       //TODO: Turn on LED 1 to signify the end of the operation
 142:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000011;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****  	  //TODO: Hold the LEDs on for a 1s delay
 145:Core/Src/main.c ****  	  delay(1000);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****    }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****    //TODO: Turn off the LEDs
 150:Core/Src/main.c ****    GPIOB->ODR = 0b00000000;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Infinite loop */
 153:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 154:Core/Src/main.c ****   while (1)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE END 3 */
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief System Clock Configuration
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void SystemClock_Config(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 182:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 187:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 190:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief GPIO Initialization Function
 223:Core/Src/main.c ****   * @param None
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** static void MX_GPIO_Init(void)
 227:Core/Src/main.c **** {
  26              		.loc 1 227 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 228:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 228 3 view .LVU1
  40              		.loc 1 228 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 229:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 234:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 234 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 234 3 view .LVU4
  50 0010 0094     		str	r4, [sp]
  51              		.loc 1 234 3 view .LVU5
  52 0012 184B     		ldr	r3, .L3
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 6


  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 234 3 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0092     		str	r2, [sp]
  60              		.loc 1 234 3 view .LVU7
  61 0024 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 234 3 view .LVU8
 235:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 235 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 235 3 view .LVU10
  67 0026 0194     		str	r4, [sp, #4]
  68              		.loc 1 235 3 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 235 3 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0192     		str	r2, [sp, #4]
  76              		.loc 1 235 3 view .LVU13
  77 0038 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 235 3 view .LVU14
 236:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 236 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 236 3 view .LVU16
  83 003a 0294     		str	r4, [sp, #8]
  84              		.loc 1 236 3 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00202 		orr	r2, r2, #2
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 236 3 view .LVU18
  89 0044 1B6B     		ldr	r3, [r3, #48]
  90 0046 03F00203 		and	r3, r3, #2
  91 004a 0293     		str	r3, [sp, #8]
  92              		.loc 1 236 3 view .LVU19
  93 004c 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 236 3 view .LVU20
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  96              		.loc 1 239 3 view .LVU21
  97 004e 0A4D     		ldr	r5, .L3+4
  98 0050 2246     		mov	r2, r4
  99 0052 FF21     		movs	r1, #255
 100 0054 2846     		mov	r0, r5
 101 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 240:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 241:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 7


 242:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 243:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 103              		.loc 1 244 3 view .LVU22
 104              		.loc 1 244 23 is_stmt 0 view .LVU23
 105 005a FF23     		movs	r3, #255
 106 005c 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 246 3 is_stmt 1 view .LVU24
 108              		.loc 1 246 24 is_stmt 0 view .LVU25
 109 005e 0123     		movs	r3, #1
 110 0060 0493     		str	r3, [sp, #16]
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 247 3 is_stmt 1 view .LVU26
 112              		.loc 1 247 24 is_stmt 0 view .LVU27
 113 0062 0594     		str	r4, [sp, #20]
 248:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 248 3 is_stmt 1 view .LVU28
 115              		.loc 1 248 25 is_stmt 0 view .LVU29
 116 0064 0694     		str	r4, [sp, #24]
 249:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 117              		.loc 1 249 3 is_stmt 1 view .LVU30
 118 0066 03A9     		add	r1, sp, #12
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 254:Core/Src/main.c **** }
 122              		.loc 1 254 1 is_stmt 0 view .LVU31
 123 006e 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 0070 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129 0072 00BF     		.align	2
 130              	.L3:
 131 0074 00380240 		.word	1073887232
 132 0078 00040240 		.word	1073873920
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.global	__aeabi_ldivmod
 137              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 138              		.align	1
 139              		.global	calculate_mandelbrot_fixed_point_arithmetic
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	calculate_mandelbrot_fixed_point_arithmetic:
 145              	.LVL2:
 146              	.LFB137:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 8


 257:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 258:Core/Src/main.c **** /*
 259:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using scale factor of 1
 260:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 261:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 262:Core/Src/main.c ****   //TODO: Complete the function implementation
 263:Core/Src/main.c ****   int64_t x_0;
 264:Core/Src/main.c ****   int64_t y_0;
 265:Core/Src/main.c ****   int64_t x_i;
 266:Core/Src/main.c ****   int64_t y_i;
 267:Core/Src/main.c ****   int64_t iteration;
 268:Core/Src/main.c ****   int64_t temp;
 269:Core/Src/main.c ****   int64_t h_adj = 2000000/height;
 270:Core/Src/main.c ****   int64_t w_adj = 3500000/width;
 271:Core/Src/main.c ****   for(int y=0; y<height; y++){
 272:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 273:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 274:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 275:Core/Src/main.c **** 		  x_i = 0;
 276:Core/Src/main.c **** 		  y_i = 0;
 277:Core/Src/main.c **** 		  iteration = 0;
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000000) <= 4000000)){
 280:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 281:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000000) + y_0;
 282:Core/Src/main.c **** 			  x_i = temp;
 283:Core/Src/main.c **** 			  iteration += 1;
 284:Core/Src/main.c **** 		  }
 285:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 286:Core/Src/main.c **** 	  }
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   return mandelbrot_sum;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }*/
 292:Core/Src/main.c **** /*
 293:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using scale factor of 1
 294:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 295:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 296:Core/Src/main.c ****   //TODO: Complete the function implementation
 297:Core/Src/main.c ****   int64_t x_0;
 298:Core/Src/main.c ****   int64_t y_0;
 299:Core/Src/main.c ****   int64_t x_i;
 300:Core/Src/main.c ****   int64_t y_i;
 301:Core/Src/main.c ****   int64_t iteration;
 302:Core/Src/main.c ****   int64_t temp;
 303:Core/Src/main.c ****   int64_t h_adj = 20000/height;
 304:Core/Src/main.c ****   int64_t w_adj = 35000/width;
 305:Core/Src/main.c ****   for(int y=0; y<height; y++){
 306:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 307:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (25000);
 308:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (10000);
 309:Core/Src/main.c **** 		  x_i = 0;
 310:Core/Src/main.c **** 		  y_i = 0;
 311:Core/Src/main.c **** 		  iteration = 0;
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/10000) <= 40000)){
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 9


 314:Core/Src/main.c **** 			  temp = ((x_i*x_i)/10000)-((y_i*y_i)/10000) + (x_0);
 315:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/10000) + y_0;
 316:Core/Src/main.c **** 			  x_i = temp;
 317:Core/Src/main.c **** 			  iteration += 1;
 318:Core/Src/main.c **** 		  }
 319:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 320:Core/Src/main.c **** 	  }
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   return mandelbrot_sum;
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** }*/
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic using 10^3 scale factor
 328:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 147              		.loc 1 328 96 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 80
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 328 96 is_stmt 0 view .LVU33
 152 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 36
 155              		.cfi_offset 4, -36
 156              		.cfi_offset 5, -32
 157              		.cfi_offset 6, -28
 158              		.cfi_offset 7, -24
 159              		.cfi_offset 8, -20
 160              		.cfi_offset 9, -16
 161              		.cfi_offset 10, -12
 162              		.cfi_offset 11, -8
 163              		.cfi_offset 14, -4
 164 0004 95B0     		sub	sp, sp, #84
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 120
 167 0006 0C90     		str	r0, [sp, #48]
 168 0008 0C46     		mov	r4, r1
 169 000a 0392     		str	r2, [sp, #12]
 329:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 170              		.loc 1 329 3 is_stmt 1 view .LVU34
 171              	.LVL3:
 330:Core/Src/main.c ****   //TODO: Complete the function implementation
 331:Core/Src/main.c ****   int64_t x_0;
 172              		.loc 1 331 3 view .LVU35
 332:Core/Src/main.c ****   int64_t y_0;
 173              		.loc 1 332 3 view .LVU36
 333:Core/Src/main.c ****   int64_t x_i;
 174              		.loc 1 333 3 view .LVU37
 334:Core/Src/main.c ****   int64_t y_i;
 175              		.loc 1 334 3 view .LVU38
 335:Core/Src/main.c ****   int64_t iteration;
 176              		.loc 1 335 3 view .LVU39
 336:Core/Src/main.c ****   int64_t temp;
 177              		.loc 1 336 3 view .LVU40
 337:Core/Src/main.c ****   int64_t h_adj = 2000/height;
 178              		.loc 1 337 3 view .LVU41
 179              		.loc 1 337 23 is_stmt 0 view .LVU42
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 10


 180 000c 4FF4FA63 		mov	r3, #2000
 181 0010 93FBF1F2 		sdiv	r2, r3, r1
 182              	.LVL4:
 183              		.loc 1 337 11 view .LVU43
 184 0014 D317     		asrs	r3, r2, #31
 185 0016 0D93     		str	r3, [sp, #52]
 186 0018 0F92     		str	r2, [sp, #60]
 187              	.LVL5:
 338:Core/Src/main.c ****   int64_t w_adj = 3500/width;
 188              		.loc 1 338 3 is_stmt 1 view .LVU44
 189              		.loc 1 338 23 is_stmt 0 view .LVU45
 190 001a 40F6AC53 		movw	r3, #3500
 191              	.LVL6:
 192              		.loc 1 338 23 view .LVU46
 193 001e 93FBF0F1 		sdiv	r1, r3, r0
 194              	.LVL7:
 195              		.loc 1 338 11 view .LVU47
 196 0022 CB17     		asrs	r3, r1, #31
 197 0024 0E93     		str	r3, [sp, #56]
 198 0026 1091     		str	r1, [sp, #64]
 199              	.LVL8:
 339:Core/Src/main.c ****   for(int y=0; y<height; y++){
 200              		.loc 1 339 3 is_stmt 1 view .LVU48
 201              	.LBB7:
 202              		.loc 1 339 7 view .LVU49
 203              		.loc 1 339 11 is_stmt 0 view .LVU50
 204 0028 0023     		movs	r3, #0
 205              	.LVL9:
 206              		.loc 1 339 11 view .LVU51
 207              	.LBE7:
 329:Core/Src/main.c ****   //TODO: Complete the function implementation
 208              		.loc 1 329 12 view .LVU52
 209 002a 0893     		str	r3, [sp, #32]
 210 002c 9C46     		mov	ip, r3
 211 002e 1192     		str	r2, [sp, #68]
 212 0030 1291     		str	r1, [sp, #72]
 213 0032 1394     		str	r4, [sp, #76]
 214              	.LBB10:
 215              		.loc 1 339 3 view .LVU53
 216 0034 8EE0     		b	.L6
 217              	.LVL10:
 218              	.L9:
 219              	.LBB8:
 340:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 341:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 342:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 343:Core/Src/main.c **** 		  x_i = 0;
 344:Core/Src/main.c **** 		  y_i = 0;
 345:Core/Src/main.c **** 		  iteration = 0;
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000) <= 4000)){
 348:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 220              		.loc 1 348 6 is_stmt 1 view .LVU54
 221              		.loc 1 348 23 is_stmt 0 view .LVU55
 222 0036 4FF47A72 		mov	r2, #1000
 223 003a 0023     		movs	r3, #0
 224 003c FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 11


 225              	.LVL11:
 226 0040 8846     		mov	r8, r1
 227 0042 0746     		mov	r7, r0
 228              		.loc 1 348 40 view .LVU56
 229 0044 4A4A     		ldr	r2, .L16
 230 0046 4FF0FF33 		mov	r3, #-1
 231 004a 5846     		mov	r0, fp
 232 004c 4946     		mov	r1, r9
 233 004e FFF7FEFF 		bl	__aeabi_ldivmod
 234              	.LVL12:
 235              		.loc 1 348 29 view .LVU57
 236 0052 3F18     		adds	r7, r7, r0
 237 0054 48EB0108 		adc	r8, r8, r1
 238              		.loc 1 348 11 view .LVU58
 239 0058 049B     		ldr	r3, [sp, #16]
 240 005a FF18     		adds	r7, r7, r3
 241 005c 059B     		ldr	r3, [sp, #20]
 242 005e 48EB0308 		adc	r8, r8, r3
 243              	.LVL13:
 349:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000) + y_0;
 244              		.loc 1 349 6 is_stmt 1 view .LVU59
 245              		.loc 1 349 19 is_stmt 0 view .LVU60
 246 0062 06FB0AFA 		mul	r10, r6, r10
 247              	.LVL14:
 248              		.loc 1 349 19 view .LVU61
 249 0066 029B     		ldr	r3, [sp, #8]
 250 0068 04FB03AA 		mla	r10, r4, r3, r10
 251 006c A6FB0401 		umull	r0, r1, r6, r4
 252              		.loc 1 349 24 view .LVU62
 253 0070 4FF4FA72 		mov	r2, #500
 254 0074 0023     		movs	r3, #0
 255 0076 5144     		add	r1, r1, r10
 256 0078 FFF7FEFF 		bl	__aeabi_ldivmod
 257              	.LVL15:
 258              		.loc 1 349 10 view .LVU63
 259 007c 069B     		ldr	r3, [sp, #24]
 260 007e 1C18     		adds	r4, r3, r0
 261              		.loc 1 349 10 view .LVU64
 262 0080 079B     		ldr	r3, [sp, #28]
 263 0082 43EB010A 		adc	r10, r3, r1
 264              	.LVL16:
 350:Core/Src/main.c **** 			  x_i = temp;
 265              		.loc 1 350 6 is_stmt 1 view .LVU65
 351:Core/Src/main.c **** 			  iteration += 1;
 266              		.loc 1 351 6 view .LVU66
 267              		.loc 1 351 16 is_stmt 0 view .LVU67
 268 0086 019B     		ldr	r3, [sp, #4]
 269 0088 0133     		adds	r3, r3, #1
 270 008a 0193     		str	r3, [sp, #4]
 271              	.LVL17:
 272              		.loc 1 351 16 view .LVU68
 273 008c 45F10005 		adc	r5, r5, #0
 274              	.LVL18:
 350:Core/Src/main.c **** 			  x_i = temp;
 275              		.loc 1 350 10 view .LVU69
 276 0090 3E46     		mov	r6, r7
 277 0092 CDF80880 		str	r8, [sp, #8]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 12


 278              	.LVL19:
 279              	.L7:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 280              		.loc 1 347 40 is_stmt 1 view .LVU70
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 281              		.loc 1 347 22 is_stmt 0 view .LVU71
 282 0096 039A     		ldr	r2, [sp, #12]
 283 0098 D317     		asrs	r3, r2, #31
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 284              		.loc 1 347 40 view .LVU72
 285 009a 0199     		ldr	r1, [sp, #4]
 286 009c 9142     		cmp	r1, r2
 287 009e 75EB0303 		sbcs	r3, r5, r3
 288 00a2 16DA     		bge	.L8
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 289              		.loc 1 347 49 discriminator 1 view .LVU73
 290 00a4 029B     		ldr	r3, [sp, #8]
 291 00a6 06FB03F3 		mul	r3, r6, r3
 292 00aa A6FB0601 		umull	r0, r1, r6, r6
 293 00ae 01EB4301 		add	r1, r1, r3, lsl #1
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 294              		.loc 1 347 57 discriminator 1 view .LVU74
 295 00b2 04FB0AF3 		mul	r3, r4, r10
 296 00b6 A4FB04B9 		umull	fp, r9, r4, r4
 297 00ba 09EB4309 		add	r9, r9, r3, lsl #1
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 298              		.loc 1 347 53 discriminator 1 view .LVU75
 299 00be 10EB0B03 		adds	r3, r0, fp
 300 00c2 41EB0902 		adc	r2, r1, r9
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 301              		.loc 1 347 40 discriminator 1 view .LVU76
 302 00c6 2B4F     		ldr	r7, .L16+4
 303 00c8 9F42     		cmp	r7, r3
 304 00ca 4FF00003 		mov	r3, #0
 305 00ce 9341     		sbcs	r3, r3, r2
 306 00d0 B1DA     		bge	.L9
 307              	.L8:
 352:Core/Src/main.c **** 		  }
 353:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 308              		.loc 1 353 20 view .LVU77
 309 00d2 DDF824B0 		ldr	fp, [sp, #36]
 310 00d6 0A98     		ldr	r0, [sp, #40]
 311 00d8 DDF82CC0 		ldr	ip, [sp, #44]
 312              		.loc 1 353 5 is_stmt 1 view .LVU78
 313              		.loc 1 353 20 is_stmt 0 view .LVU79
 314 00dc 019B     		ldr	r3, [sp, #4]
 315 00de 089A     		ldr	r2, [sp, #32]
 316 00e0 9B18     		adds	r3, r3, r2
 317 00e2 0893     		str	r3, [sp, #32]
 318              	.LVL20:
 319              		.loc 1 353 20 view .LVU80
 320 00e4 45EB0C0C 		adc	ip, r5, ip
 321              	.LVL21:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 322              		.loc 1 340 27 is_stmt 1 discriminator 2 view .LVU81
 323 00e8 0130     		adds	r0, r0, #1
 324              	.LVL22:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 13


 325              	.L11:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 326              		.loc 1 340 18 discriminator 1 view .LVU82
 327 00ea 0C9B     		ldr	r3, [sp, #48]
 328 00ec 9842     		cmp	r0, r3
 329 00ee 2FDA     		bge	.L14
 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 330              		.loc 1 341 5 view .LVU83
 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 331              		.loc 1 341 13 is_stmt 0 view .LVU84
 332 00f0 C317     		asrs	r3, r0, #31
 333 00f2 0E9A     		ldr	r2, [sp, #56]
 334 00f4 00FB02F2 		mul	r2, r0, r2
 335 00f8 1299     		ldr	r1, [sp, #72]
 336 00fa 01FB0322 		mla	r2, r1, r3, r2
 337 00fe 109B     		ldr	r3, [sp, #64]
 338 0100 A0FB0313 		umull	r1, r3, r0, r3
 339 0104 1A44     		add	r2, r2, r3
 341:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000);
 340              		.loc 1 341 9 view .LVU85
 341 0106 1C4B     		ldr	r3, .L16+8
 342 0108 CB18     		adds	r3, r1, r3
 343 010a 0493     		str	r3, [sp, #16]
 344 010c 62F10003 		sbc	r3, r2, #0
 345 0110 0593     		str	r3, [sp, #20]
 346              	.LVL23:
 342:Core/Src/main.c **** 		  x_i = 0;
 347              		.loc 1 342 5 is_stmt 1 view .LVU86
 342:Core/Src/main.c **** 		  x_i = 0;
 348              		.loc 1 342 13 is_stmt 0 view .LVU87
 349 0112 4FEAEB72 		asr	r2, fp, #31
 350 0116 0D9B     		ldr	r3, [sp, #52]
 351              	.LVL24:
 342:Core/Src/main.c **** 		  x_i = 0;
 352              		.loc 1 342 13 view .LVU88
 353 0118 0BFB03F3 		mul	r3, fp, r3
 354 011c 1199     		ldr	r1, [sp, #68]
 355 011e 01FB0233 		mla	r3, r1, r2, r3
 356 0122 0F9A     		ldr	r2, [sp, #60]
 357 0124 ABFB0221 		umull	r2, r1, fp, r2
 358 0128 0B44     		add	r3, r3, r1
 342:Core/Src/main.c **** 		  x_i = 0;
 359              		.loc 1 342 9 view .LVU89
 360 012a B2F57A72 		subs	r2, r2, #1000
 361 012e 0692     		str	r2, [sp, #24]
 362 0130 43F1FF33 		adc	r3, r3, #-1
 363 0134 0793     		str	r3, [sp, #28]
 364              	.LVL25:
 343:Core/Src/main.c **** 		  y_i = 0;
 365              		.loc 1 343 5 is_stmt 1 view .LVU90
 344:Core/Src/main.c **** 		  iteration = 0;
 366              		.loc 1 344 5 view .LVU91
 345:Core/Src/main.c **** 
 367              		.loc 1 345 5 view .LVU92
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 368              		.loc 1 347 5 view .LVU93
 345:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 14


 369              		.loc 1 345 15 is_stmt 0 view .LVU94
 370 0136 0023     		movs	r3, #0
 371              	.LVL26:
 345:Core/Src/main.c **** 
 372              		.loc 1 345 15 view .LVU95
 373 0138 0193     		str	r3, [sp, #4]
 374 013a 1D46     		mov	r5, r3
 344:Core/Src/main.c **** 		  iteration = 0;
 375              		.loc 1 344 9 view .LVU96
 376 013c 1C46     		mov	r4, r3
 377 013e 9A46     		mov	r10, r3
 343:Core/Src/main.c **** 		  y_i = 0;
 378              		.loc 1 343 9 view .LVU97
 379 0140 1E46     		mov	r6, r3
 380 0142 CDF824B0 		str	fp, [sp, #36]
 381 0146 0A90     		str	r0, [sp, #40]
 382 0148 0293     		str	r3, [sp, #8]
 383 014a CDF82CC0 		str	ip, [sp, #44]
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 384              		.loc 1 347 10 view .LVU98
 385 014e A2E7     		b	.L7
 386              	.LVL27:
 387              	.L14:
 347:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000)-((y_i*y_i)/1000) + (x_0);
 388              		.loc 1 347 10 view .LVU99
 389              	.LBE8:
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 390              		.loc 1 339 27 discriminator 2 view .LVU100
 391 0150 5B46     		mov	r3, fp
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 392              		.loc 1 339 27 is_stmt 1 discriminator 2 view .LVU101
 393 0152 0133     		adds	r3, r3, #1
 394              	.LVL28:
 395              	.L6:
 339:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 396              		.loc 1 339 17 discriminator 1 view .LVU102
 397 0154 139A     		ldr	r2, [sp, #76]
 398 0156 9342     		cmp	r3, r2
 399 0158 04DA     		bge	.L15
 400              	.LBB9:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 401              		.loc 1 340 12 is_stmt 0 view .LVU103
 402 015a 4FF00009 		mov	r9, #0
 403 015e 9B46     		mov	fp, r3
 404 0160 4846     		mov	r0, r9
 405 0162 C2E7     		b	.L11
 406              	.L15:
 340:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500);
 407              		.loc 1 340 12 view .LVU104
 408              	.LBE9:
 409              	.LBE10:
 354:Core/Src/main.c **** 	  }
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   return mandelbrot_sum;
 410              		.loc 1 356 3 is_stmt 1 view .LVU105
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 15


 359:Core/Src/main.c **** }
 411              		.loc 1 359 1 is_stmt 0 view .LVU106
 412 0164 0898     		ldr	r0, [sp, #32]
 413 0166 6146     		mov	r1, ip
 414 0168 15B0     		add	sp, sp, #84
 415              	.LCFI5:
 416              		.cfi_def_cfa_offset 36
 417              		@ sp needed
 418 016a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 419              	.LVL29:
 420              	.L17:
 421              		.loc 1 359 1 view .LVU107
 422 016e 00BF     		.align	2
 423              	.L16:
 424 0170 18FCFFFF 		.word	-1000
 425 0174 E70C3D00 		.word	4000999
 426 0178 3CF6FFFF 		.word	-2500
 427              		.cfi_endproc
 428              	.LFE137:
 430              		.global	__aeabi_i2d
 431              		.global	__aeabi_ddiv
 432              		.global	__aeabi_dmul
 433              		.global	__aeabi_dsub
 434              		.global	__aeabi_dadd
 435              		.global	__aeabi_dcmpgt
 436              		.global	__aeabi_dcmple
 437              		.global	__aeabi_ul2d
 438              		.global	__aeabi_d2ulz
 439              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 440              		.align	1
 441              		.global	calculate_mandelbrot_double
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 446              	calculate_mandelbrot_double:
 447              	.LVL30:
 448              	.LFB138:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 362:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 449              		.loc 1 362 80 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 80
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		.loc 1 362 80 is_stmt 0 view .LVU109
 454 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 455              	.LCFI6:
 456              		.cfi_def_cfa_offset 36
 457              		.cfi_offset 4, -36
 458              		.cfi_offset 5, -32
 459              		.cfi_offset 6, -28
 460              		.cfi_offset 7, -24
 461              		.cfi_offset 8, -20
 462              		.cfi_offset 9, -16
 463              		.cfi_offset 10, -12
 464              		.cfi_offset 11, -8
 465              		.cfi_offset 14, -4
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 16


 466 0004 95B0     		sub	sp, sp, #84
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 120
 469 0006 0D46     		mov	r5, r1
 470 0008 0892     		str	r2, [sp, #32]
 363:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 471              		.loc 1 363 5 is_stmt 1 view .LVU110
 472              	.LVL31:
 364:Core/Src/main.c ****     //TODO: Complete the function implementation
 365:Core/Src/main.c ****     double x_0;
 473              		.loc 1 365 5 view .LVU111
 366:Core/Src/main.c ****     double y_0;
 474              		.loc 1 366 5 view .LVU112
 367:Core/Src/main.c ****     double x_i;
 475              		.loc 1 367 5 view .LVU113
 368:Core/Src/main.c ****     double y_i;
 476              		.loc 1 368 5 view .LVU114
 369:Core/Src/main.c ****     double iteration;
 477              		.loc 1 369 5 view .LVU115
 370:Core/Src/main.c ****     double temp;
 478              		.loc 1 370 5 view .LVU116
 371:Core/Src/main.c ****     double w_adj=3.5/width;
 479              		.loc 1 371 5 view .LVU117
 480              		.loc 1 371 21 is_stmt 0 view .LVU118
 481 000a FFF7FEFF 		bl	__aeabi_i2d
 482              	.LVL32:
 483              		.loc 1 371 21 view .LVU119
 484 000e 0646     		mov	r6, r0
 485 0010 0F46     		mov	r7, r1
 486 0012 CDE90C67 		strd	r6, [sp, #48]
 487              		.loc 1 371 12 view .LVU120
 488 0016 0246     		mov	r2, r0
 489 0018 0B46     		mov	r3, r1
 490 001a 0020     		movs	r0, #0
 491 001c 5B49     		ldr	r1, .L31
 492 001e FFF7FEFF 		bl	__aeabi_ddiv
 493              	.LVL33:
 494 0022 CDE90E01 		strd	r0, [sp, #56]
 495              	.LVL34:
 372:Core/Src/main.c ****     double h_adj=2.0/width;
 496              		.loc 1 372 5 is_stmt 1 view .LVU121
 497              		.loc 1 372 12 is_stmt 0 view .LVU122
 498 0026 3246     		mov	r2, r6
 499 0028 3B46     		mov	r3, r7
 500 002a 0020     		movs	r0, #0
 501              	.LVL35:
 502              		.loc 1 372 12 view .LVU123
 503 002c 4FF08041 		mov	r1, #1073741824
 504 0030 FFF7FEFF 		bl	__aeabi_ddiv
 505              	.LVL36:
 506 0034 CDE91001 		strd	r0, [sp, #64]
 507              	.LVL37:
 373:Core/Src/main.c ****     for(double y=0; y<height; y++){
 508              		.loc 1 373 5 is_stmt 1 view .LVU124
 509              	.LBB11:
 510              		.loc 1 373 9 view .LVU125
 511              		.loc 1 373 16 is_stmt 0 view .LVU126
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 17


 512 0038 0023     		movs	r3, #0
 513 003a 0024     		movs	r4, #0
 514 003c CDE90A34 		strd	r3, [sp, #40]
 515              	.LBE11:
 363:Core/Src/main.c ****     //TODO: Complete the function implementation
 516              		.loc 1 363 14 view .LVU127
 517 0040 0023     		movs	r3, #0
 518 0042 0993     		str	r3, [sp, #36]
 519 0044 1293     		str	r3, [sp, #72]
 520 0046 1395     		str	r5, [sp, #76]
 521              	.LBB14:
 522              		.loc 1 373 5 view .LVU128
 523 0048 8DE0     		b	.L19
 524              	.LVL38:
 525              	.L23:
 526              	.LBB12:
 374:Core/Src/main.c ****        for(double x=0; x<width; x++){
 375:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 376:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 377:Core/Src/main.c ****     	  x_i = 0;
 378:Core/Src/main.c ****     	  y_i = 0;
 379:Core/Src/main.c ****           iteration = 0;
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 382:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 527              		.loc 1 382 7 is_stmt 1 view .LVU129
 528              		.loc 1 382 23 is_stmt 0 view .LVU130
 529 004a 3246     		mov	r2, r6
 530 004c 3B46     		mov	r3, r7
 531 004e DDE90001 		ldrd	r0, [sp]
 532 0052 FFF7FEFF 		bl	__aeabi_dsub
 533              	.LVL39:
 534              		.loc 1 382 12 view .LVU131
 535 0056 DDE90223 		ldrd	r2, [sp, #8]
 536 005a FFF7FEFF 		bl	__aeabi_dadd
 537              	.LVL40:
 538 005e 0646     		mov	r6, r0
 539 0060 0F46     		mov	r7, r1
 540              	.LVL41:
 383:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 541              		.loc 1 383 7 is_stmt 1 view .LVU132
 542              		.loc 1 383 15 is_stmt 0 view .LVU133
 543 0062 2246     		mov	r2, r4
 544 0064 2B46     		mov	r3, r5
 545 0066 2046     		mov	r0, r4
 546 0068 2946     		mov	r1, r5
 547 006a FFF7FEFF 		bl	__aeabi_dadd
 548              	.LVL42:
 549              		.loc 1 383 19 view .LVU134
 550 006e 5246     		mov	r2, r10
 551 0070 5B46     		mov	r3, fp
 552 0072 FFF7FEFF 		bl	__aeabi_dmul
 553              	.LVL43:
 554              		.loc 1 383 11 view .LVU135
 555 0076 DDE90423 		ldrd	r2, [sp, #16]
 556 007a FFF7FEFF 		bl	__aeabi_dadd
 557              	.LVL44:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 18


 558 007e 8246     		mov	r10, r0
 559              	.LVL45:
 560              		.loc 1 383 11 view .LVU136
 561 0080 8B46     		mov	fp, r1
 562              	.LVL46:
 384:Core/Src/main.c ****     		x_i = temp;
 563              		.loc 1 384 7 is_stmt 1 view .LVU137
 385:Core/Src/main.c ****     		iteration += 1;
 564              		.loc 1 385 7 view .LVU138
 565              		.loc 1 385 17 is_stmt 0 view .LVU139
 566 0082 0022     		movs	r2, #0
 567 0084 424B     		ldr	r3, .L31+4
 568 0086 4046     		mov	r0, r8
 569 0088 4946     		mov	r1, r9
 570 008a FFF7FEFF 		bl	__aeabi_dadd
 571              	.LVL47:
 572 008e 8046     		mov	r8, r0
 573              	.LVL48:
 574              		.loc 1 385 17 view .LVU140
 575 0090 8946     		mov	r9, r1
 576              	.LVL49:
 384:Core/Src/main.c ****     		x_i = temp;
 577              		.loc 1 384 11 view .LVU141
 578 0092 3446     		mov	r4, r6
 579 0094 3D46     		mov	r5, r7
 580              	.LVL50:
 581              	.L20:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 582              		.loc 1 381 43 is_stmt 1 view .LVU142
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 583              		.loc 1 381 25 is_stmt 0 view .LVU143
 584 0096 0898     		ldr	r0, [sp, #32]
 585 0098 FFF7FEFF 		bl	__aeabi_i2d
 586              	.LVL51:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 587              		.loc 1 381 43 view .LVU144
 588 009c 4246     		mov	r2, r8
 589 009e 4B46     		mov	r3, r9
 590 00a0 FFF7FEFF 		bl	__aeabi_dcmpgt
 591              	.LVL52:
 592 00a4 D8B1     		cbz	r0, .L21
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 593              		.loc 1 381 51 discriminator 1 view .LVU145
 594 00a6 2246     		mov	r2, r4
 595 00a8 2B46     		mov	r3, r5
 596 00aa 2046     		mov	r0, r4
 597 00ac 2946     		mov	r1, r5
 598 00ae FFF7FEFF 		bl	__aeabi_dmul
 599              	.LVL53:
 600 00b2 CDE90001 		strd	r0, [sp]
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 601              		.loc 1 381 63 discriminator 1 view .LVU146
 602 00b6 5246     		mov	r2, r10
 603 00b8 5B46     		mov	r3, fp
 604 00ba 5046     		mov	r0, r10
 605 00bc 5946     		mov	r1, fp
 606 00be FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 19


 607              	.LVL54:
 608 00c2 0646     		mov	r6, r0
 609 00c4 0F46     		mov	r7, r1
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 610              		.loc 1 381 57 discriminator 1 view .LVU147
 611 00c6 0246     		mov	r2, r0
 612 00c8 0B46     		mov	r3, r1
 613 00ca DDE90001 		ldrd	r0, [sp]
 614 00ce FFF7FEFF 		bl	__aeabi_dadd
 615              	.LVL55:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 616              		.loc 1 381 43 discriminator 1 view .LVU148
 617 00d2 0022     		movs	r2, #0
 618 00d4 2F4B     		ldr	r3, .L31+8
 619 00d6 FFF7FEFF 		bl	__aeabi_dcmple
 620              	.LVL56:
 621 00da 0028     		cmp	r0, #0
 622 00dc B5D1     		bne	.L23
 623              	.L21:
 386:Core/Src/main.c ****     	  }
 387:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 624              		.loc 1 387 8 is_stmt 1 view .LVU149
 625              		.loc 1 387 23 is_stmt 0 view .LVU150
 626 00de 0998     		ldr	r0, [sp, #36]
 627 00e0 1299     		ldr	r1, [sp, #72]
 628 00e2 FFF7FEFF 		bl	__aeabi_ul2d
 629              	.LVL57:
 630 00e6 4246     		mov	r2, r8
 631 00e8 4B46     		mov	r3, r9
 632 00ea FFF7FEFF 		bl	__aeabi_dadd
 633              	.LVL58:
 634 00ee FFF7FEFF 		bl	__aeabi_d2ulz
 635              	.LVL59:
 636 00f2 0990     		str	r0, [sp, #36]
 637              	.LVL60:
 638              		.loc 1 387 23 view .LVU151
 639 00f4 1291     		str	r1, [sp, #72]
 640              	.LVL61:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 641              		.loc 1 374 34 is_stmt 1 discriminator 2 view .LVU152
 642 00f6 0022     		movs	r2, #0
 643 00f8 254B     		ldr	r3, .L31+4
 644 00fa DDE90601 		ldrd	r0, [sp, #24]
 645              	.LVL62:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 646              		.loc 1 374 34 is_stmt 0 discriminator 2 view .LVU153
 647 00fe FFF7FEFF 		bl	__aeabi_dadd
 648              	.LVL63:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 649              		.loc 1 374 34 discriminator 2 view .LVU154
 650 0102 CDE90601 		strd	r0, [sp, #24]
 651              	.LVL64:
 652              	.L25:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 653              		.loc 1 374 25 is_stmt 1 discriminator 1 view .LVU155
 654 0106 DDE90623 		ldrd	r2, [sp, #24]
 655 010a DDE90C01 		ldrd	r0, [sp, #48]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 20


 656 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 657              	.LVL65:
 658 0112 00B3     		cbz	r0, .L29
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 659              		.loc 1 375 8 view .LVU156
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 660              		.loc 1 375 16 is_stmt 0 view .LVU157
 661 0114 DDE90E23 		ldrd	r2, [sp, #56]
 662 0118 DDE90601 		ldrd	r0, [sp, #24]
 663 011c FFF7FEFF 		bl	__aeabi_dmul
 664              	.LVL66:
 375:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 665              		.loc 1 375 12 view .LVU158
 666 0120 0022     		movs	r2, #0
 667 0122 1D4B     		ldr	r3, .L31+12
 668 0124 FFF7FEFF 		bl	__aeabi_dsub
 669              	.LVL67:
 670 0128 CDE90201 		strd	r0, [sp, #8]
 671              	.LVL68:
 376:Core/Src/main.c ****     	  x_i = 0;
 672              		.loc 1 376 8 is_stmt 1 view .LVU159
 376:Core/Src/main.c ****     	  x_i = 0;
 673              		.loc 1 376 16 is_stmt 0 view .LVU160
 674 012c DDE91023 		ldrd	r2, [sp, #64]
 675 0130 DDE90A01 		ldrd	r0, [sp, #40]
 676              	.LVL69:
 376:Core/Src/main.c ****     	  x_i = 0;
 677              		.loc 1 376 16 view .LVU161
 678 0134 FFF7FEFF 		bl	__aeabi_dmul
 679              	.LVL70:
 376:Core/Src/main.c ****     	  x_i = 0;
 680              		.loc 1 376 12 view .LVU162
 681 0138 0022     		movs	r2, #0
 682 013a 154B     		ldr	r3, .L31+4
 683 013c FFF7FEFF 		bl	__aeabi_dsub
 684              	.LVL71:
 685 0140 CDE90401 		strd	r0, [sp, #16]
 686              	.LVL72:
 377:Core/Src/main.c ****     	  y_i = 0;
 687              		.loc 1 377 8 is_stmt 1 view .LVU163
 378:Core/Src/main.c ****           iteration = 0;
 688              		.loc 1 378 8 view .LVU164
 379:Core/Src/main.c **** 
 689              		.loc 1 379 11 view .LVU165
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 690              		.loc 1 381 8 view .LVU166
 379:Core/Src/main.c **** 
 691              		.loc 1 379 21 is_stmt 0 view .LVU167
 692 0144 4FF00008 		mov	r8, #0
 693 0148 4FF00009 		mov	r9, #0
 378:Core/Src/main.c ****           iteration = 0;
 694              		.loc 1 378 12 view .LVU168
 695 014c C246     		mov	r10, r8
 696 014e CB46     		mov	fp, r9
 377:Core/Src/main.c ****     	  y_i = 0;
 697              		.loc 1 377 12 view .LVU169
 698 0150 4446     		mov	r4, r8
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 21


 699 0152 4D46     		mov	r5, r9
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 700              		.loc 1 381 13 view .LVU170
 701 0154 9FE7     		b	.L20
 702              	.LVL73:
 703              	.L29:
 381:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 704              		.loc 1 381 13 view .LVU171
 705              	.LBE12:
 373:Core/Src/main.c ****        for(double x=0; x<width; x++){
 706              		.loc 1 373 32 is_stmt 1 discriminator 2 view .LVU172
 707 0156 0022     		movs	r2, #0
 708 0158 0D4B     		ldr	r3, .L31+4
 709 015a DDE90A01 		ldrd	r0, [sp, #40]
 710 015e FFF7FEFF 		bl	__aeabi_dadd
 711              	.LVL74:
 712 0162 CDE90A01 		strd	r0, [sp, #40]
 713              	.LVL75:
 714              	.L19:
 373:Core/Src/main.c ****        for(double x=0; x<width; x++){
 715              		.loc 1 373 22 discriminator 1 view .LVU173
 716 0166 1398     		ldr	r0, [sp, #76]
 717 0168 FFF7FEFF 		bl	__aeabi_i2d
 718              	.LVL76:
 719 016c DDE90A23 		ldrd	r2, [sp, #40]
 720 0170 FFF7FEFF 		bl	__aeabi_dcmpgt
 721              	.LVL77:
 722 0174 20B1     		cbz	r0, .L30
 723              	.LBB13:
 374:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 724              		.loc 1 374 19 is_stmt 0 view .LVU174
 725 0176 0023     		movs	r3, #0
 726 0178 0024     		movs	r4, #0
 727 017a CDE90634 		strd	r3, [sp, #24]
 728 017e C2E7     		b	.L25
 729              	.L30:
 730              	.LBE13:
 731              	.LBE14:
 388:Core/Src/main.c ****        }
 389:Core/Src/main.c ****     }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****     return mandelbrot_sum;
 732              		.loc 1 391 5 is_stmt 1 view .LVU175
 392:Core/Src/main.c **** }
 733              		.loc 1 392 1 is_stmt 0 view .LVU176
 734 0180 0998     		ldr	r0, [sp, #36]
 735 0182 1299     		ldr	r1, [sp, #72]
 736 0184 15B0     		add	sp, sp, #84
 737              	.LCFI8:
 738              		.cfi_def_cfa_offset 36
 739              		@ sp needed
 740 0186 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 741              	.LVL78:
 742              	.L32:
 743              		.loc 1 392 1 view .LVU177
 744 018a 00BF     		.align	2
 745              	.L31:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 22


 746 018c 00000C40 		.word	1074528256
 747 0190 0000F03F 		.word	1072693248
 748 0194 00001040 		.word	1074790400
 749 0198 00000440 		.word	1074003968
 750              		.cfi_endproc
 751              	.LFE138:
 753              		.global	__aeabi_d2f
 754              		.global	__aeabi_fmul
 755              		.global	__aeabi_fsub
 756              		.global	__aeabi_fadd
 757              		.global	__aeabi_i2f
 758              		.global	__aeabi_fcmpgt
 759              		.global	__aeabi_fcmple
 760              		.global	__aeabi_ul2f
 761              		.global	__aeabi_f2ulz
 762              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 763              		.align	1
 764              		.global	calculate_mandelbrot_float
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 769              	calculate_mandelbrot_float:
 770              	.LVL79:
 771              	.LFB139:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** //TODO: Mandelbroat using variable type float
 395:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 772              		.loc 1 395 79 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 32
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		.loc 1 395 79 is_stmt 0 view .LVU179
 777 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 778              	.LCFI9:
 779              		.cfi_def_cfa_offset 36
 780              		.cfi_offset 4, -36
 781              		.cfi_offset 5, -32
 782              		.cfi_offset 6, -28
 783              		.cfi_offset 7, -24
 784              		.cfi_offset 8, -20
 785              		.cfi_offset 9, -16
 786              		.cfi_offset 10, -12
 787              		.cfi_offset 11, -8
 788              		.cfi_offset 14, -4
 789 0004 89B0     		sub	sp, sp, #36
 790              	.LCFI10:
 791              		.cfi_def_cfa_offset 72
 792 0006 0490     		str	r0, [sp, #16]
 793 0008 0F46     		mov	r7, r1
 794 000a 9246     		mov	r10, r2
 396:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 795              		.loc 1 396 5 is_stmt 1 view .LVU180
 796              	.LVL80:
 397:Core/Src/main.c ****     //TODO: Complete the function implementation
 398:Core/Src/main.c ****     float x_0;
 797              		.loc 1 398 5 view .LVU181
 399:Core/Src/main.c ****     float y_0;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 23


 798              		.loc 1 399 5 view .LVU182
 400:Core/Src/main.c ****     float x_i;
 799              		.loc 1 400 5 view .LVU183
 401:Core/Src/main.c ****     float y_i;
 800              		.loc 1 401 5 view .LVU184
 402:Core/Src/main.c ****     float iteration;
 801              		.loc 1 402 5 view .LVU185
 403:Core/Src/main.c ****     float temp;
 802              		.loc 1 403 5 view .LVU186
 404:Core/Src/main.c ****     float w_adj=3.5/width;
 803              		.loc 1 404 5 view .LVU187
 804              		.loc 1 404 20 is_stmt 0 view .LVU188
 805 000c FFF7FEFF 		bl	__aeabi_i2d
 806              	.LVL81:
 807              		.loc 1 404 20 view .LVU189
 808 0010 0446     		mov	r4, r0
 809 0012 0D46     		mov	r5, r1
 810 0014 0246     		mov	r2, r0
 811 0016 0B46     		mov	r3, r1
 812 0018 0020     		movs	r0, #0
 813 001a 4849     		ldr	r1, .L46
 814 001c FFF7FEFF 		bl	__aeabi_ddiv
 815              	.LVL82:
 816              		.loc 1 404 11 view .LVU190
 817 0020 FFF7FEFF 		bl	__aeabi_d2f
 818              	.LVL83:
 819 0024 0590     		str	r0, [sp, #20]	@ float
 820              	.LVL84:
 405:Core/Src/main.c ****     float h_adj=2.0/width;
 821              		.loc 1 405 5 is_stmt 1 view .LVU191
 822              		.loc 1 405 20 is_stmt 0 view .LVU192
 823 0026 2246     		mov	r2, r4
 824 0028 2B46     		mov	r3, r5
 825 002a 0020     		movs	r0, #0
 826              	.LVL85:
 827              		.loc 1 405 20 view .LVU193
 828 002c 4FF08041 		mov	r1, #1073741824
 829 0030 FFF7FEFF 		bl	__aeabi_ddiv
 830              	.LVL86:
 831              		.loc 1 405 11 view .LVU194
 832 0034 FFF7FEFF 		bl	__aeabi_d2f
 833              	.LVL87:
 834 0038 0690     		str	r0, [sp, #24]	@ float
 835              	.LVL88:
 406:Core/Src/main.c ****     for(float y=0; y<height; y++){
 836              		.loc 1 406 5 is_stmt 1 view .LVU195
 837              	.LBB15:
 838              		.loc 1 406 9 view .LVU196
 839              		.loc 1 406 15 is_stmt 0 view .LVU197
 840 003a 0023     		movs	r3, #0
 841 003c 0393     		str	r3, [sp, #12]	@ float
 842              	.LBE15:
 396:Core/Src/main.c ****     //TODO: Complete the function implementation
 843              		.loc 1 396 14 view .LVU198
 844 003e 0023     		movs	r3, #0
 845 0040 0093     		str	r3, [sp]
 846 0042 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 24


 847 0044 0797     		str	r7, [sp, #28]
 848              	.LBB18:
 849              		.loc 1 406 5 view .LVU199
 850 0046 69E0     		b	.L34
 851              	.LVL89:
 852              	.L38:
 853              	.LBB16:
 407:Core/Src/main.c ****        for(float x=0; x<width; x++){
 408:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 409:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 410:Core/Src/main.c ****     	  x_i = 0;
 411:Core/Src/main.c ****     	  y_i = 0;
 412:Core/Src/main.c ****           iteration = 0;
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 415:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 854              		.loc 1 415 7 is_stmt 1 view .LVU200
 855              		.loc 1 415 23 is_stmt 0 view .LVU201
 856 0048 3146     		mov	r1, r6
 857 004a 2846     		mov	r0, r5
 858 004c FFF7FEFF 		bl	__aeabi_fsub
 859              	.LVL90:
 860              		.loc 1 415 12 view .LVU202
 861 0050 4946     		mov	r1, r9
 862 0052 FFF7FEFF 		bl	__aeabi_fadd
 863              	.LVL91:
 864 0056 0546     		mov	r5, r0
 865              	.LVL92:
 416:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 866              		.loc 1 416 7 is_stmt 1 view .LVU203
 867              		.loc 1 416 15 is_stmt 0 view .LVU204
 868 0058 3946     		mov	r1, r7
 869 005a 3846     		mov	r0, r7
 870              	.LVL93:
 871              		.loc 1 416 15 view .LVU205
 872 005c FFF7FEFF 		bl	__aeabi_fadd
 873              	.LVL94:
 874              		.loc 1 416 19 view .LVU206
 875 0060 5946     		mov	r1, fp
 876 0062 FFF7FEFF 		bl	__aeabi_fmul
 877              	.LVL95:
 878              		.loc 1 416 11 view .LVU207
 879 0066 4146     		mov	r1, r8
 880 0068 FFF7FEFF 		bl	__aeabi_fadd
 881              	.LVL96:
 882 006c 8346     		mov	fp, r0
 883              	.LVL97:
 417:Core/Src/main.c ****     		x_i = temp;
 884              		.loc 1 417 7 is_stmt 1 view .LVU208
 418:Core/Src/main.c ****     		iteration += 1;
 885              		.loc 1 418 7 view .LVU209
 886              		.loc 1 418 17 is_stmt 0 view .LVU210
 887 006e 4FF07E51 		mov	r1, #1065353216
 888 0072 2046     		mov	r0, r4
 889              	.LVL98:
 890              		.loc 1 418 17 view .LVU211
 891 0074 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 25


 892              	.LVL99:
 893 0078 0446     		mov	r4, r0
 894              	.LVL100:
 417:Core/Src/main.c ****     		x_i = temp;
 895              		.loc 1 417 11 view .LVU212
 896 007a 2F46     		mov	r7, r5
 897              	.LVL101:
 898              	.L35:
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 899              		.loc 1 414 43 is_stmt 1 view .LVU213
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 900              		.loc 1 414 25 is_stmt 0 view .LVU214
 901 007c 5046     		mov	r0, r10
 902 007e FFF7FEFF 		bl	__aeabi_i2f
 903              	.LVL102:
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 904              		.loc 1 414 43 view .LVU215
 905 0082 2146     		mov	r1, r4
 906 0084 FFF7FEFF 		bl	__aeabi_fcmpgt
 907              	.LVL103:
 908 0088 98B1     		cbz	r0, .L36
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 909              		.loc 1 414 51 discriminator 1 view .LVU216
 910 008a 3946     		mov	r1, r7
 911 008c 3846     		mov	r0, r7
 912 008e FFF7FEFF 		bl	__aeabi_fmul
 913              	.LVL104:
 914 0092 0546     		mov	r5, r0
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 915              		.loc 1 414 63 discriminator 1 view .LVU217
 916 0094 5946     		mov	r1, fp
 917 0096 5846     		mov	r0, fp
 918 0098 FFF7FEFF 		bl	__aeabi_fmul
 919              	.LVL105:
 920 009c 0646     		mov	r6, r0
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 921              		.loc 1 414 57 discriminator 1 view .LVU218
 922 009e 0146     		mov	r1, r0
 923 00a0 2846     		mov	r0, r5
 924 00a2 FFF7FEFF 		bl	__aeabi_fadd
 925              	.LVL106:
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 926              		.loc 1 414 43 discriminator 1 view .LVU219
 927 00a6 4FF08141 		mov	r1, #1082130432
 928 00aa FFF7FEFF 		bl	__aeabi_fcmple
 929              	.LVL107:
 930 00ae 0028     		cmp	r0, #0
 931 00b0 CAD1     		bne	.L38
 932              	.L36:
 419:Core/Src/main.c ****     	  }
 420:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 933              		.loc 1 420 23 view .LVU220
 934 00b2 029D     		ldr	r5, [sp, #8]	@ float
 935              		.loc 1 420 8 is_stmt 1 view .LVU221
 936              		.loc 1 420 23 is_stmt 0 view .LVU222
 937 00b4 0098     		ldr	r0, [sp]
 938 00b6 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 26


 939 00b8 FFF7FEFF 		bl	__aeabi_ul2f
 940              	.LVL108:
 941 00bc 2146     		mov	r1, r4
 942 00be FFF7FEFF 		bl	__aeabi_fadd
 943              	.LVL109:
 944 00c2 FFF7FEFF 		bl	__aeabi_f2ulz
 945              	.LVL110:
 946 00c6 0090     		str	r0, [sp]
 947              	.LVL111:
 948              		.loc 1 420 23 view .LVU223
 949 00c8 0191     		str	r1, [sp, #4]
 950              	.LVL112:
 407:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 951              		.loc 1 407 33 is_stmt 1 discriminator 2 view .LVU224
 952 00ca 4FF07E51 		mov	r1, #1065353216
 953              	.LVL113:
 407:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 954              		.loc 1 407 33 is_stmt 0 discriminator 2 view .LVU225
 955 00ce 2846     		mov	r0, r5
 956              	.LVL114:
 407:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 957              		.loc 1 407 33 discriminator 2 view .LVU226
 958 00d0 FFF7FEFF 		bl	__aeabi_fadd
 959              	.LVL115:
 960 00d4 0546     		mov	r5, r0
 961              	.LVL116:
 962              	.L40:
 407:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 963              		.loc 1 407 24 is_stmt 1 discriminator 1 view .LVU227
 964 00d6 0498     		ldr	r0, [sp, #16]
 965 00d8 FFF7FEFF 		bl	__aeabi_i2f
 966              	.LVL117:
 967 00dc 2946     		mov	r1, r5
 968 00de FFF7FEFF 		bl	__aeabi_fcmpgt
 969              	.LVL118:
 970 00e2 A8B1     		cbz	r0, .L44
 408:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 971              		.loc 1 408 8 view .LVU228
 408:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 972              		.loc 1 408 16 is_stmt 0 view .LVU229
 973 00e4 0599     		ldr	r1, [sp, #20]	@ float
 974 00e6 2846     		mov	r0, r5
 975 00e8 FFF7FEFF 		bl	__aeabi_fmul
 976              	.LVL119:
 408:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 977              		.loc 1 408 12 view .LVU230
 978 00ec 1449     		ldr	r1, .L46+4
 979 00ee FFF7FEFF 		bl	__aeabi_fsub
 980              	.LVL120:
 981 00f2 8146     		mov	r9, r0
 982              	.LVL121:
 409:Core/Src/main.c ****     	  x_i = 0;
 983              		.loc 1 409 8 is_stmt 1 view .LVU231
 409:Core/Src/main.c ****     	  x_i = 0;
 984              		.loc 1 409 16 is_stmt 0 view .LVU232
 985 00f4 0699     		ldr	r1, [sp, #24]	@ float
 986 00f6 0398     		ldr	r0, [sp, #12]	@ float
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 27


 987              	.LVL122:
 409:Core/Src/main.c ****     	  x_i = 0;
 988              		.loc 1 409 16 view .LVU233
 989 00f8 FFF7FEFF 		bl	__aeabi_fmul
 990              	.LVL123:
 409:Core/Src/main.c ****     	  x_i = 0;
 991              		.loc 1 409 12 view .LVU234
 992 00fc 4FF07E51 		mov	r1, #1065353216
 993 0100 FFF7FEFF 		bl	__aeabi_fsub
 994              	.LVL124:
 995 0104 8046     		mov	r8, r0
 996              	.LVL125:
 410:Core/Src/main.c ****     	  y_i = 0;
 997              		.loc 1 410 8 is_stmt 1 view .LVU235
 411:Core/Src/main.c ****           iteration = 0;
 998              		.loc 1 411 8 view .LVU236
 412:Core/Src/main.c **** 
 999              		.loc 1 412 11 view .LVU237
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1000              		.loc 1 414 8 view .LVU238
 412:Core/Src/main.c **** 
 1001              		.loc 1 412 21 is_stmt 0 view .LVU239
 1002 0106 0024     		movs	r4, #0
 411:Core/Src/main.c ****           iteration = 0;
 1003              		.loc 1 411 12 view .LVU240
 1004 0108 A346     		mov	fp, r4
 410:Core/Src/main.c ****     	  y_i = 0;
 1005              		.loc 1 410 12 view .LVU241
 1006 010a 2746     		mov	r7, r4
 1007 010c 0295     		str	r5, [sp, #8]	@ float
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1008              		.loc 1 414 13 view .LVU242
 1009 010e B5E7     		b	.L35
 1010              	.LVL126:
 1011              	.L44:
 414:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 1012              		.loc 1 414 13 view .LVU243
 1013              	.LBE16:
 406:Core/Src/main.c ****        for(float x=0; x<width; x++){
 1014              		.loc 1 406 31 is_stmt 1 discriminator 2 view .LVU244
 1015 0110 4FF07E51 		mov	r1, #1065353216
 1016 0114 0398     		ldr	r0, [sp, #12]	@ float
 1017 0116 FFF7FEFF 		bl	__aeabi_fadd
 1018              	.LVL127:
 1019 011a 0390     		str	r0, [sp, #12]	@ float
 1020              	.LVL128:
 1021              	.L34:
 406:Core/Src/main.c ****        for(float x=0; x<width; x++){
 1022              		.loc 1 406 21 discriminator 1 view .LVU245
 1023 011c 0798     		ldr	r0, [sp, #28]
 1024 011e FFF7FEFF 		bl	__aeabi_i2f
 1025              	.LVL129:
 1026 0122 0399     		ldr	r1, [sp, #12]	@ float
 1027 0124 FFF7FEFF 		bl	__aeabi_fcmpgt
 1028              	.LVL130:
 1029 0128 10B1     		cbz	r0, .L45
 1030              	.LBB17:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 28


 407:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 1031              		.loc 1 407 18 is_stmt 0 view .LVU246
 1032 012a 0026     		movs	r6, #0
 1033 012c 3546     		mov	r5, r6
 1034 012e D2E7     		b	.L40
 1035              	.L45:
 1036              	.LBE17:
 1037              	.LBE18:
 421:Core/Src/main.c ****        }
 422:Core/Src/main.c ****     }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****     return mandelbrot_sum;
 1038              		.loc 1 424 5 is_stmt 1 view .LVU247
 425:Core/Src/main.c **** }
 1039              		.loc 1 425 1 is_stmt 0 view .LVU248
 1040 0130 0098     		ldr	r0, [sp]
 1041 0132 0199     		ldr	r1, [sp, #4]
 1042 0134 09B0     		add	sp, sp, #36
 1043              	.LCFI11:
 1044              		.cfi_def_cfa_offset 36
 1045              	.LVL131:
 1046              		.loc 1 425 1 view .LVU249
 1047              		@ sp needed
 1048 0136 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1049              	.LVL132:
 1050              	.L47:
 1051              		.loc 1 425 1 view .LVU250
 1052 013a 00BF     		.align	2
 1053              	.L46:
 1054 013c 00000C40 		.word	1074528256
 1055 0140 00002040 		.word	1075838976
 1056              		.cfi_endproc
 1057              	.LFE139:
 1059              		.section	.text.Error_Handler,"ax",%progbits
 1060              		.align	1
 1061              		.global	Error_Handler
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1066              	Error_Handler:
 1067              	.LFB140:
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** /* USER CODE END 4 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 431:Core/Src/main.c ****   * @retval None
 432:Core/Src/main.c ****   */
 433:Core/Src/main.c **** void Error_Handler(void)
 434:Core/Src/main.c **** {
 1068              		.loc 1 434 1 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ Volatile: function does not return.
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 435:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 29


 436:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 437:Core/Src/main.c ****   __disable_irq();
 1074              		.loc 1 437 3 view .LVU252
 1075              	.LBB19:
 1076              	.LBI19:
 1077              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 30


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 31


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 32


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 33


 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 34


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 35


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 36


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 37


 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 38


 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 39


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 40


 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 41


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 42


 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 43


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 44


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 45


 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1078              		.loc 2 960 27 view .LVU253
 1079              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 46


 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1080              		.loc 2 962 3 view .LVU254
 1081              		.syntax unified
 1082              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1083 0000 72B6     		cpsid i
 1084              	@ 0 "" 2
 1085              		.thumb
 1086              		.syntax unified
 1087              	.L49:
 1088              	.LBE20:
 1089              	.LBE19:
 438:Core/Src/main.c ****   while (1)
 1090              		.loc 1 438 3 view .LVU255
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****   }
 1091              		.loc 1 440 3 view .LVU256
 438:Core/Src/main.c ****   while (1)
 1092              		.loc 1 438 9 view .LVU257
 1093 0002 FEE7     		b	.L49
 1094              		.cfi_endproc
 1095              	.LFE140:
 1097              		.section	.text.SystemClock_Config,"ax",%progbits
 1098              		.align	1
 1099              		.global	SystemClock_Config
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1104              	SystemClock_Config:
 1105              	.LFB135:
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1106              		.loc 1 180 1 view -0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 80
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110 0000 00B5     		push	{lr}
 1111              	.LCFI12:
 1112              		.cfi_def_cfa_offset 4
 1113              		.cfi_offset 14, -4
 1114 0002 95B0     		sub	sp, sp, #84
 1115              	.LCFI13:
 1116              		.cfi_def_cfa_offset 88
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1117              		.loc 1 181 3 view .LVU259
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1118              		.loc 1 181 22 is_stmt 0 view .LVU260
 1119 0004 3422     		movs	r2, #52
 1120 0006 0021     		movs	r1, #0
 1121 0008 07A8     		add	r0, sp, #28
 1122 000a FFF7FEFF 		bl	memset
 1123              	.LVL133:
 182:Core/Src/main.c **** 
 1124              		.loc 1 182 3 is_stmt 1 view .LVU261
 182:Core/Src/main.c **** 
 1125              		.loc 1 182 22 is_stmt 0 view .LVU262
 1126 000e 0023     		movs	r3, #0
 1127 0010 0293     		str	r3, [sp, #8]
 1128 0012 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 47


 1129 0014 0493     		str	r3, [sp, #16]
 1130 0016 0593     		str	r3, [sp, #20]
 1131 0018 0693     		str	r3, [sp, #24]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1132              		.loc 1 186 3 is_stmt 1 view .LVU263
 1133              	.LBB21:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1134              		.loc 1 186 3 view .LVU264
 1135 001a 0093     		str	r3, [sp]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1136              		.loc 1 186 3 view .LVU265
 1137 001c 214A     		ldr	r2, .L56
 1138 001e 116C     		ldr	r1, [r2, #64]
 1139 0020 41F08051 		orr	r1, r1, #268435456
 1140 0024 1164     		str	r1, [r2, #64]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1141              		.loc 1 186 3 view .LVU266
 1142 0026 126C     		ldr	r2, [r2, #64]
 1143 0028 02F08052 		and	r2, r2, #268435456
 1144 002c 0092     		str	r2, [sp]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1145              		.loc 1 186 3 view .LVU267
 1146 002e 009A     		ldr	r2, [sp]
 1147              	.LBE21:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1148              		.loc 1 186 3 view .LVU268
 187:Core/Src/main.c **** 
 1149              		.loc 1 187 3 view .LVU269
 1150              	.LBB22:
 187:Core/Src/main.c **** 
 1151              		.loc 1 187 3 view .LVU270
 1152 0030 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c **** 
 1153              		.loc 1 187 3 view .LVU271
 1154 0032 1D4A     		ldr	r2, .L56+4
 1155 0034 1368     		ldr	r3, [r2]
 1156 0036 23F44043 		bic	r3, r3, #49152
 1157 003a 43F48043 		orr	r3, r3, #16384
 1158 003e 1360     		str	r3, [r2]
 187:Core/Src/main.c **** 
 1159              		.loc 1 187 3 view .LVU272
 1160 0040 1368     		ldr	r3, [r2]
 1161 0042 03F44043 		and	r3, r3, #49152
 1162 0046 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c **** 
 1163              		.loc 1 187 3 view .LVU273
 1164 0048 019B     		ldr	r3, [sp, #4]
 1165              	.LBE22:
 187:Core/Src/main.c **** 
 1166              		.loc 1 187 3 view .LVU274
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1167              		.loc 1 192 3 view .LVU275
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1168              		.loc 1 192 36 is_stmt 0 view .LVU276
 1169 004a 0123     		movs	r3, #1
 1170 004c 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 48


 1171              		.loc 1 193 3 is_stmt 1 view .LVU277
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1172              		.loc 1 193 30 is_stmt 0 view .LVU278
 1173 004e 4FF48033 		mov	r3, #65536
 1174 0052 0893     		str	r3, [sp, #32]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1175              		.loc 1 194 3 is_stmt 1 view .LVU279
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1176              		.loc 1 194 34 is_stmt 0 view .LVU280
 1177 0054 0223     		movs	r3, #2
 1178 0056 0D93     		str	r3, [sp, #52]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1179              		.loc 1 195 3 is_stmt 1 view .LVU281
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1180              		.loc 1 195 35 is_stmt 0 view .LVU282
 1181 0058 4FF48002 		mov	r2, #4194304
 1182 005c 0E92     		str	r2, [sp, #56]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1183              		.loc 1 196 3 is_stmt 1 view .LVU283
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1184              		.loc 1 196 30 is_stmt 0 view .LVU284
 1185 005e 0F22     		movs	r2, #15
 1186 0060 0F92     		str	r2, [sp, #60]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1187              		.loc 1 197 3 is_stmt 1 view .LVU285
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1188              		.loc 1 197 30 is_stmt 0 view .LVU286
 1189 0062 9022     		movs	r2, #144
 1190 0064 1092     		str	r2, [sp, #64]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1191              		.loc 1 198 3 is_stmt 1 view .LVU287
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1192              		.loc 1 198 30 is_stmt 0 view .LVU288
 1193 0066 1193     		str	r3, [sp, #68]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1194              		.loc 1 199 3 is_stmt 1 view .LVU289
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1195              		.loc 1 199 30 is_stmt 0 view .LVU290
 1196 0068 1293     		str	r3, [sp, #72]
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1197              		.loc 1 200 3 is_stmt 1 view .LVU291
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1198              		.loc 1 200 30 is_stmt 0 view .LVU292
 1199 006a 1393     		str	r3, [sp, #76]
 201:Core/Src/main.c ****   {
 1200              		.loc 1 201 3 is_stmt 1 view .LVU293
 201:Core/Src/main.c ****   {
 1201              		.loc 1 201 7 is_stmt 0 view .LVU294
 1202 006c 07A8     		add	r0, sp, #28
 1203 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1204              	.LVL134:
 201:Core/Src/main.c ****   {
 1205              		.loc 1 201 6 discriminator 1 view .LVU295
 1206 0072 98B9     		cbnz	r0, .L54
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1207              		.loc 1 208 3 is_stmt 1 view .LVU296
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 49


 1208              		.loc 1 208 31 is_stmt 0 view .LVU297
 1209 0074 0F23     		movs	r3, #15
 1210 0076 0293     		str	r3, [sp, #8]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1211              		.loc 1 210 3 is_stmt 1 view .LVU298
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1212              		.loc 1 210 34 is_stmt 0 view .LVU299
 1213 0078 0223     		movs	r3, #2
 1214 007a 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1215              		.loc 1 211 3 is_stmt 1 view .LVU300
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1216              		.loc 1 211 35 is_stmt 0 view .LVU301
 1217 007c 0023     		movs	r3, #0
 1218 007e 0493     		str	r3, [sp, #16]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1219              		.loc 1 212 3 is_stmt 1 view .LVU302
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1220              		.loc 1 212 36 is_stmt 0 view .LVU303
 1221 0080 4FF4A053 		mov	r3, #5120
 1222 0084 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c **** 
 1223              		.loc 1 213 3 is_stmt 1 view .LVU304
 213:Core/Src/main.c **** 
 1224              		.loc 1 213 36 is_stmt 0 view .LVU305
 1225 0086 4FF48053 		mov	r3, #4096
 1226 008a 0693     		str	r3, [sp, #24]
 215:Core/Src/main.c ****   {
 1227              		.loc 1 215 3 is_stmt 1 view .LVU306
 215:Core/Src/main.c ****   {
 1228              		.loc 1 215 7 is_stmt 0 view .LVU307
 1229 008c 0321     		movs	r1, #3
 1230 008e 02A8     		add	r0, sp, #8
 1231 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1232              	.LVL135:
 215:Core/Src/main.c ****   {
 1233              		.loc 1 215 6 discriminator 1 view .LVU308
 1234 0094 20B9     		cbnz	r0, .L55
 219:Core/Src/main.c **** 
 1235              		.loc 1 219 1 view .LVU309
 1236 0096 15B0     		add	sp, sp, #84
 1237              	.LCFI14:
 1238              		.cfi_remember_state
 1239              		.cfi_def_cfa_offset 4
 1240              		@ sp needed
 1241 0098 5DF804FB 		ldr	pc, [sp], #4
 1242              	.L54:
 1243              	.LCFI15:
 1244              		.cfi_restore_state
 203:Core/Src/main.c ****   }
 1245              		.loc 1 203 5 is_stmt 1 view .LVU310
 1246 009c FFF7FEFF 		bl	Error_Handler
 1247              	.LVL136:
 1248              	.L55:
 217:Core/Src/main.c ****   }
 1249              		.loc 1 217 5 view .LVU311
 1250 00a0 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 50


 1251              	.LVL137:
 1252              	.L57:
 1253              		.align	2
 1254              	.L56:
 1255 00a4 00380240 		.word	1073887232
 1256 00a8 00700040 		.word	1073770496
 1257              		.cfi_endproc
 1258              	.LFE135:
 1260              		.section	.text.delay,"ax",%progbits
 1261              		.align	1
 1262              		.global	delay
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1267              	delay:
 1268              	.LVL138:
 1269              	.LFB141:
 441:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 442:Core/Src/main.c **** }
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** /**
 445:Core/Src/main.c ****  * Basic delay function
 446:Core/Src/main.c ****  */
 447:Core/Src/main.c **** void delay(uint32_t delay_time){
 1270              		.loc 1 447 32 view -0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 8
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275              		.loc 1 447 32 is_stmt 0 view .LVU313
 1276 0000 82B0     		sub	sp, sp, #8
 1277              	.LCFI16:
 1278              		.cfi_def_cfa_offset 8
 448:Core/Src/main.c **** 	uint32_t i = (delay_time*8000)/8;
 1279              		.loc 1 448 2 is_stmt 1 view .LVU314
 1280              		.loc 1 448 26 is_stmt 0 view .LVU315
 1281 0002 4FF4FA53 		mov	r3, #8000
 1282 0006 03FB00F2 		mul	r2, r3, r0
 1283              	.LVL139:
 449:Core/Src/main.c **** 	uint32_t i_in = i/1000;
 1284              		.loc 1 449 2 is_stmt 1 view .LVU316
 1285              		.loc 1 449 11 is_stmt 0 view .LVU317
 1286 000a 0C4B     		ldr	r3, .L65
 1287 000c A3FB0232 		umull	r3, r2, r3, r2
 1288              	.LVL140:
 1289              		.loc 1 449 11 view .LVU318
 1290 0010 520A     		lsrs	r2, r2, #9
 1291              	.LVL141:
 450:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1292              		.loc 1 450 2 is_stmt 1 view .LVU319
 1293              	.LBB23:
 1294              		.loc 1 450 6 view .LVU320
 1295              		.loc 1 450 24 is_stmt 0 view .LVU321
 1296 0012 0023     		movs	r3, #0
 1297 0014 0093     		str	r3, [sp]
 1298              		.loc 1 450 2 view .LVU322
 1299 0016 08E0     		b	.L59
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 51


 1300              	.L61:
 1301              	.LBB24:
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** 	  }
 1302              		.loc 1 453 4 is_stmt 1 view .LVU323
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1303              		.loc 1 451 42 discriminator 3 view .LVU324
 1304 0018 019B     		ldr	r3, [sp, #4]
 1305 001a 0133     		adds	r3, r3, #1
 1306 001c 0193     		str	r3, [sp, #4]
 1307              	.L60:
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1308              		.loc 1 451 32 discriminator 1 view .LVU325
 1309 001e 019B     		ldr	r3, [sp, #4]
 1310 0020 9342     		cmp	r3, r2
 1311 0022 F9D3     		bcc	.L61
 1312              	.LBE24:
 450:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1313              		.loc 1 450 38 discriminator 2 view .LVU326
 1314 0024 009B     		ldr	r3, [sp]
 1315 0026 0133     		adds	r3, r3, #1
 1316 0028 0093     		str	r3, [sp]
 1317              	.L59:
 450:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1318              		.loc 1 450 30 discriminator 1 view .LVU327
 1319 002a 009B     		ldr	r3, [sp]
 1320 002c B3F57A7F 		cmp	r3, #1000
 1321 0030 02D2     		bcs	.L64
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1322              		.loc 1 451 4 view .LVU328
 1323              	.LBB25:
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1324              		.loc 1 451 8 view .LVU329
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1325              		.loc 1 451 26 is_stmt 0 view .LVU330
 1326 0032 0023     		movs	r3, #0
 1327 0034 0193     		str	r3, [sp, #4]
 451:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1328              		.loc 1 451 4 view .LVU331
 1329 0036 F2E7     		b	.L60
 1330              	.L64:
 1331              	.LBE25:
 1332              	.LBE23:
 454:Core/Src/main.c **** 	}
 455:Core/Src/main.c **** }
 1333              		.loc 1 455 1 view .LVU332
 1334 0038 02B0     		add	sp, sp, #8
 1335              	.LCFI17:
 1336              		.cfi_def_cfa_offset 0
 1337              		@ sp needed
 1338 003a 7047     		bx	lr
 1339              	.L66:
 1340              		.align	2
 1341              	.L65:
 1342 003c D34D6210 		.word	274877907
 1343              		.cfi_endproc
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 52


 1344              	.LFE141:
 1346              		.section	.text.main,"ax",%progbits
 1347              		.align	1
 1348              		.global	main
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1353              	main:
 1354              	.LFB134:
  85:Core/Src/main.c **** 
 1355              		.loc 1 85 1 is_stmt 1 view -0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1360              	.LCFI18:
 1361              		.cfi_def_cfa_offset 32
 1362              		.cfi_offset 4, -32
 1363              		.cfi_offset 5, -28
 1364              		.cfi_offset 6, -24
 1365              		.cfi_offset 7, -20
 1366              		.cfi_offset 8, -16
 1367              		.cfi_offset 9, -12
 1368              		.cfi_offset 10, -8
 1369              		.cfi_offset 14, -4
  94:Core/Src/main.c **** 
 1370              		.loc 1 94 3 view .LVU334
 1371 0004 FFF7FEFF 		bl	HAL_Init
 1372              	.LVL142:
 101:Core/Src/main.c **** 
 1373              		.loc 1 101 3 view .LVU335
 1374 0008 FFF7FEFF 		bl	SystemClock_Config
 1375              	.LVL143:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1376              		.loc 1 108 3 view .LVU336
 1377 000c FFF7FEFF 		bl	MX_GPIO_Init
 1378              	.LVL144:
 114:Core/Src/main.c ****    for(int i=0; i<5; i++){
 1379              		.loc 1 114 4 view .LVU337
 114:Core/Src/main.c ****    for(int i=0; i<5; i++){
 1380              		.loc 1 114 10 is_stmt 0 view .LVU338
 1381 0010 0024     		movs	r4, #0
 1382 0012 2C4B     		ldr	r3, .L72
 1383 0014 1C60     		str	r4, [r3]
 115:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1384              		.loc 1 115 4 is_stmt 1 view .LVU339
 1385              	.LBB26:
 115:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1386              		.loc 1 115 8 view .LVU340
 1387              	.LVL145:
 115:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1388              		.loc 1 115 4 is_stmt 0 view .LVU341
 1389 0016 4FE0     		b	.L68
 1390              	.LVL146:
 1391              	.L69:
 1392              	.LBB27:
 117:Core/Src/main.c **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 53


 1393              		.loc 1 117 5 is_stmt 1 view .LVU342
 117:Core/Src/main.c **** 
 1394              		.loc 1 117 16 is_stmt 0 view .LVU343
 1395 0018 2B4D     		ldr	r5, .L72+4
 1396 001a 0123     		movs	r3, #1
 1397 001c 6B61     		str	r3, [r5, #20]
 120:Core/Src/main.c ****  	  height = imag_dim;
 1398              		.loc 1 120 5 is_stmt 1 view .LVU344
 120:Core/Src/main.c ****  	  height = imag_dim;
 1399              		.loc 1 120 27 is_stmt 0 view .LVU345
 1400 001e 2B4B     		ldr	r3, .L72+8
 1401 0020 53F82430 		ldr	r3, [r3, r4, lsl #2]
 120:Core/Src/main.c ****  	  height = imag_dim;
 1402              		.loc 1 120 14 view .LVU346
 1403 0024 2A4F     		ldr	r7, .L72+12
 1404 0026 3B60     		str	r3, [r7]
 121:Core/Src/main.c ****  	  width = imag_dim;
 1405              		.loc 1 121 5 is_stmt 1 view .LVU347
 121:Core/Src/main.c ****  	  width = imag_dim;
 1406              		.loc 1 121 12 is_stmt 0 view .LVU348
 1407 0028 DFF8A8A0 		ldr	r10, .L72+16
 1408 002c CAF80030 		str	r3, [r10]
 122:Core/Src/main.c **** 
 1409              		.loc 1 122 5 is_stmt 1 view .LVU349
 122:Core/Src/main.c **** 
 1410              		.loc 1 122 11 is_stmt 0 view .LVU350
 1411 0030 294E     		ldr	r6, .L72+20
 1412 0032 3360     		str	r3, [r6]
 125:Core/Src/main.c ****       //do mandelbrot with double
 1413              		.loc 1 125 5 is_stmt 1 view .LVU351
 125:Core/Src/main.c ****       //do mandelbrot with double
 1414              		.loc 1 125 18 is_stmt 0 view .LVU352
 1415 0034 FFF7FEFF 		bl	HAL_GetTick
 1416              	.LVL147:
 125:Core/Src/main.c ****       //do mandelbrot with double
 1417              		.loc 1 125 18 discriminator 1 view .LVU353
 1418 0038 4FF00009 		mov	r9, #0
 125:Core/Src/main.c ****       //do mandelbrot with double
 1419              		.loc 1 125 16 discriminator 1 view .LVU354
 1420 003c DFF89C80 		ldr	r8, .L72+24
 1421 0040 C8F80000 		str	r0, [r8]
 1422 0044 C8F80490 		str	r9, [r8, #4]
 127:Core/Src/main.c ****  		 
 1423              		.loc 1 127 7 is_stmt 1 view .LVU355
 127:Core/Src/main.c ****  		 
 1424              		.loc 1 127 18 is_stmt 0 view .LVU356
 1425 0048 6422     		movs	r2, #100
 1426 004a DAF80010 		ldr	r1, [r10]
 1427 004e 3068     		ldr	r0, [r6]
 1428 0050 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1429              	.LVL148:
 127:Core/Src/main.c ****  		 
 1430              		.loc 1 127 16 discriminator 1 view .LVU357
 1431 0054 224E     		ldr	r6, .L72+28
 1432 0056 C6E90001 		strd	r0, [r6]
 130:Core/Src/main.c **** 
 1433              		.loc 1 130 5 is_stmt 1 view .LVU358
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 54


 130:Core/Src/main.c **** 
 1434              		.loc 1 130 16 is_stmt 0 view .LVU359
 1435 005a FFF7FEFF 		bl	HAL_GetTick
 1436              	.LVL149:
 130:Core/Src/main.c **** 
 1437              		.loc 1 130 14 discriminator 1 view .LVU360
 1438 005e 214B     		ldr	r3, .L72+32
 1439 0060 1860     		str	r0, [r3]
 1440 0062 C3F80490 		str	r9, [r3, #4]
 133:Core/Src/main.c **** 
 1441              		.loc 1 133 5 is_stmt 1 view .LVU361
 133:Core/Src/main.c **** 
 1442              		.loc 1 133 29 is_stmt 0 view .LVU362
 1443 0066 D8F80030 		ldr	r3, [r8]
 1444 006a D8F80420 		ldr	r2, [r8, #4]
 1445 006e C01A     		subs	r0, r0, r3
 1446 0070 62EB4202 		sbc	r2, r2, r2, lsl #1
 133:Core/Src/main.c **** 
 1447              		.loc 1 133 18 view .LVU363
 1448 0074 1C4B     		ldr	r3, .L72+36
 1449 0076 1860     		str	r0, [r3]
 1450 0078 5A60     		str	r2, [r3, #4]
 135:Core/Src/main.c ****  	  time_elapsed_arr[place] = time_elapsed;
 1451              		.loc 1 135 7 is_stmt 1 view .LVU364
 135:Core/Src/main.c ****  	  time_elapsed_arr[place] = time_elapsed;
 1452              		.loc 1 135 19 is_stmt 0 view .LVU365
 1453 007a DFF848C0 		ldr	ip, .L72
 1454 007e DCF80030 		ldr	r3, [ip]
 135:Core/Src/main.c ****  	  time_elapsed_arr[place] = time_elapsed;
 1455              		.loc 1 135 27 view .LVU366
 1456 0082 3F68     		ldr	r7, [r7]
 1457 0084 1949     		ldr	r1, .L72+40
 1458 0086 41F82370 		str	r7, [r1, r3, lsl #2]
 136:Core/Src/main.c ****  	  checksum_arr[place] = checksum;
 1459              		.loc 1 136 5 is_stmt 1 view .LVU367
 136:Core/Src/main.c ****  	  checksum_arr[place] = checksum;
 1460              		.loc 1 136 29 is_stmt 0 view .LVU368
 1461 008a 1949     		ldr	r1, .L72+44
 1462 008c 01EBC307 		add	r7, r1, r3, lsl #3
 1463 0090 41F83300 		str	r0, [r1, r3, lsl #3]
 1464 0094 7A60     		str	r2, [r7, #4]
 137:Core/Src/main.c ****       // increment the index for all output arrays
 1465              		.loc 1 137 5 is_stmt 1 view .LVU369
 137:Core/Src/main.c ****       // increment the index for all output arrays
 1466              		.loc 1 137 25 is_stmt 0 view .LVU370
 1467 0096 174A     		ldr	r2, .L72+48
 1468 0098 02EBC302 		add	r2, r2, r3, lsl #3
 1469 009c D6E90001 		ldrd	r0, [r6]
 1470 00a0 C2E90001 		strd	r0, [r2]
 139:Core/Src/main.c **** 
 1471              		.loc 1 139 7 is_stmt 1 view .LVU371
 139:Core/Src/main.c **** 
 1472              		.loc 1 139 12 is_stmt 0 view .LVU372
 1473 00a4 0133     		adds	r3, r3, #1
 1474 00a6 CCF80030 		str	r3, [ip]
 142:Core/Src/main.c **** 
 1475              		.loc 1 142 5 is_stmt 1 view .LVU373
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 55


 142:Core/Src/main.c **** 
 1476              		.loc 1 142 16 is_stmt 0 view .LVU374
 1477 00aa 0323     		movs	r3, #3
 1478 00ac 6B61     		str	r3, [r5, #20]
 145:Core/Src/main.c **** 
 1479              		.loc 1 145 5 is_stmt 1 view .LVU375
 1480 00ae 4FF47A70 		mov	r0, #1000
 1481 00b2 FFF7FEFF 		bl	delay
 1482              	.LVL150:
 1483              	.LBE27:
 115:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1484              		.loc 1 115 23 discriminator 3 view .LVU376
 1485 00b6 0134     		adds	r4, r4, #1
 1486              	.LVL151:
 1487              	.L68:
 115:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1488              		.loc 1 115 18 discriminator 1 view .LVU377
 1489 00b8 042C     		cmp	r4, #4
 1490 00ba ADDD     		ble	.L69
 1491              	.LBE26:
 150:Core/Src/main.c **** 
 1492              		.loc 1 150 4 view .LVU378
 150:Core/Src/main.c **** 
 1493              		.loc 1 150 15 is_stmt 0 view .LVU379
 1494 00bc 024B     		ldr	r3, .L72+4
 1495 00be 0022     		movs	r2, #0
 1496 00c0 5A61     		str	r2, [r3, #20]
 1497              	.L70:
 154:Core/Src/main.c ****   {
 1498              		.loc 1 154 3 is_stmt 1 view .LVU380
 171:Core/Src/main.c ****   /* USER CODE END 3 */
 1499              		.loc 1 171 3 view .LVU381
 154:Core/Src/main.c ****   {
 1500              		.loc 1 154 9 view .LVU382
 1501 00c2 FEE7     		b	.L70
 1502              	.L73:
 1503              		.align	2
 1504              	.L72:
 1505 00c4 00000000 		.word	place
 1506 00c8 00040240 		.word	1073873920
 1507 00cc 00000000 		.word	test_values
 1508 00d0 00000000 		.word	imag_dim
 1509 00d4 00000000 		.word	height
 1510 00d8 00000000 		.word	width
 1511 00dc 00000000 		.word	start_time
 1512 00e0 00000000 		.word	checksum
 1513 00e4 00000000 		.word	end_time
 1514 00e8 00000000 		.word	time_elapsed
 1515 00ec 00000000 		.word	imag_dim_arr
 1516 00f0 00000000 		.word	time_elapsed_arr
 1517 00f4 00000000 		.word	checksum_arr
 1518              		.cfi_endproc
 1519              	.LFE134:
 1521              		.global	place
 1522              		.section	.bss.place,"aw",%nobits
 1523              		.align	2
 1526              	place:
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 56


 1527 0000 00000000 		.space	4
 1528              		.global	time_elapsed
 1529              		.section	.bss.time_elapsed,"aw",%nobits
 1530              		.align	3
 1533              	time_elapsed:
 1534 0000 00000000 		.space	8
 1534      00000000 
 1535              		.global	end_time
 1536              		.section	.bss.end_time,"aw",%nobits
 1537              		.align	3
 1540              	end_time:
 1541 0000 00000000 		.space	8
 1541      00000000 
 1542              		.global	start_time
 1543              		.section	.bss.start_time,"aw",%nobits
 1544              		.align	3
 1547              	start_time:
 1548 0000 00000000 		.space	8
 1548      00000000 
 1549              		.global	checksum_arr
 1550              		.section	.bss.checksum_arr,"aw",%nobits
 1551              		.align	3
 1554              	checksum_arr:
 1555 0000 00000000 		.space	40
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1556              		.global	time_elapsed_arr
 1557              		.section	.bss.time_elapsed_arr,"aw",%nobits
 1558              		.align	3
 1561              	time_elapsed_arr:
 1562 0000 00000000 		.space	40
 1562      00000000 
 1562      00000000 
 1562      00000000 
 1562      00000000 
 1563              		.global	imag_dim_arr
 1564              		.section	.bss.imag_dim_arr,"aw",%nobits
 1565              		.align	2
 1568              	imag_dim_arr:
 1569 0000 00000000 		.space	20
 1569      00000000 
 1569      00000000 
 1569      00000000 
 1569      00000000 
 1570              		.global	checksum
 1571              		.section	.bss.checksum,"aw",%nobits
 1572              		.align	3
 1575              	checksum:
 1576 0000 00000000 		.space	8
 1576      00000000 
 1577              		.global	imag_dim
 1578              		.section	.bss.imag_dim,"aw",%nobits
 1579              		.align	2
 1582              	imag_dim:
 1583 0000 00000000 		.space	4
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 57


 1584              		.global	test_values
 1585              		.section	.data.test_values,"aw"
 1586              		.align	2
 1589              	test_values:
 1590 0000 80000000 		.word	128
 1591 0004 A0000000 		.word	160
 1592 0008 C0000000 		.word	192
 1593 000c E0000000 		.word	224
 1594 0010 00010000 		.word	256
 1595              		.global	width
 1596              		.section	.bss.width,"aw",%nobits
 1597              		.align	2
 1600              	width:
 1601 0000 00000000 		.space	4
 1602              		.global	height
 1603              		.section	.bss.height,"aw",%nobits
 1604              		.align	2
 1607              	height:
 1608 0000 00000000 		.space	4
 1609              		.text
 1610              	.Letext0:
 1611              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1612              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1613              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1614              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1615              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1616              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1617              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1618              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1619              		.file 11 "<built-in>"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:131    .text.MX_GPIO_Init:00000074 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:138    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:144    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:424    .text.calculate_mandelbrot_fixed_point_arithmetic:00000170 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:440    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:446    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:746    .text.calculate_mandelbrot_double:0000018c $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:763    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:769    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1054   .text.calculate_mandelbrot_float:0000013c $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1060   .text.Error_Handler:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1066   .text.Error_Handler:00000000 Error_Handler
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1098   .text.SystemClock_Config:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1104   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1255   .text.SystemClock_Config:000000a4 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1261   .text.delay:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1267   .text.delay:00000000 delay
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1342   .text.delay:0000003c $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1347   .text.main:00000000 $t
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1353   .text.main:00000000 main
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1505   .text.main:000000c4 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1526   .bss.place:00000000 place
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1589   .data.test_values:00000000 test_values
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1582   .bss.imag_dim:00000000 imag_dim
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1607   .bss.height:00000000 height
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1600   .bss.width:00000000 width
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1547   .bss.start_time:00000000 start_time
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1575   .bss.checksum:00000000 checksum
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1540   .bss.end_time:00000000 end_time
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1533   .bss.time_elapsed:00000000 time_elapsed
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1568   .bss.imag_dim_arr:00000000 imag_dim_arr
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1561   .bss.time_elapsed_arr:00000000 time_elapsed_arr
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1554   .bss.checksum_arr:00000000 checksum_arr
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1523   .bss.place:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1530   .bss.time_elapsed:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1537   .bss.end_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1544   .bss.start_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1551   .bss.checksum_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1558   .bss.time_elapsed_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1565   .bss.imag_dim_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1572   .bss.checksum:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1579   .bss.imag_dim:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1586   .data.test_values:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1597   .bss.width:00000000 $d
C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s:1604   .bss.height:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccuxJBrp.s 			page 59


__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_ul2d
__aeabi_d2ulz
__aeabi_d2f
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
__aeabi_i2f
__aeabi_fcmpgt
__aeabi_fcmple
__aeabi_ul2f
__aeabi_f2ulz
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
