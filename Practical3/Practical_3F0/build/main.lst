ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define variables you think you might need
  46:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  47:Core/Src/main.c **** #define MAX_ITER 100
  48:Core/Src/main.c **** int iter_values[] = {100, 250, 500, 750, 1000};
  49:Core/Src/main.c **** int iter;
  50:Core/Src/main.c **** int imag_dim;
  51:Core/Src/main.c **** uint64_t checksum;
  52:Core/Src/main.c **** int test_values[] = {128, 160, 192, 224, 256};
  53:Core/Src/main.c **** int imag_dim_arr[25];
  54:Core/Src/main.c **** uint64_t time_elapsed_arr[25];
  55:Core/Src/main.c **** uint64_t clock_cycles_arr[25];
  56:Core/Src/main.c **** int throughput_arr[25];
  57:Core/Src/main.c **** uint64_t checksum_arr[25];
  58:Core/Src/main.c **** uint64_t start_time;
  59:Core/Src/main.c **** uint64_t end_time;
  60:Core/Src/main.c **** uint64_t time_elapsed;
  61:Core/Src/main.c **** uint64_t cpu_freq;
  62:Core/Src/main.c **** uint64_t clock_cycles;
  63:Core/Src/main.c **** int height;
  64:Core/Src/main.c **** int width;
  65:Core/Src/main.c **** uint64_t num_pixels;
  66:Core/Src/main.c **** uint64_t throughput;
  67:Core/Src/main.c **** int place=0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.c **** void SystemClock_Config(void);
  75:Core/Src/main.c **** static void MX_GPIO_Init(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  78:Core/Src/main.c **** // function declarations
  79:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  80:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 3


  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Configure the system clock */
 112:Core/Src/main.c ****   SystemClock_Config();
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Initialize all configured peripherals */
 119:Core/Src/main.c ****   MX_GPIO_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   // retrieve frequency for calculating clock cycles later
 125:Core/Src/main.c ****   cpu_freq = HAL_RCC_GetHCLKFreq();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   // loop to make testing easier
 128:Core/Src/main.c ****    for(int i=0; i<5; i++){
 129:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 130:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000001;
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****  	 //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initi
 133:Core/Src/main.c ****  	  imag_dim = test_values[i];
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****  		 //TODO: Record the start time
 136:Core/Src/main.c ****  		  start_time = HAL_GetTick();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****  		  // set height and width
 139:Core/Src/main.c ****  		  height = imag_dim;
 140:Core/Src/main.c ****  		  width = imag_dim;
 141:Core/Src/main.c ****  		 //checksum = calculate_mandelbrot_double(imag_dim, imag_dim, MAX_ITER);
 142:Core/Src/main.c ****  		  checksum = calculate_mandelbrot_fixed_point_arithmetic(imag_dim, imag_dim, MAX_ITER);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****  		 //TODO: Record the end time
 145:Core/Src/main.c ****  		  end_time = HAL_GetTick();
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****  		  //TODO: Calculate the execution time
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 4


 148:Core/Src/main.c ****  		  time_elapsed = end_time - start_time;
 149:Core/Src/main.c ****           //calculate number of clock cycles
 150:Core/Src/main.c ****  		  clock_cycles = (time_elapsed*cpu_freq)/1000;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****  		  // calculate the throughput
 153:Core/Src/main.c ****  		  num_pixels = height*width;
 154:Core/Src/main.c ****  		  throughput = num_pixels/(time_elapsed/1000);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****  		 imag_dim_arr[place] = imag_dim;
 157:Core/Src/main.c ****  		 time_elapsed_arr[place] = time_elapsed;
 158:Core/Src/main.c ****  	     clock_cycles_arr[place] = clock_cycles;
 159:Core/Src/main.c ****  		 throughput_arr[place] = throughput;
 160:Core/Src/main.c ****  		 checksum_arr[place] = checksum;
 161:Core/Src/main.c ****  		 // increment the index for all output arrays
 162:Core/Src/main.c ****  		 place+=1;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****  		  //TODO: Turn on LED 1 to signify the end of the operation
 165:Core/Src/main.c ****  		  GPIOB->ODR = 0b00000011;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****  		  //TODO: Hold the LEDs on for a 1s delay
 168:Core/Src/main.c ****  		  delay(1000);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****  	  //TODO: Turn off the LEDs
 173:Core/Src/main.c ****  	  GPIOB->ODR = 0b00000000;
 174:Core/Src/main.c ****    }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* Infinite loop */
 178:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 179:Core/Src/main.c ****   while (1)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     /* USER CODE END WHILE */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 184:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** 	  // TODO: Turn OFF LEDs
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   /* USER CODE END 3 */
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 5


 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** void SystemClock_Config(void)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 213:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 231:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief GPIO Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_GPIO_Init(void)
 247:Core/Src/main.c **** {
  26              		.loc 1 247 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 248:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 248 3 view .LVU1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 6


  39              		.loc 1 248 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 249:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 254:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 254 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 254 3 view .LVU4
  48              		.loc 1 254 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 254 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 254 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 254 3 view .LVU8
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 255 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 255 3 view .LVU10
  66              		.loc 1 255 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 255 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 255 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 255 3 view .LVU14
 256:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 256 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 256 3 view .LVU16
  83              		.loc 1 256 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 7


  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 256 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 256 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 256 3 view .LVU20
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 259:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 259 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 260:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 263:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 264:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 264 3 view .LVU22
 105              		.loc 1 264 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 265:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 266:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 266 3 is_stmt 1 view .LVU24
 109              		.loc 1 266 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 267:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 267 3 is_stmt 1 view .LVU26
 113              		.loc 1 267 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 268:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 268 3 is_stmt 1 view .LVU28
 117              		.loc 1 268 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 269:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 269 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 274:Core/Src/main.c **** }
 124              		.loc 1 274 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 8


 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_i2d
 137              		.global	__aeabi_ddiv
 138              		.global	__aeabi_d2lz
 139              		.global	__aeabi_lmul
 140              		.global	__aeabi_ldivmod
 141              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 142              		.align	1
 143              		.global	calculate_mandelbrot_fixed_point_arithmetic
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	calculate_mandelbrot_fixed_point_arithmetic:
 149              	.LVL3:
 150              	.LFB43:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 277:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 278:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 279:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 151              		.loc 1 279 96 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 80
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 279 96 is_stmt 0 view .LVU33
 156 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 157              	.LCFI2:
 158              		.cfi_def_cfa_offset 20
 159              		.cfi_offset 4, -20
 160              		.cfi_offset 5, -16
 161              		.cfi_offset 6, -12
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 DE46     		mov	lr, fp
 165 0004 5746     		mov	r7, r10
 166 0006 4E46     		mov	r6, r9
 167 0008 4546     		mov	r5, r8
 168 000a E0B5     		push	{r5, r6, r7, lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 36
 171              		.cfi_offset 8, -36
 172              		.cfi_offset 9, -32
 173              		.cfi_offset 10, -28
 174              		.cfi_offset 11, -24
 175 000c 95B0     		sub	sp, sp, #84
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 120
 178 000e 0500     		movs	r5, r0
 179 0010 0E90     		str	r0, [sp, #56]
 180 0012 0C00     		movs	r4, r1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 9


 181 0014 1392     		str	r2, [sp, #76]
 280:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 182              		.loc 1 280 3 is_stmt 1 view .LVU34
 183              	.LVL4:
 281:Core/Src/main.c ****   //TODO: Complete the function implementation
 282:Core/Src/main.c ****   int64_t x_0;
 184              		.loc 1 282 3 view .LVU35
 283:Core/Src/main.c ****   int64_t y_0;
 185              		.loc 1 283 3 view .LVU36
 284:Core/Src/main.c ****   int64_t x_i;
 186              		.loc 1 284 3 view .LVU37
 285:Core/Src/main.c ****   int64_t y_i;
 187              		.loc 1 285 3 view .LVU38
 286:Core/Src/main.c ****   int64_t iteration;
 188              		.loc 1 286 3 view .LVU39
 287:Core/Src/main.c ****   int64_t temp;
 189              		.loc 1 287 3 view .LVU40
 288:Core/Src/main.c ****   int64_t h_adj = 2000000.0/height;
 190              		.loc 1 288 3 view .LVU41
 191              		.loc 1 288 28 is_stmt 0 view .LVU42
 192 0016 0800     		movs	r0, r1
 193              	.LVL5:
 194              		.loc 1 288 28 view .LVU43
 195 0018 FFF7FEFF 		bl	__aeabi_i2d
 196              	.LVL6:
 197              		.loc 1 288 28 view .LVU44
 198 001c 0200     		movs	r2, r0
 199 001e 0B00     		movs	r3, r1
 200 0020 0020     		movs	r0, #0
 201 0022 6149     		ldr	r1, .L18
 202 0024 FFF7FEFF 		bl	__aeabi_ddiv
 203              	.LVL7:
 204              		.loc 1 288 11 view .LVU45
 205 0028 FFF7FEFF 		bl	__aeabi_d2lz
 206              	.LVL8:
 207 002c 0F90     		str	r0, [sp, #60]
 208 002e 1091     		str	r1, [sp, #64]
 209              	.LVL9:
 289:Core/Src/main.c ****   int64_t w_adj = 3500000.0/width;
 210              		.loc 1 289 3 is_stmt 1 view .LVU46
 211              		.loc 1 289 28 is_stmt 0 view .LVU47
 212 0030 2800     		movs	r0, r5
 213              	.LVL10:
 214              		.loc 1 289 28 view .LVU48
 215 0032 FFF7FEFF 		bl	__aeabi_i2d
 216              	.LVL11:
 217              		.loc 1 289 28 view .LVU49
 218 0036 0200     		movs	r2, r0
 219 0038 0B00     		movs	r3, r1
 220 003a 0020     		movs	r0, #0
 221 003c 5B49     		ldr	r1, .L18+4
 222 003e FFF7FEFF 		bl	__aeabi_ddiv
 223              	.LVL12:
 224              		.loc 1 289 11 view .LVU50
 225 0042 FFF7FEFF 		bl	__aeabi_d2lz
 226              	.LVL13:
 227 0046 1190     		str	r0, [sp, #68]
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 10


 228 0048 1291     		str	r1, [sp, #72]
 229              	.LVL14:
 290:Core/Src/main.c ****   for(int y=0; y<height; y++){
 230              		.loc 1 290 3 is_stmt 1 view .LVU51
 231              	.LBB7:
 232              		.loc 1 290 7 view .LVU52
 233              		.loc 1 290 11 is_stmt 0 view .LVU53
 234 004a 0023     		movs	r3, #0
 235 004c 9A46     		mov	r10, r3
 236              	.LBE7:
 280:Core/Src/main.c ****   //TODO: Complete the function implementation
 237              		.loc 1 280 12 view .LVU54
 238 004e 0022     		movs	r2, #0
 239 0050 0023     		movs	r3, #0
 240 0052 0A92     		str	r2, [sp, #40]
 241 0054 0B93     		str	r3, [sp, #44]
 242 0056 5346     		mov	r3, r10
 243 0058 0D93     		str	r3, [sp, #52]
 244              	.LBB10:
 245              		.loc 1 290 3 view .LVU55
 246 005a 91E0     		b	.L5
 247              	.LVL15:
 248              	.L9:
 249              	.LBB8:
 291:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 292:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 293:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 294:Core/Src/main.c **** 		  x_i = 0;
 295:Core/Src/main.c **** 		  y_i = 0;
 296:Core/Src/main.c **** 		  iteration = 0;
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** 		  while((iteration < max_iterations) && (((x_i*x_i+y_i*y_i)/1000000) <= 4000000)){
 299:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 250              		.loc 1 299 6 is_stmt 1 view .LVU56
 251              		.loc 1 299 23 is_stmt 0 view .LVU57
 252 005c 544A     		ldr	r2, .L18+8
 253 005e 0023     		movs	r3, #0
 254 0060 0098     		ldr	r0, [sp]
 255 0062 0199     		ldr	r1, [sp, #4]
 256 0064 FFF7FEFF 		bl	__aeabi_ldivmod
 257              	.LVL16:
 258 0068 0090     		str	r0, [sp]
 259 006a 0191     		str	r1, [sp, #4]
 260              		.loc 1 299 43 view .LVU58
 261 006c 514A     		ldr	r2, .L18+12
 262 006e 0123     		movs	r3, #1
 263 0070 5B42     		rsbs	r3, r3, #0
 264 0072 2000     		movs	r0, r4
 265 0074 2900     		movs	r1, r5
 266 0076 FFF7FEFF 		bl	__aeabi_ldivmod
 267              	.LVL17:
 268              		.loc 1 299 32 view .LVU59
 269 007a 009C     		ldr	r4, [sp]
 270 007c 019D     		ldr	r5, [sp, #4]
 271 007e 2418     		adds	r4, r4, r0
 272 0080 4D41     		adcs	r5, r5, r1
 273              		.loc 1 299 11 view .LVU60
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 11


 274 0082 049A     		ldr	r2, [sp, #16]
 275 0084 059B     		ldr	r3, [sp, #20]
 276 0086 A418     		adds	r4, r4, r2
 277 0088 5D41     		adcs	r5, r5, r3
 278              	.LVL18:
 300:Core/Src/main.c **** 			  y_i = ((2*x_i*y_i)/1000000) + y_0;
 279              		.loc 1 300 6 is_stmt 1 view .LVU61
 280              		.loc 1 300 19 is_stmt 0 view .LVU62
 281 008a 3200     		movs	r2, r6
 282 008c 3B00     		movs	r3, r7
 283 008e 4846     		mov	r0, r9
 284 0090 4146     		mov	r1, r8
 285 0092 FFF7FEFF 		bl	__aeabi_lmul
 286              	.LVL19:
 287              		.loc 1 300 24 view .LVU63
 288 0096 484A     		ldr	r2, .L18+16
 289 0098 0023     		movs	r3, #0
 290 009a FFF7FEFF 		bl	__aeabi_ldivmod
 291              	.LVL20:
 292              		.loc 1 300 10 view .LVU64
 293 009e 069E     		ldr	r6, [sp, #24]
 294 00a0 079F     		ldr	r7, [sp, #28]
 295              	.LVL21:
 296              		.loc 1 300 10 view .LVU65
 297 00a2 3618     		adds	r6, r6, r0
 298 00a4 4F41     		adcs	r7, r7, r1
 299              	.LVL22:
 301:Core/Src/main.c **** 			  x_i = temp;
 300              		.loc 1 301 6 is_stmt 1 view .LVU66
 302:Core/Src/main.c **** 			  iteration += 1;
 301              		.loc 1 302 6 view .LVU67
 302              		.loc 1 302 16 is_stmt 0 view .LVU68
 303 00a6 0122     		movs	r2, #1
 304 00a8 0023     		movs	r3, #0
 305 00aa 0298     		ldr	r0, [sp, #8]
 306 00ac 0399     		ldr	r1, [sp, #12]
 307 00ae 8018     		adds	r0, r0, r2
 308 00b0 5941     		adcs	r1, r1, r3
 309 00b2 0290     		str	r0, [sp, #8]
 310 00b4 0391     		str	r1, [sp, #12]
 311              	.LVL23:
 301:Core/Src/main.c **** 			  x_i = temp;
 312              		.loc 1 301 10 view .LVU69
 313 00b6 A146     		mov	r9, r4
 314 00b8 A846     		mov	r8, r5
 315              	.LVL24:
 316              	.L6:
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 317              		.loc 1 298 40 is_stmt 1 view .LVU70
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 318              		.loc 1 298 22 is_stmt 0 view .LVU71
 319 00ba 5346     		mov	r3, r10
 320 00bc DA17     		asrs	r2, r3, #31
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 321              		.loc 1 298 40 view .LVU72
 322 00be 0399     		ldr	r1, [sp, #12]
 323 00c0 8A42     		cmp	r2, r1
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 12


 324 00c2 21DD     		ble	.L15
 325              	.L14:
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 326              		.loc 1 298 49 discriminator 1 view .LVU73
 327 00c4 4A46     		mov	r2, r9
 328 00c6 4346     		mov	r3, r8
 329 00c8 4846     		mov	r0, r9
 330 00ca 4146     		mov	r1, r8
 331 00cc FFF7FEFF 		bl	__aeabi_lmul
 332              	.LVL25:
 333 00d0 0090     		str	r0, [sp]
 334 00d2 0191     		str	r1, [sp, #4]
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 335              		.loc 1 298 57 discriminator 1 view .LVU74
 336 00d4 3200     		movs	r2, r6
 337 00d6 3B00     		movs	r3, r7
 338 00d8 3000     		movs	r0, r6
 339 00da 3900     		movs	r1, r7
 340 00dc FFF7FEFF 		bl	__aeabi_lmul
 341              	.LVL26:
 342 00e0 0400     		movs	r4, r0
 343 00e2 0D00     		movs	r5, r1
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 344              		.loc 1 298 53 discriminator 1 view .LVU75
 345 00e4 009A     		ldr	r2, [sp]
 346 00e6 019B     		ldr	r3, [sp, #4]
 347 00e8 1219     		adds	r2, r2, r4
 348 00ea 6B41     		adcs	r3, r3, r5
 349 00ec 0892     		str	r2, [sp, #32]
 350 00ee 0993     		str	r3, [sp, #36]
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 351              		.loc 1 298 40 discriminator 1 view .LVU76
 352 00f0 E921     		movs	r1, #233
 353 00f2 8900     		lsls	r1, r1, #2
 354 00f4 8B42     		cmp	r3, r1
 355 00f6 0DDA     		bge	.L7
 356 00f8 3049     		ldr	r1, .L18+20
 357 00fa 8B42     		cmp	r3, r1
 358 00fc AED1     		bne	.L9
 359 00fe 304B     		ldr	r3, .L18+24
 360 0100 089A     		ldr	r2, [sp, #32]
 361 0102 9A42     		cmp	r2, r3
 362 0104 AAD9     		bls	.L9
 363 0106 05E0     		b	.L7
 364              	.L15:
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 365              		.loc 1 298 40 view .LVU77
 366 0108 0298     		ldr	r0, [sp, #8]
 367 010a 0399     		ldr	r1, [sp, #12]
 368 010c 8A42     		cmp	r2, r1
 369 010e 01D1     		bne	.L7
 370 0110 8342     		cmp	r3, r0
 371 0112 D7D8     		bhi	.L14
 372              	.L7:
 303:Core/Src/main.c **** 		  }
 304:Core/Src/main.c **** 		  mandelbrot_sum += iteration;
 373              		.loc 1 304 20 view .LVU78
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 13


 374 0114 0C9C     		ldr	r4, [sp, #48]
 375              		.loc 1 304 5 is_stmt 1 view .LVU79
 376              		.loc 1 304 20 is_stmt 0 view .LVU80
 377 0116 0A9A     		ldr	r2, [sp, #40]
 378 0118 0B9B     		ldr	r3, [sp, #44]
 379 011a 0298     		ldr	r0, [sp, #8]
 380 011c 0399     		ldr	r1, [sp, #12]
 381 011e 1218     		adds	r2, r2, r0
 382 0120 4B41     		adcs	r3, r3, r1
 383 0122 0A92     		str	r2, [sp, #40]
 384 0124 0B93     		str	r3, [sp, #44]
 385              	.LVL27:
 291:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 386              		.loc 1 291 27 is_stmt 1 discriminator 2 view .LVU81
 387 0126 0134     		adds	r4, r4, #1
 388              	.LVL28:
 389              	.L12:
 291:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 390              		.loc 1 291 18 discriminator 1 view .LVU82
 391 0128 0E9B     		ldr	r3, [sp, #56]
 392 012a 9C42     		cmp	r4, r3
 393 012c 24DA     		bge	.L16
 292:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 394              		.loc 1 292 5 view .LVU83
 292:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 395              		.loc 1 292 13 is_stmt 0 view .LVU84
 396 012e E117     		asrs	r1, r4, #31
 397 0130 119A     		ldr	r2, [sp, #68]
 398 0132 129B     		ldr	r3, [sp, #72]
 399 0134 2000     		movs	r0, r4
 400 0136 FFF7FEFF 		bl	__aeabi_lmul
 401              	.LVL29:
 292:Core/Src/main.c **** 		  y_0 = (y*h_adj) - (1000000);
 402              		.loc 1 292 9 view .LVU85
 403 013a 224A     		ldr	r2, .L18+28
 404 013c 0123     		movs	r3, #1
 405 013e 5B42     		rsbs	r3, r3, #0
 406 0140 8018     		adds	r0, r0, r2
 407 0142 5941     		adcs	r1, r1, r3
 408 0144 0490     		str	r0, [sp, #16]
 409 0146 0591     		str	r1, [sp, #20]
 410              	.LVL30:
 293:Core/Src/main.c **** 		  x_i = 0;
 411              		.loc 1 293 5 is_stmt 1 view .LVU86
 293:Core/Src/main.c **** 		  x_i = 0;
 412              		.loc 1 293 13 is_stmt 0 view .LVU87
 413 0148 0D98     		ldr	r0, [sp, #52]
 414              	.LVL31:
 293:Core/Src/main.c **** 		  x_i = 0;
 415              		.loc 1 293 13 view .LVU88
 416 014a C117     		asrs	r1, r0, #31
 417 014c 0F9A     		ldr	r2, [sp, #60]
 418 014e 109B     		ldr	r3, [sp, #64]
 419 0150 FFF7FEFF 		bl	__aeabi_lmul
 420              	.LVL32:
 293:Core/Src/main.c **** 		  x_i = 0;
 421              		.loc 1 293 9 view .LVU89
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 14


 422 0154 174A     		ldr	r2, .L18+12
 423 0156 0123     		movs	r3, #1
 424 0158 5B42     		rsbs	r3, r3, #0
 425 015a 8018     		adds	r0, r0, r2
 426 015c 5941     		adcs	r1, r1, r3
 427 015e 0690     		str	r0, [sp, #24]
 428 0160 0791     		str	r1, [sp, #28]
 429              	.LVL33:
 294:Core/Src/main.c **** 		  y_i = 0;
 430              		.loc 1 294 5 is_stmt 1 view .LVU90
 295:Core/Src/main.c **** 		  iteration = 0;
 431              		.loc 1 295 5 view .LVU91
 296:Core/Src/main.c **** 
 432              		.loc 1 296 5 view .LVU92
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 433              		.loc 1 298 5 view .LVU93
 296:Core/Src/main.c **** 
 434              		.loc 1 296 15 is_stmt 0 view .LVU94
 435 0162 0022     		movs	r2, #0
 436 0164 0023     		movs	r3, #0
 437 0166 0292     		str	r2, [sp, #8]
 438 0168 0393     		str	r3, [sp, #12]
 295:Core/Src/main.c **** 		  iteration = 0;
 439              		.loc 1 295 9 view .LVU95
 440 016a 0026     		movs	r6, #0
 441 016c 0027     		movs	r7, #0
 294:Core/Src/main.c **** 		  y_i = 0;
 442              		.loc 1 294 9 view .LVU96
 443 016e 0023     		movs	r3, #0
 444 0170 9946     		mov	r9, r3
 445 0172 9846     		mov	r8, r3
 446 0174 0C94     		str	r4, [sp, #48]
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 447              		.loc 1 298 10 view .LVU97
 448 0176 A0E7     		b	.L6
 449              	.LVL34:
 450              	.L16:
 298:Core/Src/main.c **** 			  temp = ((x_i*x_i)/1000000)-((y_i*y_i)/1000000) + (x_0);
 451              		.loc 1 298 10 view .LVU98
 452              	.LBE8:
 290:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 453              		.loc 1 290 27 discriminator 2 view .LVU99
 454 0178 5C46     		mov	r4, fp
 455              	.LVL35:
 290:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 456              		.loc 1 290 27 is_stmt 1 discriminator 2 view .LVU100
 457 017a 0D9B     		ldr	r3, [sp, #52]
 458 017c 0133     		adds	r3, r3, #1
 459 017e 0D93     		str	r3, [sp, #52]
 460              	.LVL36:
 461              	.L5:
 290:Core/Src/main.c **** 	  for(int x=0; x<width; x++){
 462              		.loc 1 290 17 discriminator 1 view .LVU101
 463 0180 0D9B     		ldr	r3, [sp, #52]
 464 0182 A342     		cmp	r3, r4
 465 0184 06DA     		bge	.L17
 466              	.LBB9:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 15


 291:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 467              		.loc 1 291 12 is_stmt 0 view .LVU102
 468 0186 0023     		movs	r3, #0
 469 0188 2200     		movs	r2, r4
 470 018a 1C00     		movs	r4, r3
 471              	.LVL37:
 291:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 472              		.loc 1 291 12 view .LVU103
 473 018c 139B     		ldr	r3, [sp, #76]
 474 018e 9A46     		mov	r10, r3
 475 0190 9346     		mov	fp, r2
 476 0192 C9E7     		b	.L12
 477              	.LVL38:
 478              	.L17:
 291:Core/Src/main.c **** 		  x_0 = (x*w_adj) - (2500000);
 479              		.loc 1 291 12 view .LVU104
 480              	.LBE9:
 481              	.LBE10:
 305:Core/Src/main.c **** 	  }
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   return mandelbrot_sum;
 482              		.loc 1 307 3 is_stmt 1 view .LVU105
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** }
 483              		.loc 1 310 1 is_stmt 0 view .LVU106
 484 0194 0A98     		ldr	r0, [sp, #40]
 485 0196 0B99     		ldr	r1, [sp, #44]
 486 0198 15B0     		add	sp, sp, #84
 487              		@ sp needed
 488              	.LVL39:
 489              		.loc 1 310 1 view .LVU107
 490 019a F0BC     		pop	{r4, r5, r6, r7}
 491 019c BB46     		mov	fp, r7
 492 019e B246     		mov	r10, r6
 493 01a0 A946     		mov	r9, r5
 494 01a2 A046     		mov	r8, r4
 495 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 496              	.L19:
 497 01a6 C046     		.align	2
 498              	.L18:
 499 01a8 80843E41 		.word	1094616192
 500 01ac F0B34A41 		.word	1095414768
 501 01b0 40420F00 		.word	1000000
 502 01b4 C0BDF0FF 		.word	-1000000
 503 01b8 20A10700 		.word	500000
 504 01bc A3030000 		.word	931
 505 01c0 3F82A352 		.word	1386447423
 506 01c4 60DAD9FF 		.word	-2500000
 507              		.cfi_endproc
 508              	.LFE43:
 510              		.global	__aeabi_dmul
 511              		.global	__aeabi_dsub
 512              		.global	__aeabi_dadd
 513              		.global	__aeabi_dcmpgt
 514              		.global	__aeabi_dcmple
 515              		.global	__aeabi_ul2d
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 16


 516              		.global	__aeabi_d2ulz
 517              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 518              		.align	1
 519              		.global	calculate_mandelbrot_double
 520              		.syntax unified
 521              		.code	16
 522              		.thumb_func
 524              	calculate_mandelbrot_double:
 525              	.LVL40:
 526              	.LFB44:
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 313:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 527              		.loc 1 313 80 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 80
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		.loc 1 313 80 is_stmt 0 view .LVU109
 532 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 20
 535              		.cfi_offset 4, -20
 536              		.cfi_offset 5, -16
 537              		.cfi_offset 6, -12
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 DE46     		mov	lr, fp
 541 0004 5746     		mov	r7, r10
 542 0006 4E46     		mov	r6, r9
 543 0008 4546     		mov	r5, r8
 544 000a E0B5     		push	{r5, r6, r7, lr}
 545              	.LCFI6:
 546              		.cfi_def_cfa_offset 36
 547              		.cfi_offset 8, -36
 548              		.cfi_offset 9, -32
 549              		.cfi_offset 10, -28
 550              		.cfi_offset 11, -24
 551 000c 95B0     		sub	sp, sp, #84
 552              	.LCFI7:
 553              		.cfi_def_cfa_offset 120
 554 000e 0E00     		movs	r6, r1
 555 0010 9046     		mov	r8, r2
 314:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 556              		.loc 1 314 5 is_stmt 1 view .LVU110
 557              	.LVL41:
 315:Core/Src/main.c ****     //TODO: Complete the function implementation
 316:Core/Src/main.c ****     double x_0;
 558              		.loc 1 316 5 view .LVU111
 317:Core/Src/main.c ****     double y_0;
 559              		.loc 1 317 5 view .LVU112
 318:Core/Src/main.c ****     double x_i;
 560              		.loc 1 318 5 view .LVU113
 319:Core/Src/main.c ****     double y_i;
 561              		.loc 1 319 5 view .LVU114
 320:Core/Src/main.c ****     double iteration;
 562              		.loc 1 320 5 view .LVU115
 321:Core/Src/main.c ****     double temp;
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 17


 563              		.loc 1 321 5 view .LVU116
 322:Core/Src/main.c ****     double w_adj=3.5/width;
 564              		.loc 1 322 5 view .LVU117
 565              		.loc 1 322 21 is_stmt 0 view .LVU118
 566 0012 FFF7FEFF 		bl	__aeabi_i2d
 567              	.LVL42:
 568              		.loc 1 322 21 view .LVU119
 569 0016 0400     		movs	r4, r0
 570 0018 0D00     		movs	r5, r1
 571 001a 0E94     		str	r4, [sp, #56]
 572 001c 0F95     		str	r5, [sp, #60]
 573              		.loc 1 322 12 view .LVU120
 574 001e 0200     		movs	r2, r0
 575 0020 0B00     		movs	r3, r1
 576 0022 0020     		movs	r0, #0
 577 0024 6049     		ldr	r1, .L32
 578 0026 FFF7FEFF 		bl	__aeabi_ddiv
 579              	.LVL43:
 580 002a 1090     		str	r0, [sp, #64]
 581 002c 1191     		str	r1, [sp, #68]
 582              	.LVL44:
 323:Core/Src/main.c ****     double h_adj=2.0/width;
 583              		.loc 1 323 5 is_stmt 1 view .LVU121
 584              		.loc 1 323 12 is_stmt 0 view .LVU122
 585 002e 2200     		movs	r2, r4
 586 0030 2B00     		movs	r3, r5
 587 0032 0020     		movs	r0, #0
 588              	.LVL45:
 589              		.loc 1 323 12 view .LVU123
 590 0034 8021     		movs	r1, #128
 591 0036 C905     		lsls	r1, r1, #23
 592 0038 FFF7FEFF 		bl	__aeabi_ddiv
 593              	.LVL46:
 594 003c 1290     		str	r0, [sp, #72]
 595 003e 1391     		str	r1, [sp, #76]
 596              	.LVL47:
 324:Core/Src/main.c ****     for(double y=0; y<height; y++){
 597              		.loc 1 324 5 is_stmt 1 view .LVU124
 598              	.LBB11:
 599              		.loc 1 324 9 view .LVU125
 600              		.loc 1 324 16 is_stmt 0 view .LVU126
 601 0040 0023     		movs	r3, #0
 602 0042 0024     		movs	r4, #0
 603 0044 0C93     		str	r3, [sp, #48]
 604 0046 0D94     		str	r4, [sp, #52]
 605              	.LBE11:
 314:Core/Src/main.c ****     //TODO: Complete the function implementation
 606              		.loc 1 314 14 view .LVU127
 607 0048 0023     		movs	r3, #0
 608 004a 9A46     		mov	r10, r3
 609 004c 9946     		mov	r9, r3
 610              	.LBB14:
 611              		.loc 1 324 5 view .LVU128
 612 004e 91E0     		b	.L21
 613              	.LVL48:
 614              	.L25:
 615              	.LBB12:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 18


 325:Core/Src/main.c ****        for(double x=0; x<width; x++){
 326:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 327:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 328:Core/Src/main.c ****     	  x_i = 0;
 329:Core/Src/main.c ****     	  y_i = 0;
 330:Core/Src/main.c ****           iteration = 0;
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     	  while((iteration < max_iterations) && ((x_i*x_i) + (y_i*y_i) <= 4)){
 333:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 616              		.loc 1 333 7 is_stmt 1 view .LVU129
 617              		.loc 1 333 23 is_stmt 0 view .LVU130
 618 0050 049A     		ldr	r2, [sp, #16]
 619 0052 059B     		ldr	r3, [sp, #20]
 620 0054 0298     		ldr	r0, [sp, #8]
 621 0056 0399     		ldr	r1, [sp, #12]
 622 0058 FFF7FEFF 		bl	__aeabi_dsub
 623              	.LVL49:
 624              		.loc 1 333 12 view .LVU131
 625 005c 069A     		ldr	r2, [sp, #24]
 626 005e 079B     		ldr	r3, [sp, #28]
 627 0060 FFF7FEFF 		bl	__aeabi_dadd
 628              	.LVL50:
 629 0064 0290     		str	r0, [sp, #8]
 630 0066 0391     		str	r1, [sp, #12]
 631              	.LVL51:
 334:Core/Src/main.c ****     		y_i = (2*x_i*y_i) + y_0;
 632              		.loc 1 334 7 is_stmt 1 view .LVU132
 633              		.loc 1 334 15 is_stmt 0 view .LVU133
 634 0068 3200     		movs	r2, r6
 635 006a 3B00     		movs	r3, r7
 636 006c 3000     		movs	r0, r6
 637              	.LVL52:
 638              		.loc 1 334 15 view .LVU134
 639 006e 3900     		movs	r1, r7
 640 0070 FFF7FEFF 		bl	__aeabi_dadd
 641              	.LVL53:
 642              		.loc 1 334 19 view .LVU135
 643 0074 2200     		movs	r2, r4
 644 0076 2B00     		movs	r3, r5
 645 0078 FFF7FEFF 		bl	__aeabi_dmul
 646              	.LVL54:
 647              		.loc 1 334 11 view .LVU136
 648 007c 089A     		ldr	r2, [sp, #32]
 649 007e 099B     		ldr	r3, [sp, #36]
 650 0080 FFF7FEFF 		bl	__aeabi_dadd
 651              	.LVL55:
 652 0084 0400     		movs	r4, r0
 653              	.LVL56:
 654              		.loc 1 334 11 view .LVU137
 655 0086 0D00     		movs	r5, r1
 656              	.LVL57:
 335:Core/Src/main.c ****     		x_i = temp;
 657              		.loc 1 335 7 is_stmt 1 view .LVU138
 336:Core/Src/main.c ****     		iteration += 1;
 658              		.loc 1 336 7 view .LVU139
 659              		.loc 1 336 17 is_stmt 0 view .LVU140
 660 0088 0022     		movs	r2, #0
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 19


 661 008a 484B     		ldr	r3, .L32+4
 662 008c 0098     		ldr	r0, [sp]
 663 008e 0199     		ldr	r1, [sp, #4]
 664 0090 FFF7FEFF 		bl	__aeabi_dadd
 665              	.LVL58:
 666 0094 0090     		str	r0, [sp]
 667 0096 0191     		str	r1, [sp, #4]
 668              	.LVL59:
 335:Core/Src/main.c ****     		x_i = temp;
 669              		.loc 1 335 11 view .LVU141
 670 0098 029E     		ldr	r6, [sp, #8]
 671 009a 039F     		ldr	r7, [sp, #12]
 672              	.LVL60:
 673              	.L22:
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 674              		.loc 1 332 43 is_stmt 1 view .LVU142
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 675              		.loc 1 332 25 is_stmt 0 view .LVU143
 676 009c 4046     		mov	r0, r8
 677 009e FFF7FEFF 		bl	__aeabi_i2d
 678              	.LVL61:
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 679              		.loc 1 332 43 view .LVU144
 680 00a2 009A     		ldr	r2, [sp]
 681 00a4 019B     		ldr	r3, [sp, #4]
 682 00a6 FFF7FEFF 		bl	__aeabi_dcmpgt
 683              	.LVL62:
 684 00aa 0028     		cmp	r0, #0
 685 00ac 1BD0     		beq	.L23
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 686              		.loc 1 332 51 discriminator 1 view .LVU145
 687 00ae 3200     		movs	r2, r6
 688 00b0 3B00     		movs	r3, r7
 689 00b2 3000     		movs	r0, r6
 690 00b4 3900     		movs	r1, r7
 691 00b6 FFF7FEFF 		bl	__aeabi_dmul
 692              	.LVL63:
 693 00ba 0290     		str	r0, [sp, #8]
 694 00bc 0391     		str	r1, [sp, #12]
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 695              		.loc 1 332 63 discriminator 1 view .LVU146
 696 00be 2200     		movs	r2, r4
 697 00c0 2B00     		movs	r3, r5
 698 00c2 2000     		movs	r0, r4
 699 00c4 2900     		movs	r1, r5
 700 00c6 FFF7FEFF 		bl	__aeabi_dmul
 701              	.LVL64:
 702 00ca 0200     		movs	r2, r0
 703 00cc 0B00     		movs	r3, r1
 704 00ce 0492     		str	r2, [sp, #16]
 705 00d0 0593     		str	r3, [sp, #20]
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 706              		.loc 1 332 57 discriminator 1 view .LVU147
 707 00d2 0298     		ldr	r0, [sp, #8]
 708 00d4 0399     		ldr	r1, [sp, #12]
 709 00d6 FFF7FEFF 		bl	__aeabi_dadd
 710              	.LVL65:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 20


 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 711              		.loc 1 332 43 discriminator 1 view .LVU148
 712 00da 0022     		movs	r2, #0
 713 00dc 344B     		ldr	r3, .L32+8
 714 00de FFF7FEFF 		bl	__aeabi_dcmple
 715              	.LVL66:
 716 00e2 0028     		cmp	r0, #0
 717 00e4 B4D1     		bne	.L25
 718              	.L23:
 337:Core/Src/main.c ****     	  }
 338:Core/Src/main.c ****     	  mandelbrot_sum += iteration;
 719              		.loc 1 338 8 is_stmt 1 view .LVU149
 720              		.loc 1 338 23 is_stmt 0 view .LVU150
 721 00e6 5046     		mov	r0, r10
 722 00e8 5946     		mov	r1, fp
 723 00ea FFF7FEFF 		bl	__aeabi_ul2d
 724              	.LVL67:
 725 00ee 009A     		ldr	r2, [sp]
 726 00f0 019B     		ldr	r3, [sp, #4]
 727 00f2 FFF7FEFF 		bl	__aeabi_dadd
 728              	.LVL68:
 729 00f6 FFF7FEFF 		bl	__aeabi_d2ulz
 730              	.LVL69:
 731 00fa 8246     		mov	r10, r0
 732              	.LVL70:
 733              		.loc 1 338 23 view .LVU151
 734 00fc 8B46     		mov	fp, r1
 735              	.LVL71:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 736              		.loc 1 325 34 is_stmt 1 discriminator 2 view .LVU152
 737 00fe 0022     		movs	r2, #0
 738 0100 2A4B     		ldr	r3, .L32+4
 739 0102 0A98     		ldr	r0, [sp, #40]
 740 0104 0B99     		ldr	r1, [sp, #44]
 741              	.LVL72:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 742              		.loc 1 325 34 is_stmt 0 discriminator 2 view .LVU153
 743 0106 FFF7FEFF 		bl	__aeabi_dadd
 744              	.LVL73:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 745              		.loc 1 325 34 discriminator 2 view .LVU154
 746 010a 0A90     		str	r0, [sp, #40]
 747 010c 0B91     		str	r1, [sp, #44]
 748              	.LVL74:
 749              	.L27:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 750              		.loc 1 325 25 is_stmt 1 discriminator 1 view .LVU155
 751 010e 0A9A     		ldr	r2, [sp, #40]
 752 0110 0B9B     		ldr	r3, [sp, #44]
 753 0112 0E98     		ldr	r0, [sp, #56]
 754 0114 0F99     		ldr	r1, [sp, #60]
 755 0116 FFF7FEFF 		bl	__aeabi_dcmpgt
 756              	.LVL75:
 757 011a 0028     		cmp	r0, #0
 758 011c 20D0     		beq	.L30
 326:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 759              		.loc 1 326 8 view .LVU156
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 21


 326:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 760              		.loc 1 326 16 is_stmt 0 view .LVU157
 761 011e 109A     		ldr	r2, [sp, #64]
 762 0120 119B     		ldr	r3, [sp, #68]
 763 0122 0A98     		ldr	r0, [sp, #40]
 764 0124 0B99     		ldr	r1, [sp, #44]
 765 0126 FFF7FEFF 		bl	__aeabi_dmul
 766              	.LVL76:
 326:Core/Src/main.c ****     	  y_0 = (y*h_adj) - 1.0;
 767              		.loc 1 326 12 view .LVU158
 768 012a 0022     		movs	r2, #0
 769 012c 214B     		ldr	r3, .L32+12
 770 012e FFF7FEFF 		bl	__aeabi_dsub
 771              	.LVL77:
 772 0132 0690     		str	r0, [sp, #24]
 773 0134 0791     		str	r1, [sp, #28]
 774              	.LVL78:
 327:Core/Src/main.c ****     	  x_i = 0;
 775              		.loc 1 327 8 is_stmt 1 view .LVU159
 327:Core/Src/main.c ****     	  x_i = 0;
 776              		.loc 1 327 16 is_stmt 0 view .LVU160
 777 0136 129A     		ldr	r2, [sp, #72]
 778 0138 139B     		ldr	r3, [sp, #76]
 779 013a 0C98     		ldr	r0, [sp, #48]
 780 013c 0D99     		ldr	r1, [sp, #52]
 781              	.LVL79:
 327:Core/Src/main.c ****     	  x_i = 0;
 782              		.loc 1 327 16 view .LVU161
 783 013e FFF7FEFF 		bl	__aeabi_dmul
 784              	.LVL80:
 327:Core/Src/main.c ****     	  x_i = 0;
 785              		.loc 1 327 12 view .LVU162
 786 0142 0022     		movs	r2, #0
 787 0144 194B     		ldr	r3, .L32+4
 788 0146 FFF7FEFF 		bl	__aeabi_dsub
 789              	.LVL81:
 790 014a 0890     		str	r0, [sp, #32]
 791 014c 0991     		str	r1, [sp, #36]
 792              	.LVL82:
 328:Core/Src/main.c ****     	  y_i = 0;
 793              		.loc 1 328 8 is_stmt 1 view .LVU163
 329:Core/Src/main.c ****           iteration = 0;
 794              		.loc 1 329 8 view .LVU164
 330:Core/Src/main.c **** 
 795              		.loc 1 330 11 view .LVU165
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 796              		.loc 1 332 8 view .LVU166
 330:Core/Src/main.c **** 
 797              		.loc 1 330 21 is_stmt 0 view .LVU167
 798 014e 0023     		movs	r3, #0
 799 0150 0024     		movs	r4, #0
 800 0152 1E00     		movs	r6, r3
 801 0154 2700     		movs	r7, r4
 802 0156 0096     		str	r6, [sp]
 803 0158 0197     		str	r7, [sp, #4]
 329:Core/Src/main.c ****           iteration = 0;
 804              		.loc 1 329 12 view .LVU168
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 22


 805 015a 1C00     		movs	r4, r3
 806 015c 3D00     		movs	r5, r7
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 807              		.loc 1 332 13 view .LVU169
 808 015e 9DE7     		b	.L22
 809              	.LVL83:
 810              	.L30:
 332:Core/Src/main.c ****     		temp = (x_i*x_i)-(y_i*y_i) + x_0;
 811              		.loc 1 332 13 view .LVU170
 812              	.LBE12:
 324:Core/Src/main.c ****        for(double x=0; x<width; x++){
 813              		.loc 1 324 32 discriminator 2 view .LVU171
 814 0160 4E46     		mov	r6, r9
 815 0162 D946     		mov	r9, fp
 816              	.LVL84:
 324:Core/Src/main.c ****        for(double x=0; x<width; x++){
 817              		.loc 1 324 32 is_stmt 1 discriminator 2 view .LVU172
 818 0164 0022     		movs	r2, #0
 819 0166 114B     		ldr	r3, .L32+4
 820 0168 0C98     		ldr	r0, [sp, #48]
 821 016a 0D99     		ldr	r1, [sp, #52]
 822 016c FFF7FEFF 		bl	__aeabi_dadd
 823              	.LVL85:
 824 0170 0C90     		str	r0, [sp, #48]
 825 0172 0D91     		str	r1, [sp, #52]
 826              	.LVL86:
 827              	.L21:
 324:Core/Src/main.c ****        for(double x=0; x<width; x++){
 828              		.loc 1 324 22 discriminator 1 view .LVU173
 829 0174 3000     		movs	r0, r6
 830 0176 FFF7FEFF 		bl	__aeabi_i2d
 831              	.LVL87:
 832 017a 0C9A     		ldr	r2, [sp, #48]
 833 017c 0D9B     		ldr	r3, [sp, #52]
 834 017e FFF7FEFF 		bl	__aeabi_dcmpgt
 835              	.LVL88:
 836 0182 0028     		cmp	r0, #0
 837 0184 06D0     		beq	.L31
 838              	.LBB13:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 839              		.loc 1 325 19 is_stmt 0 view .LVU174
 840 0186 0023     		movs	r3, #0
 841 0188 0024     		movs	r4, #0
 842 018a 0A93     		str	r3, [sp, #40]
 843 018c 0B94     		str	r4, [sp, #44]
 844 018e CB46     		mov	fp, r9
 845 0190 B146     		mov	r9, r6
 846              	.LVL89:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 847              		.loc 1 325 19 view .LVU175
 848 0192 BCE7     		b	.L27
 849              	.LVL90:
 850              	.L31:
 325:Core/Src/main.c ****     	  x_0 = (x*w_adj) - 2.5;
 851              		.loc 1 325 19 view .LVU176
 852              	.LBE13:
 853              	.LBE14:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 23


 339:Core/Src/main.c ****        }
 340:Core/Src/main.c ****     }
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****     return mandelbrot_sum;
 854              		.loc 1 342 5 is_stmt 1 view .LVU177
 343:Core/Src/main.c **** }
 855              		.loc 1 343 1 is_stmt 0 view .LVU178
 856 0194 5046     		mov	r0, r10
 857 0196 4946     		mov	r1, r9
 858 0198 15B0     		add	sp, sp, #84
 859              		@ sp needed
 860              	.LVL91:
 861              	.LVL92:
 862              	.LVL93:
 863              	.LVL94:
 864              		.loc 1 343 1 view .LVU179
 865 019a F0BC     		pop	{r4, r5, r6, r7}
 866 019c BB46     		mov	fp, r7
 867 019e B246     		mov	r10, r6
 868 01a0 A946     		mov	r9, r5
 869 01a2 A046     		mov	r8, r4
 870 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 871              	.L33:
 872 01a6 C046     		.align	2
 873              	.L32:
 874 01a8 00000C40 		.word	1074528256
 875 01ac 0000F03F 		.word	1072693248
 876 01b0 00001040 		.word	1074790400
 877 01b4 00000440 		.word	1074003968
 878              		.cfi_endproc
 879              	.LFE44:
 881              		.section	.text.Error_Handler,"ax",%progbits
 882              		.align	1
 883              		.global	Error_Handler
 884              		.syntax unified
 885              		.code	16
 886              		.thumb_func
 888              	Error_Handler:
 889              	.LFB45:
 344:Core/Src/main.c **** /* USER CODE END 4 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 348:Core/Src/main.c ****   * @retval None
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c **** void Error_Handler(void)
 351:Core/Src/main.c **** {
 890              		.loc 1 351 1 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ Volatile: function does not return.
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 352:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 353:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 354:Core/Src/main.c ****   __disable_irq();
 896              		.loc 1 354 3 view .LVU181
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 24


 897              	.LBB15:
 898              	.LBI15:
 899              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 25


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 26


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 900              		.loc 2 140 27 view .LVU182
 901              	.LBB16:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 902              		.loc 2 142 3 view .LVU183
 903              		.syntax divided
 904              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 905 0000 72B6     		cpsid i
 906              	@ 0 "" 2
 907              		.thumb
 908              		.syntax unified
 909              	.L35:
 910              	.LBE16:
 911              	.LBE15:
 355:Core/Src/main.c ****   while (1)
 912              		.loc 1 355 3 view .LVU184
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****   }
 913              		.loc 1 357 3 view .LVU185
 355:Core/Src/main.c ****   while (1)
 914              		.loc 1 355 9 view .LVU186
 915 0002 FEE7     		b	.L35
 916              		.cfi_endproc
 917              	.LFE45:
 919              		.section	.text.SystemClock_Config,"ax",%progbits
 920              		.align	1
 921              		.global	SystemClock_Config
 922              		.syntax unified
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 27


 923              		.code	16
 924              		.thumb_func
 926              	SystemClock_Config:
 927              	.LFB41:
 208:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 928              		.loc 1 208 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 64
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 00B5     		push	{lr}
 933              	.LCFI8:
 934              		.cfi_def_cfa_offset 4
 935              		.cfi_offset 14, -4
 936 0002 91B0     		sub	sp, sp, #68
 937              	.LCFI9:
 938              		.cfi_def_cfa_offset 72
 209:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 939              		.loc 1 209 3 view .LVU188
 209:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 940              		.loc 1 209 22 is_stmt 0 view .LVU189
 941 0004 3022     		movs	r2, #48
 942 0006 0021     		movs	r1, #0
 943 0008 04A8     		add	r0, sp, #16
 944 000a FFF7FEFF 		bl	memset
 945              	.LVL95:
 210:Core/Src/main.c **** 
 946              		.loc 1 210 3 is_stmt 1 view .LVU190
 210:Core/Src/main.c **** 
 947              		.loc 1 210 22 is_stmt 0 view .LVU191
 948 000e 1022     		movs	r2, #16
 949 0010 0021     		movs	r1, #0
 950 0012 6846     		mov	r0, sp
 951 0014 FFF7FEFF 		bl	memset
 952              	.LVL96:
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 953              		.loc 1 215 3 is_stmt 1 view .LVU192
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 954              		.loc 1 215 36 is_stmt 0 view .LVU193
 955 0018 0223     		movs	r3, #2
 956 001a 0493     		str	r3, [sp, #16]
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 957              		.loc 1 216 3 is_stmt 1 view .LVU194
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 958              		.loc 1 216 30 is_stmt 0 view .LVU195
 959 001c 0122     		movs	r2, #1
 960 001e 0792     		str	r2, [sp, #28]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 961              		.loc 1 217 3 is_stmt 1 view .LVU196
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 962              		.loc 1 217 41 is_stmt 0 view .LVU197
 963 0020 0F32     		adds	r2, r2, #15
 964 0022 0892     		str	r2, [sp, #32]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 965              		.loc 1 218 3 is_stmt 1 view .LVU198
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 966              		.loc 1 218 34 is_stmt 0 view .LVU199
 967 0024 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 28


 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 968              		.loc 1 219 3 is_stmt 1 view .LVU200
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 969              		.loc 1 220 3 view .LVU201
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 970              		.loc 1 220 32 is_stmt 0 view .LVU202
 971 0026 A023     		movs	r3, #160
 972 0028 9B03     		lsls	r3, r3, #14
 973 002a 0E93     		str	r3, [sp, #56]
 221:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 974              		.loc 1 221 3 is_stmt 1 view .LVU203
 222:Core/Src/main.c ****   {
 975              		.loc 1 222 3 view .LVU204
 222:Core/Src/main.c ****   {
 976              		.loc 1 222 7 is_stmt 0 view .LVU205
 977 002c 04A8     		add	r0, sp, #16
 978 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 979              	.LVL97:
 222:Core/Src/main.c ****   {
 980              		.loc 1 222 6 discriminator 1 view .LVU206
 981 0032 0028     		cmp	r0, #0
 982 0034 0ED1     		bne	.L39
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 983              		.loc 1 229 3 is_stmt 1 view .LVU207
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 984              		.loc 1 229 31 is_stmt 0 view .LVU208
 985 0036 0723     		movs	r3, #7
 986 0038 0093     		str	r3, [sp]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 987              		.loc 1 231 3 is_stmt 1 view .LVU209
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 988              		.loc 1 231 34 is_stmt 0 view .LVU210
 989 003a 053B     		subs	r3, r3, #5
 990 003c 0193     		str	r3, [sp, #4]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 991              		.loc 1 232 3 is_stmt 1 view .LVU211
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 992              		.loc 1 232 35 is_stmt 0 view .LVU212
 993 003e 0023     		movs	r3, #0
 994 0040 0293     		str	r3, [sp, #8]
 233:Core/Src/main.c **** 
 995              		.loc 1 233 3 is_stmt 1 view .LVU213
 233:Core/Src/main.c **** 
 996              		.loc 1 233 36 is_stmt 0 view .LVU214
 997 0042 0393     		str	r3, [sp, #12]
 235:Core/Src/main.c ****   {
 998              		.loc 1 235 3 is_stmt 1 view .LVU215
 235:Core/Src/main.c ****   {
 999              		.loc 1 235 7 is_stmt 0 view .LVU216
 1000 0044 0121     		movs	r1, #1
 1001 0046 6846     		mov	r0, sp
 1002 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1003              	.LVL98:
 235:Core/Src/main.c ****   {
 1004              		.loc 1 235 6 discriminator 1 view .LVU217
 1005 004c 0028     		cmp	r0, #0
 1006 004e 03D1     		bne	.L40
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 29


 239:Core/Src/main.c **** 
 1007              		.loc 1 239 1 view .LVU218
 1008 0050 11B0     		add	sp, sp, #68
 1009              		@ sp needed
 1010 0052 00BD     		pop	{pc}
 1011              	.L39:
 224:Core/Src/main.c ****   }
 1012              		.loc 1 224 5 is_stmt 1 view .LVU219
 1013 0054 FFF7FEFF 		bl	Error_Handler
 1014              	.LVL99:
 1015              	.L40:
 237:Core/Src/main.c ****   }
 1016              		.loc 1 237 5 view .LVU220
 1017 0058 FFF7FEFF 		bl	Error_Handler
 1018              	.LVL100:
 1019              		.cfi_endproc
 1020              	.LFE41:
 1022              		.global	__aeabi_uidiv
 1023              		.section	.text.delay,"ax",%progbits
 1024              		.align	1
 1025              		.global	delay
 1026              		.syntax unified
 1027              		.code	16
 1028              		.thumb_func
 1030              	delay:
 1031              	.LVL101:
 1032              	.LFB46:
 358:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /**
 362:Core/Src/main.c ****  * Basic delay function
 363:Core/Src/main.c ****  */
 364:Core/Src/main.c **** void delay(uint32_t delay_time){
 1033              		.loc 1 364 32 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 8
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		.loc 1 364 32 is_stmt 0 view .LVU222
 1038 0000 00B5     		push	{lr}
 1039              	.LCFI10:
 1040              		.cfi_def_cfa_offset 4
 1041              		.cfi_offset 14, -4
 1042 0002 83B0     		sub	sp, sp, #12
 1043              	.LCFI11:
 1044              		.cfi_def_cfa_offset 16
 365:Core/Src/main.c **** 	uint32_t i = (delay_time*8000)/8;
 1045              		.loc 1 365 2 is_stmt 1 view .LVU223
 1046              		.loc 1 365 26 is_stmt 0 view .LVU224
 1047 0004 4301     		lsls	r3, r0, #5
 1048 0006 1B1A     		subs	r3, r3, r0
 1049 0008 9B00     		lsls	r3, r3, #2
 1050 000a 1818     		adds	r0, r3, r0
 1051              	.LVL102:
 1052              		.loc 1 365 26 view .LVU225
 1053 000c 8001     		lsls	r0, r0, #6
 1054              	.LVL103:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 30


 366:Core/Src/main.c **** 	uint32_t i_in = i/1000;
 1055              		.loc 1 366 2 is_stmt 1 view .LVU226
 1056              		.loc 1 366 11 is_stmt 0 view .LVU227
 1057 000e FA21     		movs	r1, #250
 1058 0010 4901     		lsls	r1, r1, #5
 1059 0012 FFF7FEFF 		bl	__aeabi_uidiv
 1060              	.LVL104:
 367:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1061              		.loc 1 367 2 is_stmt 1 view .LVU228
 1062              	.LBB17:
 1063              		.loc 1 367 6 view .LVU229
 1064              		.loc 1 367 24 is_stmt 0 view .LVU230
 1065 0016 0023     		movs	r3, #0
 1066 0018 0093     		str	r3, [sp]
 1067              		.loc 1 367 2 view .LVU231
 1068 001a 08E0     		b	.L42
 1069              	.L44:
 1070              	.LBB18:
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** 	  }
 1071              		.loc 1 370 4 is_stmt 1 view .LVU232
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1072              		.loc 1 368 42 discriminator 3 view .LVU233
 1073 001c 019B     		ldr	r3, [sp, #4]
 1074 001e 0133     		adds	r3, r3, #1
 1075 0020 0193     		str	r3, [sp, #4]
 1076              	.L43:
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1077              		.loc 1 368 32 discriminator 1 view .LVU234
 1078 0022 019B     		ldr	r3, [sp, #4]
 1079 0024 8342     		cmp	r3, r0
 1080 0026 F9D3     		bcc	.L44
 1081              	.LBE18:
 367:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1082              		.loc 1 367 38 discriminator 2 view .LVU235
 1083 0028 009B     		ldr	r3, [sp]
 1084 002a 0133     		adds	r3, r3, #1
 1085 002c 0093     		str	r3, [sp]
 1086              	.L42:
 367:Core/Src/main.c **** 	for(volatile uint32_t j=0; j<1000; j++){
 1087              		.loc 1 367 30 discriminator 1 view .LVU236
 1088 002e 009A     		ldr	r2, [sp]
 1089 0030 FA23     		movs	r3, #250
 1090 0032 9B00     		lsls	r3, r3, #2
 1091 0034 9A42     		cmp	r2, r3
 1092 0036 02D2     		bcs	.L46
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1093              		.loc 1 368 4 view .LVU237
 1094              	.LBB19:
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1095              		.loc 1 368 8 view .LVU238
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
 1096              		.loc 1 368 26 is_stmt 0 view .LVU239
 1097 0038 0023     		movs	r3, #0
 1098 003a 0193     		str	r3, [sp, #4]
 368:Core/Src/main.c **** 	  for(volatile uint32_t m=0; m<(i_in); m++){
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 31


 1099              		.loc 1 368 4 view .LVU240
 1100 003c F1E7     		b	.L43
 1101              	.L46:
 1102              	.LBE19:
 1103              	.LBE17:
 371:Core/Src/main.c **** 	}
 372:Core/Src/main.c **** }
 1104              		.loc 1 372 1 view .LVU241
 1105 003e 03B0     		add	sp, sp, #12
 1106              		@ sp needed
 1107 0040 00BD     		pop	{pc}
 1108              		.cfi_endproc
 1109              	.LFE46:
 1111              		.global	__aeabi_uldivmod
 1112              		.section	.text.main,"ax",%progbits
 1113              		.align	1
 1114              		.global	main
 1115              		.syntax unified
 1116              		.code	16
 1117              		.thumb_func
 1119              	main:
 1120              	.LFB40:
  96:Core/Src/main.c **** 
 1121              		.loc 1 96 1 is_stmt 1 view -0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 16
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1126              	.LCFI12:
 1127              		.cfi_def_cfa_offset 20
 1128              		.cfi_offset 4, -20
 1129              		.cfi_offset 5, -16
 1130              		.cfi_offset 6, -12
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 DE46     		mov	lr, fp
 1134 0004 5746     		mov	r7, r10
 1135 0006 4E46     		mov	r6, r9
 1136 0008 4546     		mov	r5, r8
 1137 000a E0B5     		push	{r5, r6, r7, lr}
 1138              	.LCFI13:
 1139              		.cfi_def_cfa_offset 36
 1140              		.cfi_offset 8, -36
 1141              		.cfi_offset 9, -32
 1142              		.cfi_offset 10, -28
 1143              		.cfi_offset 11, -24
 1144 000c 85B0     		sub	sp, sp, #20
 1145              	.LCFI14:
 1146              		.cfi_def_cfa_offset 56
 105:Core/Src/main.c **** 
 1147              		.loc 1 105 3 view .LVU243
 1148 000e FFF7FEFF 		bl	HAL_Init
 1149              	.LVL105:
 112:Core/Src/main.c **** 
 1150              		.loc 1 112 3 view .LVU244
 1151 0012 FFF7FEFF 		bl	SystemClock_Config
 1152              	.LVL106:
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 32


 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1153              		.loc 1 119 3 view .LVU245
 1154 0016 FFF7FEFF 		bl	MX_GPIO_Init
 1155              	.LVL107:
 125:Core/Src/main.c **** 
 1156              		.loc 1 125 3 view .LVU246
 125:Core/Src/main.c **** 
 1157              		.loc 1 125 14 is_stmt 0 view .LVU247
 1158 001a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1159              	.LVL108:
 125:Core/Src/main.c **** 
 1160              		.loc 1 125 12 discriminator 1 view .LVU248
 1161 001e 484B     		ldr	r3, .L51
 1162 0020 1860     		str	r0, [r3]
 1163 0022 0022     		movs	r2, #0
 1164 0024 5A60     		str	r2, [r3, #4]
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1165              		.loc 1 128 4 is_stmt 1 view .LVU249
 1166              	.LBB20:
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1167              		.loc 1 128 8 view .LVU250
 1168              	.LVL109:
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1169              		.loc 1 128 12 is_stmt 0 view .LVU251
 1170 0026 0023     		movs	r3, #0
 1171 0028 1D00     		movs	r5, r3
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1172              		.loc 1 128 4 view .LVU252
 1173 002a 85E0     		b	.L48
 1174              	.LVL110:
 1175              	.L49:
 1176              	.LBB21:
 130:Core/Src/main.c **** 
 1177              		.loc 1 130 5 is_stmt 1 view .LVU253
 130:Core/Src/main.c **** 
 1178              		.loc 1 130 16 is_stmt 0 view .LVU254
 1179 002c 454B     		ldr	r3, .L51+4
 1180 002e 9846     		mov	r8, r3
 1181 0030 0123     		movs	r3, #1
 1182 0032 4246     		mov	r2, r8
 1183 0034 5361     		str	r3, [r2, #20]
 133:Core/Src/main.c **** 
 1184              		.loc 1 133 5 is_stmt 1 view .LVU255
 133:Core/Src/main.c **** 
 1185              		.loc 1 133 27 is_stmt 0 view .LVU256
 1186 0036 444B     		ldr	r3, .L51+8
 1187 0038 AA00     		lsls	r2, r5, #2
 1188 003a D358     		ldr	r3, [r2, r3]
 133:Core/Src/main.c **** 
 1189              		.loc 1 133 14 view .LVU257
 1190 003c 434A     		ldr	r2, .L51+12
 1191 003e 9146     		mov	r9, r2
 1192 0040 1360     		str	r3, [r2]
 136:Core/Src/main.c **** 
 1193              		.loc 1 136 6 is_stmt 1 view .LVU258
 136:Core/Src/main.c **** 
 1194              		.loc 1 136 19 is_stmt 0 view .LVU259
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 33


 1195 0042 FFF7FEFF 		bl	HAL_GetTick
 1196              	.LVL111:
 136:Core/Src/main.c **** 
 1197              		.loc 1 136 17 discriminator 1 view .LVU260
 1198 0046 424E     		ldr	r6, .L51+16
 1199 0048 3060     		str	r0, [r6]
 1200 004a 0027     		movs	r7, #0
 1201 004c 7760     		str	r7, [r6, #4]
 139:Core/Src/main.c ****  		  width = imag_dim;
 1202              		.loc 1 139 6 is_stmt 1 view .LVU261
 139:Core/Src/main.c ****  		  width = imag_dim;
 1203              		.loc 1 139 13 is_stmt 0 view .LVU262
 1204 004e 4B46     		mov	r3, r9
 1205 0050 1868     		ldr	r0, [r3]
 1206 0052 404B     		ldr	r3, .L51+20
 1207 0054 9B46     		mov	fp, r3
 1208 0056 1860     		str	r0, [r3]
 140:Core/Src/main.c ****  		 //checksum = calculate_mandelbrot_double(imag_dim, imag_dim, MAX_ITER);
 1209              		.loc 1 140 6 is_stmt 1 view .LVU263
 140:Core/Src/main.c ****  		 //checksum = calculate_mandelbrot_double(imag_dim, imag_dim, MAX_ITER);
 1210              		.loc 1 140 12 is_stmt 0 view .LVU264
 1211 0058 3F4C     		ldr	r4, .L51+24
 1212 005a 2060     		str	r0, [r4]
 142:Core/Src/main.c **** 
 1213              		.loc 1 142 6 is_stmt 1 view .LVU265
 142:Core/Src/main.c **** 
 1214              		.loc 1 142 17 is_stmt 0 view .LVU266
 1215 005c 6422     		movs	r2, #100
 1216 005e 0100     		movs	r1, r0
 1217 0060 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1218              	.LVL112:
 142:Core/Src/main.c **** 
 1219              		.loc 1 142 15 discriminator 1 view .LVU267
 1220 0064 3D4B     		ldr	r3, .L51+28
 1221 0066 9A46     		mov	r10, r3
 1222 0068 1860     		str	r0, [r3]
 1223 006a 5960     		str	r1, [r3, #4]
 145:Core/Src/main.c **** 
 1224              		.loc 1 145 6 is_stmt 1 view .LVU268
 145:Core/Src/main.c **** 
 1225              		.loc 1 145 17 is_stmt 0 view .LVU269
 1226 006c FFF7FEFF 		bl	HAL_GetTick
 1227              	.LVL113:
 145:Core/Src/main.c **** 
 1228              		.loc 1 145 17 discriminator 1 view .LVU270
 1229 0070 0090     		str	r0, [sp]
 1230 0072 0197     		str	r7, [sp, #4]
 145:Core/Src/main.c **** 
 1231              		.loc 1 145 15 discriminator 1 view .LVU271
 1232 0074 3A4B     		ldr	r3, .L51+32
 1233 0076 0098     		ldr	r0, [sp]
 1234 0078 0199     		ldr	r1, [sp, #4]
 1235 007a 1860     		str	r0, [r3]
 1236 007c 5960     		str	r1, [r3, #4]
 148:Core/Src/main.c ****           //calculate number of clock cycles
 1237              		.loc 1 148 6 is_stmt 1 view .LVU272
 148:Core/Src/main.c ****           //calculate number of clock cycles
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 34


 1238              		.loc 1 148 30 is_stmt 0 view .LVU273
 1239 007e 3268     		ldr	r2, [r6]
 1240 0080 7368     		ldr	r3, [r6, #4]
 1241 0082 801A     		subs	r0, r0, r2
 1242 0084 9941     		sbcs	r1, r1, r3
 1243 0086 0600     		movs	r6, r0
 1244 0088 0F00     		movs	r7, r1
 148:Core/Src/main.c ****           //calculate number of clock cycles
 1245              		.loc 1 148 19 view .LVU274
 1246 008a 364B     		ldr	r3, .L51+36
 1247 008c 1E60     		str	r6, [r3]
 1248 008e 5F60     		str	r7, [r3, #4]
 150:Core/Src/main.c **** 
 1249              		.loc 1 150 6 is_stmt 1 view .LVU275
 150:Core/Src/main.c **** 
 1250              		.loc 1 150 34 is_stmt 0 view .LVU276
 1251 0090 2B4B     		ldr	r3, .L51
 1252 0092 1A68     		ldr	r2, [r3]
 1253 0094 5B68     		ldr	r3, [r3, #4]
 1254 0096 FFF7FEFF 		bl	__aeabi_lmul
 1255              	.LVL114:
 150:Core/Src/main.c **** 
 1256              		.loc 1 150 44 view .LVU277
 1257 009a FA22     		movs	r2, #250
 1258 009c 9200     		lsls	r2, r2, #2
 1259 009e 0023     		movs	r3, #0
 1260 00a0 FFF7FEFF 		bl	__aeabi_uldivmod
 1261              	.LVL115:
 150:Core/Src/main.c **** 
 1262              		.loc 1 150 19 view .LVU278
 1263 00a4 304B     		ldr	r3, .L51+40
 1264 00a6 0290     		str	r0, [sp, #8]
 1265 00a8 1860     		str	r0, [r3]
 1266 00aa 0391     		str	r1, [sp, #12]
 1267 00ac 5960     		str	r1, [r3, #4]
 153:Core/Src/main.c ****  		  throughput = num_pixels/(time_elapsed/1000);
 1268              		.loc 1 153 6 is_stmt 1 view .LVU279
 153:Core/Src/main.c ****  		  throughput = num_pixels/(time_elapsed/1000);
 1269              		.loc 1 153 25 is_stmt 0 view .LVU280
 1270 00ae 5B46     		mov	r3, fp
 1271 00b0 1B68     		ldr	r3, [r3]
 1272 00b2 2468     		ldr	r4, [r4]
 1273 00b4 5C43     		muls	r4, r3
 1274 00b6 E317     		asrs	r3, r4, #31
 1275 00b8 9B46     		mov	fp, r3
 153:Core/Src/main.c ****  		  throughput = num_pixels/(time_elapsed/1000);
 1276              		.loc 1 153 17 view .LVU281
 1277 00ba 2C4B     		ldr	r3, .L51+44
 1278 00bc 1C60     		str	r4, [r3]
 1279 00be 5846     		mov	r0, fp
 1280 00c0 5860     		str	r0, [r3, #4]
 154:Core/Src/main.c **** 
 1281              		.loc 1 154 6 is_stmt 1 view .LVU282
 154:Core/Src/main.c **** 
 1282              		.loc 1 154 43 is_stmt 0 view .LVU283
 1283 00c2 FA22     		movs	r2, #250
 1284 00c4 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 35


 1285 00c6 0023     		movs	r3, #0
 1286 00c8 3000     		movs	r0, r6
 1287 00ca 3900     		movs	r1, r7
 1288 00cc FFF7FEFF 		bl	__aeabi_uldivmod
 1289              	.LVL116:
 1290 00d0 0200     		movs	r2, r0
 1291 00d2 0B00     		movs	r3, r1
 154:Core/Src/main.c **** 
 1292              		.loc 1 154 29 view .LVU284
 1293 00d4 2000     		movs	r0, r4
 1294 00d6 5946     		mov	r1, fp
 1295 00d8 FFF7FEFF 		bl	__aeabi_uldivmod
 1296              	.LVL117:
 1297 00dc 8346     		mov	fp, r0
 154:Core/Src/main.c **** 
 1298              		.loc 1 154 17 view .LVU285
 1299 00de 244B     		ldr	r3, .L51+48
 1300 00e0 1860     		str	r0, [r3]
 1301 00e2 5960     		str	r1, [r3, #4]
 156:Core/Src/main.c ****  		 time_elapsed_arr[place] = time_elapsed;
 1302              		.loc 1 156 5 is_stmt 1 view .LVU286
 156:Core/Src/main.c ****  		 time_elapsed_arr[place] = time_elapsed;
 1303              		.loc 1 156 17 is_stmt 0 view .LVU287
 1304 00e4 234C     		ldr	r4, .L51+52
 1305 00e6 2368     		ldr	r3, [r4]
 156:Core/Src/main.c ****  		 time_elapsed_arr[place] = time_elapsed;
 1306              		.loc 1 156 25 view .LVU288
 1307 00e8 234A     		ldr	r2, .L51+56
 1308 00ea 9900     		lsls	r1, r3, #2
 1309 00ec 4846     		mov	r0, r9
 1310 00ee 0068     		ldr	r0, [r0]
 1311 00f0 8850     		str	r0, [r1, r2]
 157:Core/Src/main.c ****  	     clock_cycles_arr[place] = clock_cycles;
 1312              		.loc 1 157 5 is_stmt 1 view .LVU289
 157:Core/Src/main.c ****  	     clock_cycles_arr[place] = clock_cycles;
 1313              		.loc 1 157 29 is_stmt 0 view .LVU290
 1314 00f2 224A     		ldr	r2, .L51+60
 1315 00f4 D800     		lsls	r0, r3, #3
 1316 00f6 8446     		mov	ip, r0
 1317 00f8 6244     		add	r2, r2, ip
 1318 00fa 1660     		str	r6, [r2]
 1319 00fc 5760     		str	r7, [r2, #4]
 158:Core/Src/main.c ****  		 throughput_arr[place] = throughput;
 1320              		.loc 1 158 8 is_stmt 1 view .LVU291
 158:Core/Src/main.c ****  		 throughput_arr[place] = throughput;
 1321              		.loc 1 158 32 is_stmt 0 view .LVU292
 1322 00fe 204A     		ldr	r2, .L51+64
 1323 0100 6244     		add	r2, r2, ip
 1324 0102 029E     		ldr	r6, [sp, #8]
 1325 0104 1660     		str	r6, [r2]
 1326 0106 039E     		ldr	r6, [sp, #12]
 1327 0108 5660     		str	r6, [r2, #4]
 159:Core/Src/main.c ****  		 checksum_arr[place] = checksum;
 1328              		.loc 1 159 5 is_stmt 1 view .LVU293
 159:Core/Src/main.c ****  		 checksum_arr[place] = checksum;
 1329              		.loc 1 159 27 is_stmt 0 view .LVU294
 1330 010a 1E4A     		ldr	r2, .L51+68
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 36


 1331 010c 5846     		mov	r0, fp
 1332 010e 8850     		str	r0, [r1, r2]
 160:Core/Src/main.c ****  		 // increment the index for all output arrays
 1333              		.loc 1 160 5 is_stmt 1 view .LVU295
 160:Core/Src/main.c ****  		 // increment the index for all output arrays
 1334              		.loc 1 160 25 is_stmt 0 view .LVU296
 1335 0110 1D4A     		ldr	r2, .L51+72
 1336 0112 6244     		add	r2, r2, ip
 1337 0114 5146     		mov	r1, r10
 1338 0116 0868     		ldr	r0, [r1]
 1339 0118 4968     		ldr	r1, [r1, #4]
 1340 011a 1060     		str	r0, [r2]
 1341 011c 5160     		str	r1, [r2, #4]
 162:Core/Src/main.c **** 
 1342              		.loc 1 162 5 is_stmt 1 view .LVU297
 162:Core/Src/main.c **** 
 1343              		.loc 1 162 10 is_stmt 0 view .LVU298
 1344 011e 0133     		adds	r3, r3, #1
 1345 0120 2360     		str	r3, [r4]
 165:Core/Src/main.c **** 
 1346              		.loc 1 165 6 is_stmt 1 view .LVU299
 165:Core/Src/main.c **** 
 1347              		.loc 1 165 17 is_stmt 0 view .LVU300
 1348 0122 0323     		movs	r3, #3
 1349 0124 4246     		mov	r2, r8
 1350 0126 5361     		str	r3, [r2, #20]
 168:Core/Src/main.c **** 
 1351              		.loc 1 168 6 is_stmt 1 view .LVU301
 1352 0128 FA20     		movs	r0, #250
 1353 012a 8000     		lsls	r0, r0, #2
 1354 012c FFF7FEFF 		bl	delay
 1355              	.LVL118:
 173:Core/Src/main.c ****    }
 1356              		.loc 1 173 5 view .LVU302
 173:Core/Src/main.c ****    }
 1357              		.loc 1 173 16 is_stmt 0 view .LVU303
 1358 0130 4346     		mov	r3, r8
 1359 0132 0027     		movs	r7, #0
 1360 0134 5F61     		str	r7, [r3, #20]
 1361              	.LBE21:
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1362              		.loc 1 128 23 is_stmt 1 discriminator 3 view .LVU304
 1363 0136 0135     		adds	r5, r5, #1
 1364              	.LVL119:
 1365              	.L48:
 128:Core/Src/main.c ****  	  //TODO: Turn on LED 0 to signify the start of the operation
 1366              		.loc 1 128 18 discriminator 1 view .LVU305
 1367 0138 042D     		cmp	r5, #4
 1368 013a 00DC     		bgt	.LCB1171
 1369 013c 76E7     		b	.L49	@long jump
 1370              	.LCB1171:
 1371              	.L50:
 1372              	.LBE20:
 179:Core/Src/main.c ****   {
 1373              		.loc 1 179 3 view .LVU306
 199:Core/Src/main.c ****   /* USER CODE END 3 */
 1374              		.loc 1 199 3 view .LVU307
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 37


 179:Core/Src/main.c ****   {
 1375              		.loc 1 179 9 view .LVU308
 1376 013e FEE7     		b	.L50
 1377              	.L52:
 1378              		.align	2
 1379              	.L51:
 1380 0140 00000000 		.word	cpu_freq
 1381 0144 00040048 		.word	1207960576
 1382 0148 00000000 		.word	test_values
 1383 014c 00000000 		.word	imag_dim
 1384 0150 00000000 		.word	start_time
 1385 0154 00000000 		.word	height
 1386 0158 00000000 		.word	width
 1387 015c 00000000 		.word	checksum
 1388 0160 00000000 		.word	end_time
 1389 0164 00000000 		.word	time_elapsed
 1390 0168 00000000 		.word	clock_cycles
 1391 016c 00000000 		.word	num_pixels
 1392 0170 00000000 		.word	throughput
 1393 0174 00000000 		.word	place
 1394 0178 00000000 		.word	imag_dim_arr
 1395 017c 00000000 		.word	time_elapsed_arr
 1396 0180 00000000 		.word	clock_cycles_arr
 1397 0184 00000000 		.word	throughput_arr
 1398 0188 00000000 		.word	checksum_arr
 1399              		.cfi_endproc
 1400              	.LFE40:
 1402              		.global	place
 1403              		.section	.bss.place,"aw",%nobits
 1404              		.align	2
 1407              	place:
 1408 0000 00000000 		.space	4
 1409              		.global	throughput
 1410              		.section	.bss.throughput,"aw",%nobits
 1411              		.align	3
 1414              	throughput:
 1415 0000 00000000 		.space	8
 1415      00000000 
 1416              		.global	num_pixels
 1417              		.section	.bss.num_pixels,"aw",%nobits
 1418              		.align	3
 1421              	num_pixels:
 1422 0000 00000000 		.space	8
 1422      00000000 
 1423              		.global	width
 1424              		.section	.bss.width,"aw",%nobits
 1425              		.align	2
 1428              	width:
 1429 0000 00000000 		.space	4
 1430              		.global	height
 1431              		.section	.bss.height,"aw",%nobits
 1432              		.align	2
 1435              	height:
 1436 0000 00000000 		.space	4
 1437              		.global	clock_cycles
 1438              		.section	.bss.clock_cycles,"aw",%nobits
 1439              		.align	3
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 38


 1442              	clock_cycles:
 1443 0000 00000000 		.space	8
 1443      00000000 
 1444              		.global	cpu_freq
 1445              		.section	.bss.cpu_freq,"aw",%nobits
 1446              		.align	3
 1449              	cpu_freq:
 1450 0000 00000000 		.space	8
 1450      00000000 
 1451              		.global	time_elapsed
 1452              		.section	.bss.time_elapsed,"aw",%nobits
 1453              		.align	3
 1456              	time_elapsed:
 1457 0000 00000000 		.space	8
 1457      00000000 
 1458              		.global	end_time
 1459              		.section	.bss.end_time,"aw",%nobits
 1460              		.align	3
 1463              	end_time:
 1464 0000 00000000 		.space	8
 1464      00000000 
 1465              		.global	start_time
 1466              		.section	.bss.start_time,"aw",%nobits
 1467              		.align	3
 1470              	start_time:
 1471 0000 00000000 		.space	8
 1471      00000000 
 1472              		.global	checksum_arr
 1473              		.section	.bss.checksum_arr,"aw",%nobits
 1474              		.align	3
 1477              	checksum_arr:
 1478 0000 00000000 		.space	200
 1478      00000000 
 1478      00000000 
 1478      00000000 
 1478      00000000 
 1479              		.global	throughput_arr
 1480              		.section	.bss.throughput_arr,"aw",%nobits
 1481              		.align	2
 1484              	throughput_arr:
 1485 0000 00000000 		.space	100
 1485      00000000 
 1485      00000000 
 1485      00000000 
 1485      00000000 
 1486              		.global	clock_cycles_arr
 1487              		.section	.bss.clock_cycles_arr,"aw",%nobits
 1488              		.align	3
 1491              	clock_cycles_arr:
 1492 0000 00000000 		.space	200
 1492      00000000 
 1492      00000000 
 1492      00000000 
 1492      00000000 
 1493              		.global	time_elapsed_arr
 1494              		.section	.bss.time_elapsed_arr,"aw",%nobits
 1495              		.align	3
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 39


 1498              	time_elapsed_arr:
 1499 0000 00000000 		.space	200
 1499      00000000 
 1499      00000000 
 1499      00000000 
 1499      00000000 
 1500              		.global	imag_dim_arr
 1501              		.section	.bss.imag_dim_arr,"aw",%nobits
 1502              		.align	2
 1505              	imag_dim_arr:
 1506 0000 00000000 		.space	100
 1506      00000000 
 1506      00000000 
 1506      00000000 
 1506      00000000 
 1507              		.global	test_values
 1508              		.section	.data.test_values,"aw"
 1509              		.align	2
 1512              	test_values:
 1513 0000 80000000 		.word	128
 1514 0004 A0000000 		.word	160
 1515 0008 C0000000 		.word	192
 1516 000c E0000000 		.word	224
 1517 0010 00010000 		.word	256
 1518              		.global	checksum
 1519              		.section	.bss.checksum,"aw",%nobits
 1520              		.align	3
 1523              	checksum:
 1524 0000 00000000 		.space	8
 1524      00000000 
 1525              		.global	imag_dim
 1526              		.section	.bss.imag_dim,"aw",%nobits
 1527              		.align	2
 1530              	imag_dim:
 1531 0000 00000000 		.space	4
 1532              		.global	iter
 1533              		.section	.bss.iter,"aw",%nobits
 1534              		.align	2
 1537              	iter:
 1538 0000 00000000 		.space	4
 1539              		.global	iter_values
 1540              		.section	.data.iter_values,"aw"
 1541              		.align	2
 1544              	iter_values:
 1545 0000 64000000 		.word	100
 1546 0004 FA000000 		.word	250
 1547 0008 F4010000 		.word	500
 1548 000c EE020000 		.word	750
 1549 0010 E8030000 		.word	1000
 1550              		.text
 1551              	.Letext0:
 1552              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1553              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1554              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1555              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1556              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1557              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 40


 1558              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1559              		.file 10 "<built-in>"
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:142    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:148    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:499    .text.calculate_mandelbrot_fixed_point_arithmetic:000001a8 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:518    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:524    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:874    .text.calculate_mandelbrot_double:000001a8 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:882    .text.Error_Handler:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:888    .text.Error_Handler:00000000 Error_Handler
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:920    .text.SystemClock_Config:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:926    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1024   .text.delay:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1030   .text.delay:00000000 delay
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1113   .text.main:00000000 $t
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1119   .text.main:00000000 main
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1380   .text.main:00000140 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1449   .bss.cpu_freq:00000000 cpu_freq
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1512   .data.test_values:00000000 test_values
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1530   .bss.imag_dim:00000000 imag_dim
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1470   .bss.start_time:00000000 start_time
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1435   .bss.height:00000000 height
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1428   .bss.width:00000000 width
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1523   .bss.checksum:00000000 checksum
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1463   .bss.end_time:00000000 end_time
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1456   .bss.time_elapsed:00000000 time_elapsed
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1442   .bss.clock_cycles:00000000 clock_cycles
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1421   .bss.num_pixels:00000000 num_pixels
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1414   .bss.throughput:00000000 throughput
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1407   .bss.place:00000000 place
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1505   .bss.imag_dim_arr:00000000 imag_dim_arr
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1498   .bss.time_elapsed_arr:00000000 time_elapsed_arr
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1491   .bss.clock_cycles_arr:00000000 clock_cycles_arr
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1484   .bss.throughput_arr:00000000 throughput_arr
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1477   .bss.checksum_arr:00000000 checksum_arr
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1404   .bss.place:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1411   .bss.throughput:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1418   .bss.num_pixels:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1425   .bss.width:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1432   .bss.height:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1439   .bss.clock_cycles:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1446   .bss.cpu_freq:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1453   .bss.time_elapsed:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1460   .bss.end_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1467   .bss.start_time:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1474   .bss.checksum_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1481   .bss.throughput_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1488   .bss.clock_cycles_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1495   .bss.time_elapsed_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1502   .bss.imag_dim_arr:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1509   .data.test_values:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1520   .bss.checksum:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1527   .bss.imag_dim:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1537   .bss.iter:00000000 iter
ARM GAS  C:\Users\chris\AppData\Local\Temp\cceURmXm.s 			page 42


C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1534   .bss.iter:00000000 $d
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1544   .data.iter_values:00000000 iter_values
C:\Users\chris\AppData\Local\Temp\cceURmXm.s:1541   .data.iter_values:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2lz
__aeabi_lmul
__aeabi_ldivmod
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_ul2d
__aeabi_d2ulz
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_uidiv
__aeabi_uldivmod
HAL_Init
HAL_RCC_GetHCLKFreq
HAL_GetTick
